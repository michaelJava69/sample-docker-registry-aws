2020/07/10 16:25:25 [INFO] Terraform version: 0.12.23  
2020/07/10 16:25:25 [INFO] Go runtime version: go1.12.13
2020/07/10 16:25:25 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 16:25:25 [DEBUG] Attempting to open CLI config file: /Users/michaelugbechie/.terraformrc
2020/07/10 16:25:25 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/10 16:25:25 [INFO] CLI command args: []string{"apply"}
2020/07/10 16:25:25 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/10 16:25:25 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/10 16:25:25 [DEBUG] New state was assigned lineage "daeb0194-14ac-0605-5b75-50333bf4799a"
2020/07/10 16:25:25 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/10 16:25:25 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/10 16:25:25 [DEBUG] checking for provider in "."
2020/07/10 16:25:25 [DEBUG] checking for provider in "/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23"
2020/07/10 16:25:25 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/10 16:25:25 [DEBUG] found provider "terraform-provider-aws_v2.69.0_x4"
2020/07/10 16:25:25 [DEBUG] found provider "terraform-provider-null_v2.1.2_x4"
2020/07/10 16:25:25 [DEBUG] found provider "terraform-provider-template_v2.1.2_x4"
2020/07/10 16:25:25 [DEBUG] found valid plugin: "aws", "2.69.0", "/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4"
2020/07/10 16:25:25 [DEBUG] found valid plugin: "null", "2.1.2", "/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-null_v2.1.2_x4"
2020/07/10 16:25:25 [DEBUG] found valid plugin: "template", "2.1.2", "/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4"
2020/07/10 16:25:25 [DEBUG] checking for provisioner in "."
2020/07/10 16:25:25 [DEBUG] checking for provisioner in "/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23"
2020/07/10 16:25:25 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/10 16:25:25 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/10 16:25:25 [INFO] backend/local: starting Apply operation
2020/07/10 16:25:25 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/10 16:25:25 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/10 16:25:25 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/10 16:25:25 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/10 16:25:25 [TRACE] statemgr.Filesystem: existing snapshot has lineage "e1b86c9f-53fe-0b9e-3afc-06bbbc77e089" serial 173
2020/07/10 16:25:25 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/10 16:25:25 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/10 16:25:25 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/10 16:25:25 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/10 16:25:25 [TRACE] statemgr.Filesystem: read snapshot with lineage "e1b86c9f-53fe-0b9e-3afc-06bbbc77e089" serial 173
2020/07/10 16:25:25 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/10 16:25:25 [TRACE] backend/local: building context for current working directory
2020/07/10 16:25:25 [TRACE] terraform.NewContext: starting
2020/07/10 16:25:25 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/10 16:25:26 [TRACE] terraform.NewContext: loading provider schemas
2020/07/10 16:25:26 [TRACE] LoadSchemas: retrieving schema for provider type "aws"
2020-07-10T16:25:26.127+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:25:26.153+0100 [DEBUG] plugin: starting plugin: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 args=[/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4]
2020-07-10T16:25:26.160+0100 [DEBUG] plugin: plugin started: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 pid=4128
2020-07-10T16:25:26.160+0100 [DEBUG] plugin: waiting for RPC address: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4
2020-07-10T16:25:26.186+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:25:26.186+0100
2020-07-10T16:25:26.212+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: plugin address: address=/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin927660399 network=unix timestamp=2020-07-10T16:25:26.212+0100
2020-07-10T16:25:26.212+0100 [DEBUG] plugin: using plugin: version=5
2020/07/10 16:25:26 [TRACE] GRPCProvider: GetSchema
2020/07/10 16:25:26 [TRACE] GRPCProvider: Close
2020-07-10T16:25:26.327+0100 [DEBUG] plugin: plugin process exited: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 pid=4128
2020-07-10T16:25:26.327+0100 [DEBUG] plugin: plugin exited
2020/07/10 16:25:26 [TRACE] LoadSchemas: retrieving schema for provider type "template"
2020-07-10T16:25:26.327+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:25:26.349+0100 [DEBUG] plugin: starting plugin: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 args=[/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4]
2020-07-10T16:25:26.351+0100 [DEBUG] plugin: plugin started: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 pid=4130
2020-07-10T16:25:26.351+0100 [DEBUG] plugin: waiting for RPC address: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4
2020-07-10T16:25:26.358+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:25:26.358+0100
2020-07-10T16:25:26.381+0100 [DEBUG] plugin: using plugin: version=5
2020-07-10T16:25:26.381+0100 [DEBUG] plugin.terraform-provider-template_v2.1.2_x4: plugin address: address=/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin720681969 network=unix timestamp=2020-07-10T16:25:26.381+0100
2020/07/10 16:25:26 [TRACE] GRPCProvider: GetSchema
2020/07/10 16:25:26 [TRACE] GRPCProvider: Close
2020-07-10T16:25:26.429+0100 [DEBUG] plugin: plugin process exited: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 pid=4130
2020-07-10T16:25:26.429+0100 [DEBUG] plugin: plugin exited
2020/07/10 16:25:26 [TRACE] terraform.NewContext: complete
2020/07/10 16:25:26 [TRACE] backend/local: finished building terraform.Context
2020/07/10 16:25:26 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/10 16:25:26 [TRACE] Context.Input: Prompting for provider arguments
2020/07/10 16:25:26 [TRACE] Context.Input: Provider provider.aws declared at main.tf:1,1-15
2020/07/10 16:25:26 [TRACE] Context.Input: Provider provider.template implied by data block at main.tf:101,1-40
2020/07/10 16:25:26 [TRACE] Context.Input: Input for provider.aws: map[string]cty.Value{}
2020/07/10 16:25:26 [TRACE] Context.Input: Input for provider.template: map[string]cty.Value{}
2020/07/10 16:25:26 [TRACE] backend/local: running validation operation
2020/07/10 16:25:26 [INFO] terraform: building graph: GraphTypeValidate
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/10 16:25:26 [TRACE] ConfigTransformer: Starting for path: 
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeValidatableResource
  aws_iam_role.main - *terraform.NodeValidatableResource
  aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
  aws_instance.main - *terraform.NodeValidatableResource
  aws_key_pair.main - *terraform.NodeValidatableResource
  aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
  aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
  aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
  data.aws_vpc.main - *terraform.NodeValidatableResource
  data.template_cloudinit_config.init - *terraform.NodeValidatableResource
  data.template_file.registry-config - *terraform.NodeValidatableResource
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeValidatableResource
  aws_iam_role.main - *terraform.NodeValidatableResource
  aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
  aws_instance.main - *terraform.NodeValidatableResource
  aws_key_pair.main - *terraform.NodeValidatableResource
  aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
  aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
  aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
  data.aws_vpc.main - *terraform.NodeValidatableResource
  data.template_cloudinit_config.init - *terraform.NodeValidatableResource
  data.template_file.registry-config - *terraform.NodeValidatableResource
  output.public-ip - *terraform.NodeApplyableOutput
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/10 16:25:26 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.bucket-root" (*terraform.NodeValidatableResource) config from permissions.tf:92,1-45
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.default" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"permissions.tf", Start:hcl.Pos{Line:62, Column:1, Byte:1810}, End:hcl.Pos{Line:62, Column:41, Byte:1850}}
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.registry-config" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:90, Column:1, Byte:2188}, End:hcl.Pos{Line:90, Column:39, Byte:2226}}
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_s3_bucket.encrypted" (*terraform.NodeValidatableResource) config from bucket.tf:9,1-37
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.main" (*terraform.NodeValidatableResource) config from main.tf:19,1-31
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.bucket-subdirs" (*terraform.NodeValidatableResource) config from permissions.tf:99,1-48
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.allow-ssh-and-egress" (*terraform.NodeValidatableResource) config from main.tf:59,1-53
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.main" (*terraform.NodeValidatableResource) config from permissions.tf:86,1-31
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_vpc.main" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:13, Column:1, Byte:382}, End:hcl.Pos{Line:13, Column:22, Byte:403}}
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.allow-registry-ingress" (*terraform.NodeValidatableResource) config from main.tf:31,1-55
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.main" (*terraform.NodeValidatableResource) config from main.tf:150,1-31
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_cloudinit_config.init" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:101, Column:1, Byte:2474}, End:hcl.Pos{Line:101, Column:40, Byte:2513}}
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.bucket-root" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"permissions.tf", Start:hcl.Pos{Line:9, Column:1, Byte:343}, End:hcl.Pos{Line:9, Column:45, Byte:387}}
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_s3_bucket_policy.main" (*terraform.NodeValidatableResource) config from bucket.tf:29,1-39
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.bucket-subdirs" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"permissions.tf", Start:hcl.Pos{Line:34, Column:1, Byte:999}, End:hcl.Pos{Line:34, Column:48, Byte:1046}}
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.main" (*terraform.NodeValidatableResource) config from permissions.tf:112,1-43
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.ubuntu" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"ami.tf", Start:hcl.Pos{Line:3, Column:1, Byte:79}, End:hcl.Pos{Line:3, Column:24, Byte:102}}
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeValidatableResource
  aws_iam_role.main - *terraform.NodeValidatableResource
  aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
  aws_instance.main - *terraform.NodeValidatableResource
  aws_key_pair.main - *terraform.NodeValidatableResource
  aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
  aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
  aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
  data.aws_vpc.main - *terraform.NodeValidatableResource
  data.template_cloudinit_config.init - *terraform.NodeValidatableResource
  data.template_file.registry-config - *terraform.NodeValidatableResource
  output.public-ip - *terraform.NodeApplyableOutput
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/10 16:25:26 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from main.tf:1,1-15
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeValidatableResource
  aws_iam_role.main - *terraform.NodeValidatableResource
  aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
  aws_instance.main - *terraform.NodeValidatableResource
  aws_key_pair.main - *terraform.NodeValidatableResource
  aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
  aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
  aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
  data.aws_vpc.main - *terraform.NodeValidatableResource
  data.template_cloudinit_config.init - *terraform.NodeValidatableResource
  data.template_file.registry-config - *terraform.NodeValidatableResource
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/10 16:25:26 [DEBUG] adding implicit provider configuration provider.template, implied first by data.template_file.registry-config
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeValidatableResource
  aws_iam_role.main - *terraform.NodeValidatableResource
  aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
  aws_instance.main - *terraform.NodeValidatableResource
  aws_key_pair.main - *terraform.NodeValidatableResource
  aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
  aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
  aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
  data.aws_vpc.main - *terraform.NodeValidatableResource
  data.template_cloudinit_config.init - *terraform.NodeValidatableResource
  data.template_file.registry-config - *terraform.NodeValidatableResource
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_security_group.allow-registry-ingress is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_instance.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_iam_role_policy.bucket-subdirs is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_security_group.allow-ssh-and-egress is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_iam_role.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.aws_vpc.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_s3_bucket_policy.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.aws_iam_policy_document.bucket-subdirs is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.template_cloudinit_config.init is provided by provider.template or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.aws_iam_policy_document.bucket-root is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_iam_instance_profile.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.aws_ami.ubuntu is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_s3_bucket.encrypted is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_key_pair.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_iam_role_policy.bucket-root is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.aws_iam_policy_document.default is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.template_file.registry-config is provided by provider.template or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.allow-registry-ingress
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_security_group.allow-registry-ingress" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.template serving data.template_cloudinit_config.init
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.template_cloudinit_config.init" (*terraform.NodeValidatableResource) needs provider.template
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_iam_policy_document.default
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.default" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.template serving data.template_file.registry-config
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.template_file.registry-config" (*terraform.NodeValidatableResource) needs provider.template
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.bucket-subdirs" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_instance_profile.main
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.main" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_ami.ubuntu
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.aws_ami.ubuntu" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.main
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_instance.main" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_security_group.allow-ssh-and-egress" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role.main
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_iam_role.main" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_vpc.main
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.aws_vpc.main" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_s3_bucket_policy.main
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_s3_bucket_policy.main" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_key_pair.main
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_key_pair.main" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy.bucket-root
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_iam_role_policy.bucket-root" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_iam_role_policy.bucket-subdirs" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.bucket-root" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_s3_bucket.encrypted
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_s3_bucket.encrypted" (*terraform.NodeValidatableResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.main
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.ubuntu
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.template
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_s3_bucket.encrypted
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.main
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.bucket-root
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.default
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.registry-config
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.allow-registry-ingress
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.main
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.main
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_vpc.main
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_s3_bucket_policy.main
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_cloudinit_config.init
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.aws_vpc.main" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "var.bucket" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "var.ansible_pem_key" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_security_group.allow-registry-ingress" references: [data.aws_vpc.main]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_instance.main" references: [aws_iam_instance_profile.main aws_security_group.allow-ssh-and-egress aws_security_group.allow-registry-ingress var.key_name data.aws_ami.ubuntu data.template_cloudinit_config.init]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-subdirs" references: [aws_iam_role.main data.aws_iam_policy_document.bucket-subdirs]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_security_group.allow-ssh-and-egress" references: [data.aws_vpc.main]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_iam_role.main" references: [data.aws_iam_policy_document.default]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_s3_bucket_policy.main" references: [var.bucket aws_iam_role.main var.bucket aws_iam_role.main var.bucket]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.bucket-subdirs" references: [var.bucket]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.template_cloudinit_config.init" references: [data.template_file.registry-config]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.bucket-root" references: [var.bucket]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "output.public-ip" references: [aws_instance.main]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.main" references: [aws_iam_role.main]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntu" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "var.region" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "var.key_name" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "provider.template" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "var.profile" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.profile var.region]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_s3_bucket.encrypted" references: [var.bucket]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_key_pair.main" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-root" references: [data.aws_iam_policy_document.bucket-root aws_iam_role.main]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.default" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.template_file.registry-config" references: [var.bucket var.region]
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeValidatableResource
    aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    data.template_file.registry-config - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeValidatableResource
    aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    data.template_file.registry-config - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    aws_instance.main - *terraform.NodeValidatableResource
    aws_key_pair.main - *terraform.NodeValidatableResource
    aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
    data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    data.template_file.registry-config - *terraform.NodeValidatableResource
    output.public-ip - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.template - *terraform.NodeApplyableProvider
    var.ansible_pem_key - *terraform.NodeRootVariable
    var.bucket - *terraform.NodeRootVariable
    var.key_name - *terraform.NodeRootVariable
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeValidatableResource
    aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    data.template_file.registry-config - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    aws_instance.main - *terraform.NodeValidatableResource
    aws_key_pair.main - *terraform.NodeValidatableResource
    aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
    data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    data.template_file.registry-config - *terraform.NodeValidatableResource
    output.public-ip - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.template - *terraform.NodeApplyableProvider
    var.ansible_pem_key - *terraform.NodeRootVariable
    var.bucket - *terraform.NodeRootVariable
    var.key_name - *terraform.NodeRootVariable
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    aws_instance.main - *terraform.NodeValidatableResource
    aws_key_pair.main - *terraform.NodeValidatableResource
    aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    data.template_file.registry-config - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeValidatableResource
    aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    data.template_file.registry-config - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    aws_instance.main - *terraform.NodeValidatableResource
    aws_key_pair.main - *terraform.NodeValidatableResource
    aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
    data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    data.template_file.registry-config - *terraform.NodeValidatableResource
    output.public-ip - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.template - *terraform.NodeApplyableProvider
    var.ansible_pem_key - *terraform.NodeRootVariable
    var.bucket - *terraform.NodeRootVariable
    var.key_name - *terraform.NodeRootVariable
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    aws_instance.main - *terraform.NodeValidatableResource
    aws_key_pair.main - *terraform.NodeValidatableResource
    aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    data.template_file.registry-config - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
  aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
  aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
  aws_instance.main - *terraform.NodeValidatableResource
    aws_iam_instance_profile.main - *terraform.NodeValidatableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
    aws_iam_role.main - *terraform.NodeValidatableResource
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeValidatableResource
    data.aws_vpc.main - *terraform.NodeValidatableResource
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodeValidatableResource
    data.template_file.registry-config - *terraform.NodeValidatableResource
  data.template_file.registry-config - *terraform.NodeValidatableResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    aws_key_pair.main - *terraform.NodeValidatableResource
    aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
    output.public-ip - *terraform.NodeApplyableOutput
    var.ansible_pem_key - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_role_policy.bucket-root - *terraform.NodeValidatableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeValidatableResource
    aws_instance.main - *terraform.NodeValidatableResource
    aws_key_pair.main - *terraform.NodeValidatableResource
    aws_s3_bucket.encrypted - *terraform.NodeValidatableResource
    aws_s3_bucket_policy.main - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [DEBUG] Starting graph walk: walkValidate
2020/07/10 16:25:26 [TRACE] dag/walk: updating graph
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.default"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_iam_role.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_s3_bucket_policy.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.template_cloudinit_config.init"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "output.public-ip"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "var.key_name"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.template_file.registry-config"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.bucket-subdirs"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_iam_instance_profile.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.aws_vpc.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.aws_ami.ubuntu"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "var.bucket"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "var.ansible_pem_key"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_instance.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_s3_bucket.encrypted"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.bucket-root"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "var.region"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_key_pair.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "root"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "var.profile"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "provider.template"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "data.template_cloudinit_config.init"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_security_group.allow-ssh-and-egress" waiting on "data.aws_vpc.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "data.aws_ami.ubuntu"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_cloudinit_config.init"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-subdirs" waiting on "data.aws_iam_policy_document.bucket-subdirs"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_s3_bucket_policy.main" waiting on "aws_iam_role.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_key_pair.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "aws_iam_instance_profile.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_s3_bucket.encrypted"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-subdirs" waiting on "var.bucket"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.public-ip"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.ansible_pem_key"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-root" waiting on "var.bucket"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_s3_bucket.encrypted"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_s3_bucket.encrypted" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-subdirs" waiting on "aws_iam_role.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.template_file.registry-config" waiting on "var.region"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_s3_bucket_policy.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-root" waiting on "aws_iam_role.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.region"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.default" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_security_group.allow-registry-ingress" waiting on "data.aws_vpc.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "var.key_name"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.template_file.registry-config" waiting on "var.bucket"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_ami.ubuntu" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_s3_bucket.encrypted" waiting on "var.bucket"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-root" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_s3_bucket_policy.main" waiting on "var.bucket"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.template_cloudinit_config.init" waiting on "data.template_file.registry-config"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_key_pair.main" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_instance.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_key_pair.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.template_file.registry-config" waiting on "provider.template"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "output.public-ip" waiting on "aws_instance.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-subdirs" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_iam_role.main" waiting on "data.aws_iam_policy_document.default"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_s3_bucket_policy.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-root" waiting on "data.aws_iam_policy_document.bucket-root"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.main" waiting on "aws_iam_role.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_vpc.main" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.aws_iam_policy_document.default", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_key_pair.main", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.aws_vpc.main", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_s3_bucket.encrypted", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.template_file.registry-config", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.aws_iam_policy_document.bucket-subdirs", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy.bucket-root", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_security_group.allow-registry-ingress", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_instance.main", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_security_group.allow-ssh-and-egress", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy.bucket-subdirs", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "output.public-ip", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_iam_role.main", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.aws_iam_policy_document.bucket-root", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_iam_instance_profile.main", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_s3_bucket_policy.main", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.aws_ami.ubuntu", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.template_cloudinit_config.init", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "var.ansible_pem_key"
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "var.profile"
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "var.key_name"
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "var.region"
2020/07/10 16:25:26 [TRACE] vertex "var.key_name": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:26 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "var.bucket"
2020/07/10 16:25:26 [TRACE] vertex "var.bucket": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:26 [TRACE] vertex "var.key_name": evaluating
2020/07/10 16:25:26 [TRACE] vertex "var.bucket": evaluating
2020/07/10 16:25:26 [TRACE] vertex "var.region": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: var.bucket
2020/07/10 16:25:26 [TRACE] vertex "var.profile": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: var.key_name
2020/07/10 16:25:26 [TRACE] vertex "var.profile": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: var.profile
2020/07/10 16:25:26 [TRACE] vertex "var.ansible_pem_key": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:26 [TRACE] vertex "var.ansible_pem_key": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: var.region
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: var.ansible_pem_key
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "provider.template"
2020/07/10 16:25:26 [TRACE] vertex "provider.template": starting visit (*terraform.NodeApplyableProvider)
2020/07/10 16:25:26 [TRACE] vertex "provider.template": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: provider.template
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: var.profile
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: var.ansible_pem_key
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: var.key_name
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: var.region
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: var.bucket
2020/07/10 16:25:26 [TRACE] vertex "var.bucket": visit complete
2020/07/10 16:25:26 [TRACE] vertex "var.profile": visit complete
2020/07/10 16:25:26 [TRACE] vertex "var.ansible_pem_key": visit complete
2020/07/10 16:25:26 [TRACE] vertex "var.key_name": visit complete
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/07/10 16:25:26 [TRACE] vertex "var.region": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "provider.aws"
2020/07/10 16:25:26 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2020/07/10 16:25:26 [TRACE] vertex "provider.aws": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: provider.aws
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-10T16:25:26.446+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:25:26.466+0100 [DEBUG] plugin: starting plugin: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 args=[/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4]
2020-07-10T16:25:26.469+0100 [DEBUG] plugin: plugin started: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 pid=4131
2020-07-10T16:25:26.469+0100 [DEBUG] plugin: waiting for RPC address: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4
2020-07-10T16:25:26.475+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:25:26.475+0100
2020-07-10T16:25:26.498+0100 [DEBUG] plugin: using plugin: version=5
2020-07-10T16:25:26.498+0100 [DEBUG] plugin.terraform-provider-template_v2.1.2_x4: plugin address: address=/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin508527366 network=unix timestamp=2020-07-10T16:25:26.498+0100
2020/07/10 16:25:26 [TRACE] BuiltinEvalContext: Initialized "template" provider for provider.template
2020/07/10 16:25:26 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-07-10T16:25:26.499+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:25:26.521+0100 [DEBUG] plugin: starting plugin: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 args=[/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4]
2020-07-10T16:25:26.530+0100 [DEBUG] plugin: plugin started: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 pid=4132
2020-07-10T16:25:26.530+0100 [DEBUG] plugin: waiting for RPC address: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4
2020-07-10T16:25:26.554+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:25:26.554+0100
2020-07-10T16:25:26.577+0100 [DEBUG] plugin: using plugin: version=5
2020-07-10T16:25:26.577+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: plugin address: address=/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin758423115 network=unix timestamp=2020-07-10T16:25:26.577+0100
2020/07/10 16:25:26 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2020/07/10 16:25:26 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/10 16:25:26 [TRACE] buildProviderConfig for provider.template: no configuration at all
2020/07/10 16:25:26 [TRACE] GRPCProvider: GetSchema
2020/07/10 16:25:26 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2020/07/10 16:25:26 [TRACE] GRPCProvider: GetSchema
2020/07/10 16:25:26 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/10 16:25:26 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:26 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: provider.template
2020/07/10 16:25:26 [TRACE] vertex "provider.template": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "data.template_file.registry-config"
2020/07/10 16:25:26 [TRACE] vertex "data.template_file.registry-config": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] vertex "data.template_file.registry-config": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: data.template_file.registry-config
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: data.template_file.registry-config
2020/07/10 16:25:26 [TRACE] vertex "data.template_file.registry-config": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "data.template_cloudinit_config.init"
2020/07/10 16:25:26 [TRACE] vertex "data.template_cloudinit_config.init": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] vertex "data.template_cloudinit_config.init": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: data.template_cloudinit_config.init
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: data.template_cloudinit_config.init
2020/07/10 16:25:26 [TRACE] vertex "data.template_cloudinit_config.init": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "provider.template (close)"
2020/07/10 16:25:26 [TRACE] vertex "provider.template (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/10 16:25:26 [TRACE] vertex "provider.template (close)": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: provider.template (close)
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/10 16:25:26 [TRACE] GRPCProvider: Close
2020-07-10T16:25:26.588+0100 [DEBUG] plugin: plugin process exited: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 pid=4131
2020-07-10T16:25:26.588+0100 [DEBUG] plugin: plugin exited
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: provider.template (close)
2020/07/10 16:25:26 [TRACE] vertex "provider.template (close)": visit complete
2020/07/10 16:25:26 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/10 16:25:26 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:26 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: provider.aws
2020/07/10 16:25:26 [TRACE] vertex "provider.aws": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "aws_key_pair.main"
2020/07/10 16:25:26 [TRACE] vertex "aws_key_pair.main": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] vertex "aws_key_pair.main": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: aws_key_pair.main
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "aws_s3_bucket.encrypted"
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.default"
2020/07/10 16:25:26 [TRACE] vertex "aws_s3_bucket.encrypted": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "data.aws_vpc.main"
2020/07/10 16:25:26 [TRACE] vertex "aws_s3_bucket.encrypted": evaluating
2020/07/10 16:25:26 [TRACE] vertex "data.aws_vpc.main": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: aws_s3_bucket.encrypted
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.bucket-root"
2020/07/10 16:25:26 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.bucket-subdirs"
2020/07/10 16:25:26 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] vertex "data.aws_iam_policy_document.default": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] vertex "data.aws_iam_policy_document.default": evaluating
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "data.aws_ami.ubuntu"
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: data.aws_iam_policy_document.default
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] vertex "data.aws_ami.ubuntu": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] vertex "data.aws_vpc.main": evaluating
2020/07/10 16:25:26 [TRACE] vertex "data.aws_ami.ubuntu": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: data.aws_vpc.main
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: data.aws_ami.ubuntu
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": evaluating
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: data.aws_vpc.main
2020/07/10 16:25:26 [TRACE] vertex "data.aws_vpc.main": visit complete
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:26 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": visit complete
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:26 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:26 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": evaluating
2020/07/10 16:25:26 [TRACE] vertex "aws_security_group.allow-registry-ingress": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:26 [TRACE] vertex "aws_security_group.allow-registry-ingress": evaluating
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: aws_security_group.allow-registry-ingress
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: data.aws_iam_policy_document.default
2020/07/10 16:25:26 [TRACE] vertex "data.aws_iam_policy_document.default": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "aws_iam_role.main"
2020/07/10 16:25:26 [TRACE] vertex "aws_iam_role.main": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] vertex "aws_iam_role.main": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: aws_iam_role.main
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: data.aws_ami.ubuntu
2020/07/10 16:25:26 [TRACE] vertex "data.aws_ami.ubuntu": visit complete
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: aws_key_pair.main
2020/07/10 16:25:26 [TRACE] vertex "aws_key_pair.main": visit complete
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: aws_iam_role.main
2020/07/10 16:25:26 [TRACE] vertex "aws_iam_role.main": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "aws_s3_bucket_policy.main"
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:26 [TRACE] vertex "aws_s3_bucket_policy.main": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "aws_iam_instance_profile.main"
2020/07/10 16:25:26 [TRACE] vertex "aws_s3_bucket_policy.main": evaluating
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: aws_s3_bucket_policy.main
2020/07/10 16:25:26 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": evaluating
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] vertex "aws_iam_instance_profile.main": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: aws_s3_bucket.encrypted
2020/07/10 16:25:26 [TRACE] vertex "aws_s3_bucket.encrypted": visit complete
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] vertex "aws_iam_role_policy.bucket-root": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] vertex "aws_iam_role_policy.bucket-root": evaluating
2020/07/10 16:25:26 [TRACE] vertex "aws_iam_instance_profile.main": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: aws_iam_role_policy.bucket-root
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: aws_iam_instance_profile.main
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.allow-registry-ingress
2020/07/10 16:25:26 [TRACE] vertex "aws_security_group.allow-registry-ingress": visit complete
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:26 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": visit complete
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: aws_s3_bucket_policy.main
2020/07/10 16:25:26 [TRACE] vertex "aws_s3_bucket_policy.main": visit complete
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:26 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": visit complete
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: aws_iam_instance_profile.main
2020/07/10 16:25:26 [TRACE] vertex "aws_iam_instance_profile.main": visit complete
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: aws_iam_role_policy.bucket-root
2020/07/10 16:25:26 [TRACE] vertex "aws_iam_role_policy.bucket-root": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "aws_instance.main"
2020/07/10 16:25:26 [TRACE] vertex "aws_instance.main": starting visit (*terraform.NodeValidatableResource)
2020/07/10 16:25:26 [TRACE] vertex "aws_instance.main": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: aws_instance.main
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: aws_instance.main
2020/07/10 16:25:26 [TRACE] vertex "aws_instance.main": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "output.public-ip"
2020/07/10 16:25:26 [TRACE] vertex "output.public-ip": starting visit (*terraform.NodeApplyableOutput)
2020/07/10 16:25:26 [TRACE] vertex "output.public-ip": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: output.public-ip
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "provider.aws (close)"
2020/07/10 16:25:26 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/10 16:25:26 [TRACE] vertex "provider.aws (close)": evaluating
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: provider.aws (close)
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2020/07/10 16:25:26 [TRACE] GRPCProvider: Close
2020/07/10 16:25:26 [TRACE] EvalWriteOutput: Removing output.public-ip from state (it is now null)
2020/07/10 16:25:26 [TRACE] EvalWriteOutput: Saving Create change for output.public-ip in changeset
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: output.public-ip
2020/07/10 16:25:26 [TRACE] vertex "output.public-ip": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/10 16:25:26 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/10 16:25:26 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/10 16:25:26 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/10 16:25:26 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-10T16:25:26.735+0100 [DEBUG] plugin: plugin process exited: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 pid=4132
2020-07-10T16:25:26.735+0100 [DEBUG] plugin: plugin exited
2020/07/10 16:25:26 [TRACE] [walkValidate] Exiting eval tree: provider.aws (close)
2020/07/10 16:25:26 [TRACE] vertex "provider.aws (close)": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "root"
2020/07/10 16:25:26 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/10 16:25:26 [TRACE] vertex "root": visit complete
2020/07/10 16:25:26 [INFO] backend/local: apply calling Refresh
2020/07/10 16:25:26 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/10 16:25:26 [TRACE] ConfigTransformer: Starting for path: 
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
  aws_iam_role.main - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
  aws_instance.main - *terraform.NodeRefreshableManagedResource
  aws_key_pair.main - *terraform.NodeRefreshableManagedResource
  aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
  aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
  aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/10 16:25:26 [TRACE] ConfigTransformer: Starting for path: 
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
  aws_iam_role.main - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
  aws_instance.main - *terraform.NodeRefreshableManagedResource
  aws_key_pair.main - *terraform.NodeRefreshableManagedResource
  aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
  aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
  aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
  data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
  data.aws_vpc.main - *terraform.NodeRefreshableDataResource
  data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
  data.template_file.registry-config - *terraform.NodeRefreshableDataResource
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/10 16:25:26 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.default" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"permissions.tf", Start:hcl.Pos{Line:62, Column:1, Byte:1810}, End:hcl.Pos{Line:62, Column:41, Byte:1850}}
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_vpc.main" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:13, Column:1, Byte:382}, End:hcl.Pos{Line:13, Column:22, Byte:403}}
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.main" (*terraform.NodeRefreshableManagedResource) config from main.tf:150,1-31
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_s3_bucket.encrypted" (*terraform.NodeRefreshableManagedResource) config from bucket.tf:9,1-37
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.allow-ssh-and-egress" (*terraform.NodeRefreshableManagedResource) config from main.tf:59,1-53
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.bucket-root" (*terraform.NodeRefreshableManagedResource) config from permissions.tf:92,1-45
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.main" (*terraform.NodeRefreshableManagedResource) config from permissions.tf:86,1-31
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.bucket-root" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"permissions.tf", Start:hcl.Pos{Line:9, Column:1, Byte:343}, End:hcl.Pos{Line:9, Column:45, Byte:387}}
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.bucket-subdirs" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"permissions.tf", Start:hcl.Pos{Line:34, Column:1, Byte:999}, End:hcl.Pos{Line:34, Column:48, Byte:1046}}
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.allow-registry-ingress" (*terraform.NodeRefreshableManagedResource) config from main.tf:31,1-55
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.bucket-subdirs" (*terraform.NodeRefreshableManagedResource) config from permissions.tf:99,1-48
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.main" (*terraform.NodeRefreshableManagedResource) config from permissions.tf:112,1-43
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_s3_bucket_policy.main" (*terraform.NodeRefreshableManagedResource) config from bucket.tf:29,1-39
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.registry-config" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:90, Column:1, Byte:2188}, End:hcl.Pos{Line:90, Column:39, Byte:2226}}
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.main" (*terraform.NodeRefreshableManagedResource) config from main.tf:19,1-31
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.ubuntu" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"ami.tf", Start:hcl.Pos{Line:3, Column:1, Byte:79}, End:hcl.Pos{Line:3, Column:24, Byte:102}}
2020/07/10 16:25:26 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_cloudinit_config.init" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:101, Column:1, Byte:2474}, End:hcl.Pos{Line:101, Column:40, Byte:2513}}
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
  aws_iam_role.main - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
  aws_instance.main - *terraform.NodeRefreshableManagedResource
  aws_key_pair.main - *terraform.NodeRefreshableManagedResource
  aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
  aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
  aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
  data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
  data.aws_vpc.main - *terraform.NodeRefreshableDataResource
  data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
  data.template_file.registry-config - *terraform.NodeRefreshableDataResource
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
  aws_iam_role.main - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
  aws_instance.main - *terraform.NodeRefreshableManagedResource
  aws_key_pair.main - *terraform.NodeRefreshableManagedResource
  aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
  aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
  aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
  data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
  data.aws_vpc.main - *terraform.NodeRefreshableDataResource
  data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
  data.template_file.registry-config - *terraform.NodeRefreshableDataResource
  output.public-ip - *terraform.NodeApplyableOutput
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/10 16:25:26 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from main.tf:1,1-15
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
  aws_iam_role.main - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
  aws_instance.main - *terraform.NodeRefreshableManagedResource
  aws_key_pair.main - *terraform.NodeRefreshableManagedResource
  aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
  aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
  aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
  data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
  data.aws_vpc.main - *terraform.NodeRefreshableDataResource
  data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
  data.template_file.registry-config - *terraform.NodeRefreshableDataResource
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/10 16:25:26 [DEBUG] adding implicit provider configuration provider.template, implied first by data.template_file.registry-config
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
  aws_iam_role.main - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
  aws_instance.main - *terraform.NodeRefreshableManagedResource
  aws_key_pair.main - *terraform.NodeRefreshableManagedResource
  aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
  aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
  aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
  data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
  data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
  data.aws_vpc.main - *terraform.NodeRefreshableDataResource
  data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
  data.template_file.registry-config - *terraform.NodeRefreshableDataResource
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.aws_iam_policy_document.bucket-subdirs is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_security_group.allow-registry-ingress is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_iam_role_policy.bucket-subdirs is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_iam_instance_profile.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_s3_bucket_policy.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_iam_role.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.aws_iam_policy_document.bucket-root is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.template_file.registry-config is provided by provider.template or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_key_pair.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.aws_ami.ubuntu is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.template_cloudinit_config.init is provided by provider.template or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_instance.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_s3_bucket.encrypted is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_security_group.allow-ssh-and-egress is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: aws_iam_role_policy.bucket-root is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.aws_iam_policy_document.default is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: data.aws_vpc.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.allow-registry-ingress
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_security_group.allow-registry-ingress" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_instance_profile.main
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.main" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role.main
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_iam_role.main" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy.bucket-root
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_iam_role_policy.bucket-root" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.template serving data.template_cloudinit_config.init
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.template_cloudinit_config.init" (*terraform.NodeRefreshableDataResource) needs provider.template
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_iam_role_policy.bucket-subdirs" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_ami.ubuntu
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.aws_ami.ubuntu" (*terraform.NodeRefreshableDataResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_s3_bucket.encrypted
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_s3_bucket.encrypted" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.main
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_instance.main" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_security_group.allow-ssh-and-egress" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_iam_policy_document.default
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.default" (*terraform.NodeRefreshableDataResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.bucket-subdirs" (*terraform.NodeRefreshableDataResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_s3_bucket_policy.main
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_s3_bucket_policy.main" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.bucket-root" (*terraform.NodeRefreshableDataResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.template serving data.template_file.registry-config
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.template_file.registry-config" (*terraform.NodeRefreshableDataResource) needs provider.template
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_key_pair.main
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "aws_key_pair.main" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_vpc.main
2020/07/10 16:25:26 [DEBUG] ProviderTransformer: "data.aws_vpc.main" (*terraform.NodeRefreshableDataResource) needs provider.aws
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodeRefreshableDataResource
    provider.template - *terraform.NodeApplyableProvider
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/10 16:25:26 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodeRefreshableDataResource
    provider.template - *terraform.NodeApplyableProvider
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_cloudinit_config.init
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.template
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.main
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.ubuntu
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.bucket-root
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.default
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_vpc.main
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.main
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_s3_bucket.encrypted
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.main
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_s3_bucket_policy.main
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.main
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.allow-registry-ingress
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:26 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.registry-config
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "output.public-ip" references: [aws_instance.main]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.template_file.registry-config" references: [var.bucket var.region]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "var.ansible_pem_key" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "var.region" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "var.bucket" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "provider.template" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_key_pair.main" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntu" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.template_cloudinit_config.init" references: [data.template_file.registry-config]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-root" references: [data.aws_iam_policy_document.bucket-root aws_iam_role.main]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.default" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.aws_vpc.main" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_instance.main" references: [var.key_name data.template_cloudinit_config.init aws_iam_instance_profile.main data.aws_ami.ubuntu aws_security_group.allow-ssh-and-egress aws_security_group.allow-registry-ingress]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_s3_bucket.encrypted" references: [var.bucket]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_security_group.allow-ssh-and-egress" references: [data.aws_vpc.main]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_s3_bucket_policy.main" references: [aws_iam_role.main var.bucket aws_iam_role.main var.bucket var.bucket]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_iam_role.main" references: [data.aws_iam_policy_document.default]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.bucket-root" references: [var.bucket]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.bucket-subdirs" references: [var.bucket]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "var.profile" references: []
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_security_group.allow-registry-ingress" references: [data.aws_vpc.main]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-subdirs" references: [data.aws_iam_policy_document.bucket-subdirs aws_iam_role.main]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.main" references: [aws_iam_role.main]
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "var.key_name" references: []
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeRefreshableManagedResource
    aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
    aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
    data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
    data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
    data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
    data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
    data.template_file.registry-config - *terraform.NodeRefreshableDataResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodeRefreshableDataResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/10 16:25:26 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy.bucket-root depends on [aws_iam_role.main]
2020/07/10 16:25:26 [TRACE] AttachDependenciesTransformer: aws_instance.main depends on [aws_iam_instance_profile.main aws_iam_role.main aws_security_group.allow-registry-ingress aws_security_group.allow-ssh-and-egress]
2020/07/10 16:25:26 [TRACE] AttachDependenciesTransformer: aws_s3_bucket.encrypted depends on []
2020/07/10 16:25:26 [TRACE] AttachDependenciesTransformer: aws_security_group.allow-ssh-and-egress depends on []
2020/07/10 16:25:26 [TRACE] AttachDependenciesTransformer: aws_s3_bucket_policy.main depends on [aws_iam_role.main]
2020/07/10 16:25:26 [TRACE] AttachDependenciesTransformer: aws_iam_role.main depends on []
2020/07/10 16:25:26 [TRACE] AttachDependenciesTransformer: aws_security_group.allow-registry-ingress depends on []
2020/07/10 16:25:26 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy.bucket-subdirs depends on [aws_iam_role.main]
2020/07/10 16:25:26 [TRACE] AttachDependenciesTransformer: aws_iam_instance_profile.main depends on [aws_iam_role.main]
2020/07/10 16:25:26 [TRACE] AttachDependenciesTransformer: aws_key_pair.main depends on []
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeRefreshableManagedResource
    aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
    aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
    data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
    data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
    data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
    data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
    data.template_file.registry-config - *terraform.NodeRefreshableDataResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodeRefreshableDataResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
    aws_instance.main - *terraform.NodeRefreshableManagedResource
    aws_key_pair.main - *terraform.NodeRefreshableManagedResource
    aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
    aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
    aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
    data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
    data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
    data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
    data.template_file.registry-config - *terraform.NodeRefreshableDataResource
    provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeRefreshableManagedResource
    aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
    aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
    data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
    data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
    data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
    data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
    data.template_file.registry-config - *terraform.NodeRefreshableDataResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodeRefreshableDataResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
    aws_instance.main - *terraform.NodeRefreshableManagedResource
    aws_key_pair.main - *terraform.NodeRefreshableManagedResource
    aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
    aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
    aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
    data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
    data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
    data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
    data.template_file.registry-config - *terraform.NodeRefreshableDataResource
    provider.template - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    output.public-ip - *terraform.NodeApplyableOutput
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
    var.ansible_pem_key - *terraform.NodeRootVariable
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
  aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
  aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
  aws_instance.main - *terraform.NodeRefreshableManagedResource
    aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResource
    aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
    data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
    data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
    aws_iam_role.main - *terraform.NodeRefreshableManagedResource
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResource
    data.aws_vpc.main - *terraform.NodeRefreshableDataResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResource
    data.aws_vpc.main - *terraform.NodeRefreshableDataResource
  data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
    data.template_file.registry-config - *terraform.NodeRefreshableDataResource
  data.template_file.registry-config - *terraform.NodeRefreshableDataResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResource
    aws_instance.main - *terraform.NodeRefreshableManagedResource
    aws_key_pair.main - *terraform.NodeRefreshableManagedResource
    aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResource
    aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResource
  root - terraform.graphNodeRoot
    output.public-ip - *terraform.NodeApplyableOutput
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
    var.ansible_pem_key - *terraform.NodeRootVariable
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:26 [DEBUG] Starting graph walk: walkRefresh
2020/07/10 16:25:26 [TRACE] dag/walk: updating graph
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.bucket-subdirs"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "var.key_name"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "var.ansible_pem_key"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.default"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_iam_role.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "root"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.template_cloudinit_config.init"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "var.bucket"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "provider.template"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_instance.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_s3_bucket_policy.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_iam_instance_profile.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.template_file.registry-config"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "var.region"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "output.public-ip"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "var.profile"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_key_pair.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_s3_bucket.encrypted"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.aws_vpc.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.bucket-root"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.aws_ami.ubuntu"
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.template_file.registry-config" waiting on "provider.template"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.region"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_ami.ubuntu" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.main" waiting on "aws_iam_role.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.template_cloudinit_config.init" waiting on "data.template_file.registry-config"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-subdirs" waiting on "aws_iam_role.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-root" waiting on "data.aws_iam_policy_document.bucket-root"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "data.template_cloudinit_config.init"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-subdirs" waiting on "data.aws_iam_policy_document.bucket-subdirs"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_s3_bucket.encrypted" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "var.key_name"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_security_group.allow-ssh-and-egress" waiting on "data.aws_vpc.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-root" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_iam_role.main" waiting on "data.aws_iam_policy_document.default"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.template_file.registry-config" waiting on "var.region"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-root" waiting on "aws_iam_role.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "root" waiting on "var.ansible_pem_key"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_key_pair.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "root" waiting on "output.public-ip"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_security_group.allow-registry-ingress" waiting on "data.aws_vpc.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_s3_bucket_policy.main" waiting on "aws_iam_role.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_instance.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.default" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_s3_bucket.encrypted"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "aws_iam_instance_profile.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_s3_bucket_policy.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "data.aws_ami.ubuntu"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-subdirs" waiting on "var.bucket"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.template_file.registry-config" waiting on "var.bucket"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_vpc.main" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_s3_bucket.encrypted" waiting on "var.bucket"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_cloudinit_config.init"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-root" waiting on "var.bucket"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_key_pair.main" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "output.public-ip" waiting on "aws_instance.main"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-subdirs" waiting on "provider.aws"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2020/07/10 16:25:26 [TRACE] dag/walk: added edge: "aws_s3_bucket_policy.main" waiting on "var.bucket"
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy.bucket-subdirs", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.aws_ami.ubuntu", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_instance.main", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_security_group.allow-ssh-and-egress", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_iam_role.main", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.aws_iam_policy_document.default", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "output.public-ip", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.aws_vpc.main", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_s3_bucket.encrypted", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.aws_iam_policy_document.bucket-root", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_s3_bucket_policy.main", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy.bucket-root", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_iam_instance_profile.main", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.template_cloudinit_config.init", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_security_group.allow-registry-ingress", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.aws_iam_policy_document.bucket-subdirs", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "aws_key_pair.main", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: dependencies changed for "data.template_file.registry-config", sending new deps
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "var.bucket"
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "provider.template"
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "var.key_name"
2020/07/10 16:25:26 [TRACE] vertex "provider.template": starting visit (*terraform.NodeApplyableProvider)
2020/07/10 16:25:26 [TRACE] vertex "var.key_name": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:26 [TRACE] vertex "var.key_name": evaluating
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "var.ansible_pem_key"
2020/07/10 16:25:26 [TRACE] [walkRefresh] Entering eval tree: var.key_name
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "var.profile"
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] vertex "var.profile": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:26 [TRACE] vertex "var.profile": evaluating
2020/07/10 16:25:26 [TRACE] [walkRefresh] Entering eval tree: var.profile
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] vertex "provider.template": evaluating
2020/07/10 16:25:26 [TRACE] [walkRefresh] Entering eval tree: provider.template
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "var.region"
2020/07/10 16:25:26 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:26 [TRACE] vertex "var.bucket": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:26 [TRACE] vertex "var.bucket": evaluating
2020/07/10 16:25:26 [TRACE] [walkRefresh] Entering eval tree: var.bucket
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] vertex "var.ansible_pem_key": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:26 [TRACE] vertex "var.ansible_pem_key": evaluating
2020/07/10 16:25:26 [TRACE] [walkRefresh] Exiting eval tree: var.key_name
2020/07/10 16:25:26 [TRACE] vertex "var.key_name": visit complete
2020/07/10 16:25:26 [TRACE] [walkRefresh] Exiting eval tree: var.profile
2020/07/10 16:25:26 [TRACE] vertex "var.profile": visit complete
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/07/10 16:25:26 [TRACE] vertex "var.region": evaluating
2020/07/10 16:25:26 [TRACE] [walkRefresh] Entering eval tree: var.region
2020/07/10 16:25:26 [TRACE] [walkRefresh] Exiting eval tree: var.bucket
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] vertex "var.bucket": visit complete
2020/07/10 16:25:26 [TRACE] [walkRefresh] Exiting eval tree: var.region
2020/07/10 16:25:26 [TRACE] vertex "var.region": visit complete
2020/07/10 16:25:26 [TRACE] [walkRefresh] Entering eval tree: var.ansible_pem_key
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "provider.aws"
2020/07/10 16:25:26 [TRACE] [walkRefresh] Exiting eval tree: var.ansible_pem_key
2020/07/10 16:25:26 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2020/07/10 16:25:26 [TRACE] vertex "var.ansible_pem_key": visit complete
2020-07-10T16:25:26.742+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 16:25:26 [TRACE] vertex "provider.aws": evaluating
2020/07/10 16:25:26 [TRACE] [walkRefresh] Entering eval tree: provider.aws
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-10T16:25:26.762+0100 [DEBUG] plugin: starting plugin: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 args=[/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4]
2020-07-10T16:25:26.766+0100 [DEBUG] plugin: plugin started: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 pid=4133
2020-07-10T16:25:26.766+0100 [DEBUG] plugin: waiting for RPC address: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4
2020-07-10T16:25:26.772+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:25:26.772+0100
2020-07-10T16:25:26.795+0100 [DEBUG] plugin: using plugin: version=5
2020-07-10T16:25:26.795+0100 [DEBUG] plugin.terraform-provider-template_v2.1.2_x4: plugin address: address=/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin682590200 network=unix timestamp=2020-07-10T16:25:26.795+0100
2020/07/10 16:25:26 [TRACE] BuiltinEvalContext: Initialized "template" provider for provider.template
2020/07/10 16:25:26 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:26 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-07-10T16:25:26.796+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:25:26.819+0100 [DEBUG] plugin: starting plugin: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 args=[/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4]
2020-07-10T16:25:26.827+0100 [DEBUG] plugin: plugin started: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 pid=4134
2020-07-10T16:25:26.827+0100 [DEBUG] plugin: waiting for RPC address: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4
2020-07-10T16:25:26.852+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:25:26.852+0100
2020-07-10T16:25:26.876+0100 [DEBUG] plugin: using plugin: version=5
2020-07-10T16:25:26.876+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: plugin address: address=/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin128492093 network=unix timestamp=2020-07-10T16:25:26.876+0100
2020/07/10 16:25:26 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2020/07/10 16:25:26 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:26 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] buildProviderConfig for provider.template: no configuration at all
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/10 16:25:26 [TRACE] GRPCProvider: GetSchema
2020/07/10 16:25:26 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2020/07/10 16:25:26 [TRACE] GRPCProvider: GetSchema
2020/07/10 16:25:26 [TRACE] GRPCProvider: Configure
2020/07/10 16:25:26 [TRACE] [walkRefresh] Exiting eval tree: provider.template
2020/07/10 16:25:26 [TRACE] vertex "provider.template": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "data.template_file.registry-config"
2020/07/10 16:25:26 [TRACE] vertex "data.template_file.registry-config": starting visit (*terraform.NodeRefreshableDataResource)
2020/07/10 16:25:26 [TRACE] vertex "data.template_file.registry-config": expanding dynamic subgraph
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.template_file.registry-config - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:26 [DEBUG] Resource state not found for node "data.template_file.registry-config", instance data.template_file.registry-config
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.template_file.registry-config" references: []
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:26 [TRACE] vertex "data.template_file.registry-config": entering dynamic subgraph
2020/07/10 16:25:26 [TRACE] dag/walk: updating graph
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.template_file.registry-config"
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "data.template_file.registry-config"
2020/07/10 16:25:26 [TRACE] vertex "data.template_file.registry-config": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/07/10 16:25:26 [TRACE] vertex "data.template_file.registry-config": evaluating
2020/07/10 16:25:26 [TRACE] [walkRefresh] Entering eval tree: data.template_file.registry-config
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:26 [TRACE] EvalWriteState: removing state object for data.template_file.registry-config
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalReadData
2020/07/10 16:25:26 [TRACE] EvalReadData: working on data.template_file.registry-config
2020/07/10 16:25:26 [TRACE] Re-validating config for data.template_file.registry-config
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/07/10 16:25:26 [TRACE] EvalReadData: data.template_file.registry-config configuration is complete, so reading from provider
2020/07/10 16:25:26 [TRACE] GRPCProvider: ReadDataSource
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:26 [TRACE] EvalWriteState: writing current state object for data.template_file.registry-config
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:25:26 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.registry-config
2020/07/10 16:25:26 [TRACE] vertex "data.template_file.registry-config": visit complete
2020/07/10 16:25:26 [TRACE] vertex "data.template_file.registry-config": dynamic subgraph completed successfully
2020/07/10 16:25:26 [TRACE] vertex "data.template_file.registry-config": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "data.template_cloudinit_config.init"
2020/07/10 16:25:26 [TRACE] vertex "data.template_cloudinit_config.init": starting visit (*terraform.NodeRefreshableDataResource)
2020/07/10 16:25:26 [TRACE] vertex "data.template_cloudinit_config.init": expanding dynamic subgraph
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.template_cloudinit_config.init - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:26 [DEBUG] Resource state not found for node "data.template_cloudinit_config.init", instance data.template_cloudinit_config.init
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:26 [DEBUG] ReferenceTransformer: "data.template_cloudinit_config.init" references: []
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:26 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:26 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:26 [TRACE] vertex "data.template_cloudinit_config.init": entering dynamic subgraph
2020/07/10 16:25:26 [TRACE] dag/walk: updating graph
2020/07/10 16:25:26 [TRACE] dag/walk: added new vertex: "data.template_cloudinit_config.init"
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "data.template_cloudinit_config.init"
2020/07/10 16:25:26 [TRACE] vertex "data.template_cloudinit_config.init": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/07/10 16:25:26 [TRACE] vertex "data.template_cloudinit_config.init": evaluating
2020/07/10 16:25:26 [TRACE] [walkRefresh] Entering eval tree: data.template_cloudinit_config.init
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:26 [TRACE] EvalWriteState: removing state object for data.template_cloudinit_config.init
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalReadData
2020/07/10 16:25:26 [TRACE] EvalReadData: working on data.template_cloudinit_config.init
2020/07/10 16:25:26 [TRACE] Re-validating config for data.template_cloudinit_config.init
2020/07/10 16:25:26 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/07/10 16:25:26 [TRACE] EvalReadData: data.template_cloudinit_config.init configuration is complete, so reading from provider
2020/07/10 16:25:26 [TRACE] GRPCProvider: ReadDataSource
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:26 [TRACE] EvalWriteState: writing current state object for data.template_cloudinit_config.init
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:25:26 [TRACE] [walkRefresh] Exiting eval tree: data.template_cloudinit_config.init
2020/07/10 16:25:26 [TRACE] vertex "data.template_cloudinit_config.init": visit complete
2020/07/10 16:25:26 [TRACE] vertex "data.template_cloudinit_config.init": dynamic subgraph completed successfully
2020/07/10 16:25:26 [TRACE] vertex "data.template_cloudinit_config.init": visit complete
2020/07/10 16:25:26 [TRACE] dag/walk: visiting "provider.template (close)"
2020/07/10 16:25:26 [TRACE] vertex "provider.template (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/10 16:25:26 [TRACE] vertex "provider.template (close)": evaluating
2020/07/10 16:25:26 [TRACE] [walkRefresh] Entering eval tree: provider.template (close)
2020/07/10 16:25:26 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/10 16:25:26 [TRACE] GRPCProvider: Close
2020-07-10T16:25:26.892+0100 [DEBUG] plugin: plugin process exited: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 pid=4133
2020-07-10T16:25:26.892+0100 [DEBUG] plugin: plugin exited
2020/07/10 16:25:26 [TRACE] [walkRefresh] Exiting eval tree: provider.template (close)
2020/07/10 16:25:26 [TRACE] vertex "provider.template (close)": visit complete
2020/07/10 16:25:26 [TRACE] GRPCProvider: Configure
2020-07-10T16:25:26.975+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:26 [INFO] No assume_role block read from configuration
2020-07-10T16:25:26.975+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:26 [INFO] Building AWS auth structure
2020-07-10T16:25:26.975+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:26 [INFO] Setting AWS metadata API timeout to 100ms
2020-07-10T16:25:28.440+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:28 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2020-07-10T16:25:28.440+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:28 [INFO] Attempting to use session-derived credentials
2020-07-10T16:25:29.116+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:29 [INFO] Successfully derived credentials from session
2020-07-10T16:25:29.116+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:29 [INFO] AWS Auth provider used: "AssumeRoleProvider"
2020-07-10T16:25:29.117+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:29 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:29 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: sts.amazonaws.com
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 43
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=718eca510abd75d74902c04d75ed857fa6f5653b4133d0c1a533a0c5036f9c5f
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152529Z
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=GetCallerIdentity&Version=2011-06-15
2020-07-10T16:25:29.118+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:29 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 475
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:29 GMT
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 6a984dab-f0cd-4c99-a704-bb8653c80995
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:29 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <GetCallerIdentityResult>
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <Arn>arn:aws:sts::904806826062:assumed-role/OrganizationEngineerAccessRole/1594394728442206000</Arn>
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <UserId>AROAIJZZV4UHAQVJ4UJ66:1594394728442206000</UserId>
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <Account>904806826062</Account>
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </GetCallerIdentityResult>
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>6a984dab-f0cd-4c99-a704-bb8653c80995</RequestId>
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </GetCallerIdentityResponse>
2020-07-10T16:25:29.646+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:29 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:29 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: sts.amazonaws.com
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 43
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=718eca510abd75d74902c04d75ed857fa6f5653b4133d0c1a533a0c5036f9c5f
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152529Z
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=GetCallerIdentity&Version=2011-06-15
2020-07-10T16:25:29.647+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 475
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:29 GMT
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 2a73fecc-87c1-4928-8d4d-7a50ff9e6bd9
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <GetCallerIdentityResult>
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <Arn>arn:aws:sts::904806826062:assumed-role/OrganizationEngineerAccessRole/1594394728442206000</Arn>
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <UserId>AROAIJZZV4UHAQVJ4UJ66:1594394728442206000</UserId>
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <Account>904806826062</Account>
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </GetCallerIdentityResult>
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>2a73fecc-87c1-4928-8d4d-7a50ff9e6bd9</RequestId>
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:30.196+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </GetCallerIdentityResponse>
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeAccountAttributes Details:
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 87
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=cbab0b132a47ea5bb3328dcea5e7e6202bf4d738dd8595cb0a229bdb167cc7a4
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152530Z
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeAccountAttributes&AttributeName.1=supported-platforms&Version=2016-11-15
2020-07-10T16:25:30.198+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeAccountAttributes Details:
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 540
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:29 GMT
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 0cf010ab-ec8d-49fc-a164-218226f019a3
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeAccountAttributesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>0cf010ab-ec8d-49fc-a164-218226f019a3</requestId>
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <accountAttributeSet>
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <attributeName>supported-platforms</attributeName>
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <attributeValueSet>
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <attributeValue>VPC</attributeValue>
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </attributeValueSet>
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </accountAttributeSet>
2020-07-10T16:25:30.495+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeAccountAttributesResponse>
2020/07/10 16:25:30 [TRACE] [walkRefresh] Exiting eval tree: provider.aws
2020/07/10 16:25:30 [TRACE] vertex "provider.aws": visit complete
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "data.aws_ami.ubuntu"
2020/07/10 16:25:30 [TRACE] vertex "data.aws_ami.ubuntu": starting visit (*terraform.NodeRefreshableDataResource)
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.bucket-subdirs"
2020/07/10 16:25:30 [TRACE] vertex "data.aws_ami.ubuntu": expanding dynamic subgraph
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "aws_s3_bucket.encrypted"
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.default"
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.bucket-root"
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": starting visit (*terraform.NodeRefreshableDataResource)
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": starting visit (*terraform.NodeRefreshableDataResource)
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.default": starting visit (*terraform.NodeRefreshableDataResource)
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": expanding dynamic subgraph
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": expanding dynamic subgraph
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.default": expanding dynamic subgraph
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "aws_key_pair.main"
2020/07/10 16:25:30 [TRACE] vertex "aws_key_pair.main": starting visit (*terraform.NodeRefreshableManagedResource)
2020/07/10 16:25:30 [TRACE] vertex "aws_key_pair.main": expanding dynamic subgraph
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "data.aws_vpc.main"
2020/07/10 16:25:30 [TRACE] vertex "data.aws_vpc.main": starting visit (*terraform.NodeRefreshableDataResource)
2020/07/10 16:25:30 [TRACE] vertex "data.aws_vpc.main": expanding dynamic subgraph
2020/07/10 16:25:30 [TRACE] vertex "aws_s3_bucket.encrypted": starting visit (*terraform.NodeRefreshableManagedResource)
2020/07/10 16:25:30 [TRACE] vertex "aws_s3_bucket.encrypted": expanding dynamic subgraph
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_ami.ubuntu - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:30 [DEBUG] Resource state not found for node "data.aws_ami.ubuntu", instance data.aws_ami.ubuntu
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:30 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntu" references: []
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:30 [TRACE] vertex "data.aws_ami.ubuntu": entering dynamic subgraph
2020/07/10 16:25:30 [TRACE] dag/walk: updating graph
2020/07/10 16:25:30 [TRACE] dag/walk: added new vertex: "data.aws_ami.ubuntu"
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "data.aws_ami.ubuntu"
2020/07/10 16:25:30 [TRACE] vertex "data.aws_ami.ubuntu": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/07/10 16:25:30 [TRACE] vertex "data.aws_ami.ubuntu": evaluating
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_iam_policy_document.bucket-root - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:30 [TRACE] [walkRefresh] Entering eval tree: data.aws_ami.ubuntu
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:30 [DEBUG] Resource state not found for node "data.aws_iam_policy_document.bucket-root", instance data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:30 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.bucket-root" references: []
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": entering dynamic subgraph
2020/07/10 16:25:30 [TRACE] dag/walk: updating graph
2020/07/10 16:25:30 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.bucket-root"
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.bucket-root"
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": evaluating
2020/07/10 16:25:30 [TRACE] [walkRefresh] Entering eval tree: data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:30 [DEBUG] Resource state not found for node "data.aws_iam_policy_document.bucket-subdirs", instance data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:30 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.bucket-subdirs" references: []
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": entering dynamic subgraph
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:30 [TRACE] dag/walk: updating graph
2020/07/10 16:25:30 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.bucket-subdirs"
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_iam_policy_document.default - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.bucket-subdirs"
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": evaluating
2020/07/10 16:25:30 [TRACE] [walkRefresh] Entering eval tree: data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:30 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.default" references: []
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.default": entering dynamic subgraph
2020/07/10 16:25:30 [TRACE] dag/walk: updating graph
2020/07/10 16:25:30 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.default"
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.default"
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.default": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.default": evaluating
2020/07/10 16:25:30 [TRACE] EvalWriteState: removing state object for data.aws_ami.ubuntu
2020/07/10 16:25:30 [TRACE] [walkRefresh] Entering eval tree: data.aws_iam_policy_document.default
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalReadData
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:30 [TRACE] EvalReadData: working on data.aws_ami.ubuntu
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:30 [TRACE] EvalWriteState: removing state object for data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalReadData
2020/07/10 16:25:30 [TRACE] EvalWriteState: removing state object for data.aws_iam_policy_document.default
2020/07/10 16:25:30 [TRACE] EvalReadData: working on data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalReadData
2020/07/10 16:25:30 [TRACE] EvalReadData: working on data.aws_iam_policy_document.default
2020/07/10 16:25:30 [TRACE] EvalWriteState: removing state object for data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalReadData
2020/07/10 16:25:30 [TRACE] EvalReadData: working on data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_key_pair.main - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:30 [DEBUG] Resource state not found for node "aws_key_pair.main", instance aws_key_pair.main
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:30 [DEBUG] ReferenceTransformer: "aws_key_pair.main" references: []
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:30 [TRACE] vertex "aws_key_pair.main": entering dynamic subgraph
2020/07/10 16:25:30 [TRACE] dag/walk: updating graph
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:30 [TRACE] dag/walk: added new vertex: "aws_key_pair.main"
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "aws_key_pair.main"
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_vpc.main - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/07/10 16:25:30 [TRACE] vertex "aws_key_pair.main": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:30 [TRACE] Re-validating config for data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:30 [TRACE] Re-validating config for data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:30 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/07/10 16:25:30 [DEBUG] Resource state not found for node "data.aws_vpc.main", instance data.aws_vpc.main
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:30 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:30 [TRACE] Re-validating config for data.aws_ami.ubuntu
2020/07/10 16:25:30 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/07/10 16:25:30 [TRACE] NodeRefreshableManagedResourceInstance: aws_key_pair.main has no existing state to refresh
2020/07/10 16:25:30 [TRACE] vertex "aws_key_pair.main": evaluating
2020/07/10 16:25:30 [TRACE] [walkRefresh] Entering eval tree: aws_key_pair.main
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:30 [DEBUG] ReferenceTransformer: "data.aws_vpc.main" references: []
2020/07/10 16:25:30 [TRACE] EvalReadState: reading state for aws_key_pair.main
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:30 [TRACE] vertex "data.aws_vpc.main": entering dynamic subgraph
2020/07/10 16:25:30 [TRACE] dag/walk: updating graph
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:30 [TRACE] dag/walk: added new vertex: "data.aws_vpc.main"
2020/07/10 16:25:30 [TRACE] EvalReadState: no state present for aws_key_pair.main
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "data.aws_vpc.main"
2020/07/10 16:25:30 [TRACE] vertex "data.aws_vpc.main": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_s3_bucket.encrypted - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:30 [TRACE] Re-validating config for data.aws_iam_policy_document.default
2020/07/10 16:25:30 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:30 [TRACE] vertex "data.aws_vpc.main": evaluating
2020/07/10 16:25:30 [TRACE] [walkRefresh] Entering eval tree: data.aws_vpc.main
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:30 [TRACE] EvalReadData: data.aws_iam_policy_document.bucket-root configuration is complete, so reading from provider
2020/07/10 16:25:30 [TRACE] EvalReadData: data.aws_iam_policy_document.default configuration is complete, so reading from provider
2020/07/10 16:25:30 [TRACE] GRPCProvider: ReadDataSource
2020/07/10 16:25:30 [TRACE] EvalReadData: data.aws_iam_policy_document.bucket-subdirs configuration is complete, so reading from provider
2020/07/10 16:25:30 [TRACE] EvalReadData: data.aws_ami.ubuntu configuration is complete, so reading from provider
2020/07/10 16:25:30 [TRACE] GRPCProvider: ReadDataSource
2020/07/10 16:25:30 [TRACE] GRPCProvider: ReadDataSource
2020/07/10 16:25:30 [TRACE] GRPCProvider: ReadDataSource
2020/07/10 16:25:30 [DEBUG] ReferenceTransformer: "aws_s3_bucket.encrypted" references: []
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:30 [TRACE] vertex "aws_s3_bucket.encrypted": entering dynamic subgraph
2020/07/10 16:25:30 [TRACE] dag/walk: updating graph
2020/07/10 16:25:30 [TRACE] Re-validating config for "aws_key_pair.main"
2020/07/10 16:25:30 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:30 [TRACE] EvalWriteState: removing state object for data.aws_vpc.main
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalReadData
2020/07/10 16:25:30 [TRACE] EvalReadData: working on data.aws_vpc.main
2020/07/10 16:25:30 [TRACE] dag/walk: added new vertex: "aws_s3_bucket.encrypted"
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "aws_s3_bucket.encrypted"
2020/07/10 16:25:30 [TRACE] vertex "aws_s3_bucket.encrypted": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/07/10 16:25:30 [TRACE] NodeRefreshableManagedResourceInstance: aws_s3_bucket.encrypted will be refreshed
2020/07/10 16:25:30 [TRACE] vertex "aws_s3_bucket.encrypted": evaluating
2020/07/10 16:25:30 [TRACE] [walkRefresh] Entering eval tree: aws_s3_bucket.encrypted
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalReadState
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] Reading AMI: {
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Filters: [{
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Name: "virtualization-type",
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Values: ["hvm"]
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     },{
2020/07/10 16:25:30 [TRACE] EvalReadState: reading state for aws_s3_bucket.encrypted
2020/07/10 16:25:30 [TRACE] Re-validating config for data.aws_vpc.main
2020/07/10 16:25:30 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Name: "name",
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Values: ["ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-*"]
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     }],
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Owners: ["099720109477"]
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: }
2020/07/10 16:25:30 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:30 [TRACE] UpgradeResourceState: schema version of aws_s3_bucket.encrypted is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2020/07/10 16:25:30 [TRACE] GRPCProvider: UpgradeResourceState
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeImages Details:
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 217
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=e781f81582d2461d9cfa06859e4ea6b15443738be8cf8c2a0158a5186454676b
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152530Z
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020/07/10 16:25:30 [TRACE] EvalReadData: data.aws_vpc.main configuration is complete, so reading from provider
2020-07-10T16:25:30.502+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeImages&Filter.1.Name=virtualization-type&Filter.1.Value.1=hvm&Filter.2.Name=name&Filter.2.Value.1=ubuntu%2Fimages%2Fhvm-ssd%2Fubuntu-bionic-18.04-amd64-server-%2A&Owner.1=099720109477&Version=2016-11-15
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalWriteState
2020-07-10T16:25:30.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020/07/10 16:25:30 [TRACE] EvalWriteState: writing current state object for data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:30 [TRACE] EvalWriteState: writing current state object for data.aws_iam_policy_document.default
2020/07/10 16:25:30 [TRACE] GRPCProvider: ReadDataSource
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:30 [TRACE] EvalWriteState: writing current state object for data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:25:30 [TRACE] [walkRefresh] Exiting eval tree: data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": visit complete
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": dynamic subgraph completed successfully
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": visit complete
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:25:30 [TRACE] [walkRefresh] Exiting eval tree: data.aws_iam_policy_document.default
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.default": visit complete
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.default": dynamic subgraph completed successfully
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.default": visit complete
2020/07/10 16:25:30 [TRACE] [walkRefresh] Exiting eval tree: data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": visit complete
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "aws_iam_role.main"
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": dynamic subgraph completed successfully
2020/07/10 16:25:30 [TRACE] vertex "aws_iam_role.main": starting visit (*terraform.NodeRefreshableManagedResource)
2020/07/10 16:25:30 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": visit complete
2020/07/10 16:25:30 [TRACE] vertex "aws_iam_role.main": expanding dynamic subgraph
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role.main - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:30 [DEBUG] ReferenceTransformer: "aws_iam_role.main" references: []
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:30 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:30 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:30 [TRACE] vertex "aws_iam_role.main": entering dynamic subgraph
2020/07/10 16:25:30 [TRACE] dag/walk: updating graph
2020/07/10 16:25:30 [TRACE] dag/walk: added new vertex: "aws_iam_role.main"
2020/07/10 16:25:30 [TRACE] dag/walk: visiting "aws_iam_role.main"
2020-07-10T16:25:30.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] Reading AWS VPC: {
2020-07-10T16:25:30.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Filters: [{
2020/07/10 16:25:30 [TRACE] vertex "aws_iam_role.main": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020-07-10T16:25:30.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Name: "isDefault",
2020-07-10T16:25:30.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Values: ["true"]
2020/07/10 16:25:30 [TRACE] NodeRefreshableManagedResourceInstance: aws_iam_role.main will be refreshed
2020/07/10 16:25:30 [TRACE] vertex "aws_iam_role.main": evaluating
2020-07-10T16:25:30.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     }]
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: }
2020/07/10 16:25:30 [TRACE] [walkRefresh] Entering eval tree: aws_iam_role.main
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:30 [TRACE] EvalReadState: reading state for aws_iam_role.main
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeVpcs Details:
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020/07/10 16:25:30 [TRACE] UpgradeResourceState: schema version of aws_iam_role.main is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2020/07/10 16:25:30 [TRACE] GRPCProvider: UpgradeResourceState
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 84
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=79a86493b51cee212f423ae5d8d9f57b7e334bec3ef7e998a38af5d9b8dc76e1
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152530Z
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeVpcs&Filter.1.Name=isDefault&Filter.1.Value.1=true&Version=2016-11-15
2020-07-10T16:25:30.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020/07/10 16:25:30 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:30 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.main
2020/07/10 16:25:30 [TRACE] EvalWriteState: writing current state object for aws_key_pair.main
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:30 [TRACE] EvalWriteDiff: recorded Create change for aws_key_pair.main
2020/07/10 16:25:30 [TRACE] [walkRefresh] Exiting eval tree: aws_key_pair.main
2020/07/10 16:25:30 [TRACE] vertex "aws_key_pair.main": visit complete
2020/07/10 16:25:30 [TRACE] vertex "aws_key_pair.main": dynamic subgraph completed successfully
2020/07/10 16:25:30 [TRACE] vertex "aws_key_pair.main": visit complete
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/07/10 16:25:30 [TRACE] GRPCProvider: ReadResource
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetRole Details:
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: iam.amazonaws.com
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 50
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=b39e5ce4c1ea1e36a07c447932ac60c86c199880f1a165081ec55a906279cbd0
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152530Z
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=GetRole&RoleName=default&Version=2010-05-08
2020-07-10T16:25:30.506+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/07/10 16:25:30 [TRACE] GRPCProvider: ReadResource
2020-07-10T16:25:30.508+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:30.509+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Request s3/HeadBucket Details:
2020-07-10T16:25:30.509+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:30.509+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HEAD / HTTP/1.1
2020-07-10T16:25:30.509+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:30.509+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:30.509+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=5a85bec42c9bdbff053d2a7e802b2e71f9d20573200c312726d8de2edb0af01a
2020-07-10T16:25:30.509+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:30.509+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152530Z
2020-07-10T16:25:30.509+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:30.509+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.509+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.509+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Response s3/HeadBucket Details:
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/xml
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:31 GMT
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Bucket-Region: eu-west-2
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: p7zaDjvX0hHxmmRpMfLptZRS/nfqj4w1zDYuLyk7KwAlaGzDDCtERYFr04P8wWgSZ7enBgqR5EU=
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 534B120AC66C3879
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] 
2020-07-10T16:25:30.717+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:30.718+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Request s3/GetBucketAcl Details:
2020-07-10T16:25:30.718+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:30.718+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: GET /?acl= HTTP/1.1
2020-07-10T16:25:30.718+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:30.718+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:30.718+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=7d4089d21cd28686fcd0647af7824752bb52dd3ec56cafd853775fa8a55e6d12
2020-07-10T16:25:30.718+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:30.718+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152530Z
2020-07-10T16:25:30.718+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:30.718+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:30.718+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.718+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.718+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeVpcs Details:
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 1132
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:30 GMT
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 001f12d9-2fd3-4493-86fd-8e0ff943abf7
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeVpcsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>001f12d9-2fd3-4493-86fd-8e0ff943abf7</requestId>
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <vpcSet>
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ownerId>904806826062</ownerId>
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <state>available</state>
2020-07-10T16:25:30.788+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <cidrBlock>172.31.0.0/16</cidrBlock>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <cidrBlockAssociationSet>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <cidrBlock>172.31.0.0/16</cidrBlock>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <associationId>vpc-cidr-assoc-9af1ccf3</associationId>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <cidrBlockState>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <state>associated</state>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </cidrBlockState>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </cidrBlockAssociationSet>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <dhcpOptionsId>dopt-ac2520c5</dhcpOptionsId>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <tagSet>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <key>Name</key>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <value>default-dev</value>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </tagSet>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <instanceTenancy>default</instanceTenancy>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isDefault>true</isDefault>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </vpcSet>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeVpcsResponse>
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeVpcAttribute Details:
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 92
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=896635019f0f0c16078fd8978c50d7ca4eae714919f1fb8091958621fa9e5af5
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152530Z
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeVpcAttribute&Attribute=enableDnsSupport&Version=2016-11-15&VpcId=vpc-b31026da
2020-07-10T16:25:30.789+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:30.849+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeImages Details:
2020-07-10T16:25:30.849+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:30.849+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:30.849+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:30.849+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:30.849+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:30.849+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:29 GMT
2020-07-10T16:25:30.849+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:30.849+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Vary: accept-encoding
2020-07-10T16:25:30.849+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: b23dd0f6-636f-443e-9204-1657648a763a
2020-07-10T16:25:30.849+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.849+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.849+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeImagesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>b23dd0f6-636f-443e-9204-1657648a763a</requestId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <imagesSet>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-00622b440d92e55c0</imageId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20191113</imageLocation>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-11-13T19:28:30.000Z</creationDate>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20191113</name>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-11-13</description>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-036ac615190c53caf</snapshotId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-006a0174c6c25ac06</imageId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200112</imageLocation>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2020-01-15T00:31:15.000Z</creationDate>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200112</name>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2020-01-12</description>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0883fb5a415374df1</snapshotId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-00f6a0c18edb19300</imageId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200611</imageLocation>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2020-06-11T22:06:10.000Z</creationDate>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200611</name>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2020-06-11</description>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-06f847eaf12ac49b1</snapshotId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-00f94dc949fea2adf</imageId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20191021</imageLocation>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-10-21T22:21:46.000Z</creationDate>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20191021</name>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-10-21</description>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-02549a32f2439afe6</snapshotId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-012d95ddd53c98e0e</imageId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190911</imageLocation>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-09-12T04:43:59.000Z</creationDate>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190911</name>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-09-11</description>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-00feb5e33b0f15e08</snapshotId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0207d97139a2faf80</imageId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190531</imageLocation>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-05-31T21:44:03.000Z</creationDate>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190531</name>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-05-31</description>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.850+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-02da2fc96a3dbb55e</snapshotId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0311dc90a352b25f4</imageId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190320</imageLocation>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-03-21T16:01:35.000Z</creationDate>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190320</name>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-03-20</description>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0cec4b97a4fc5dc8d</snapshotId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-031e9af9a62a515ca</imageId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190210</imageLocation>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-02-10T21:03:13.000Z</creationDate>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190210</name>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-02-10</description>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0518542e6a962479d</snapshotId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-03d165a23585a8023</imageId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200610.1</imageLocation>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2020-06-11T21:37:20.000Z</creationDate>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200610.1</name>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2020-06-10</description>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0504130c7cbd44036</snapshotId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-03f2ee00e9dc6b85f</imageId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20181012</imageLocation>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2018-10-13T15:11:50.000Z</creationDate>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20181012</name>
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2018-10-12</description>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0b9860c0ee042bc57</snapshotId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:30 [TRACE] EvalWriteState: writing current state object for data.aws_ami.ubuntu
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0491922b4ce27064c</imageId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180823</imageLocation>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2018-08-28T12:35:47.000Z</creationDate>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180823</name>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2018-08-23</description>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0b50f4a92c1118ef1</snapshotId>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.851+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-04b69fa254407c8ee</imageId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190122</imageLocation>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-01-23T02:47:59.000Z</creationDate>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190122</name>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-01-22</description>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0e8842b116c283e4d</snapshotId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020/07/10 16:25:30 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020/07/10 16:25:30 [TRACE] [walkRefresh] Exiting eval tree: data.aws_ami.ubuntu
2020/07/10 16:25:30 [TRACE] vertex "data.aws_ami.ubuntu": visit complete
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020/07/10 16:25:30 [TRACE] vertex "data.aws_ami.ubuntu": dynamic subgraph completed successfully
2020/07/10 16:25:30 [TRACE] vertex "data.aws_ami.ubuntu": visit complete
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-04cc79dd5df3bffca</imageId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200131</imageLocation>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2020-02-04T18:52:18.000Z</creationDate>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200131</name>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2020-01-31</description>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0bdb89a05502e2bff</snapshotId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0573b1dbbd809d6c3</imageId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20181203</imageLocation>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2018-12-03T19:23:30.000Z</creationDate>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20181203</name>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2018-12-03</description>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0a8440b23ab3d3c0f</snapshotId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-05ee341f1ab0f2643</imageId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20181105.1</imageLocation>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2018-11-06T15:39:06.000Z</creationDate>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20181105.1</name>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2018-11-05</description>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0caf8dbda09657777</snapshotId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-06328f1e652dc7605</imageId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20181124</imageLocation>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2018-11-26T17:53:33.000Z</creationDate>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20181124</name>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2018-11-24</description>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0224ff273315ee758</snapshotId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-068f09e337d7da0c4</imageId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190403</imageLocation>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-04-03T22:16:50.000Z</creationDate>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190403</name>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-04-03</description>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.852+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-03c552d02dc0d6ba8</snapshotId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-077a5b1762a2dde35</imageId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190722.1</imageLocation>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-07-25T19:49:32.000Z</creationDate>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190722.1</name>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-07-22</description>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-090bfa34796733b92</snapshotId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-07dc734dc14746eab</imageId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190212.1</imageLocation>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-02-13T12:48:49.000Z</creationDate>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190212.1</name>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-02-12</description>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0160fe9487706c145</snapshotId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-08eb9fcd3adef14f2</imageId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190116</imageLocation>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-01-17T17:22:55.000Z</creationDate>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190116</name>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-01-16</description>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-086a574f5b1b44994</snapshotId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-09393cef16d65b519</imageId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190918</imageLocation>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-09-18T22:30:10.000Z</creationDate>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190918</name>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-09-18</description>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0b31b55d1b3b90b35</snapshotId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-09d9cc949a8e2e8b3</imageId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200430</imageLocation>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2020-05-07T13:46:31.000Z</creationDate>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200430</name>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2020-04-30</description>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-08f8de0f86f464526</snapshotId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-09dd110e91f421069</imageId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190514</imageLocation>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-05-15T09:16:19.000Z</creationDate>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190514</name>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-05-14</description>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0dd5e3462470f68d9</snapshotId>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.853+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0a7c91b6616d113b1</imageId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190814</imageLocation>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-08-19T18:11:46.000Z</creationDate>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190814</name>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-08-14</description>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0c3b8cdcc034404ce</snapshotId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0a8704644fd8f6946</imageId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190429</imageLocation>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-05-01T11:45:49.000Z</creationDate>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190429</name>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-04-29</description>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0f844f9d80b2a130d</snapshotId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0b0a60c0a2bd40612</imageId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180912</imageLocation>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2018-09-12T21:04:56.000Z</creationDate>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180912</name>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2018-09-12</description>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0739e5e3ed4d106de</snapshotId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0be057a22c63962cb</imageId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20191002</imageLocation>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-10-02T23:29:09.000Z</creationDate>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20191002</name>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-10-02</description>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-09a88970c93988e3f</snapshotId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0c30afcb7ab02233d</imageId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190627.1</imageLocation>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-06-27T21:46:37.000Z</creationDate>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190627.1</name>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-06-27</description>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0fb925a9a9f399b7a</snapshotId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0c3f128b7298d29b9</imageId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20191010</imageLocation>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-10-10T22:14:08.000Z</creationDate>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20191010</name>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-10-10</description>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-05ae676cf2e90361f</snapshotId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0ce847e39053291c5</imageId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200317</imageLocation>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2020-03-17T21:05:59.000Z</creationDate>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200317</name>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2020-03-17</description>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0fab7221132e57465</snapshotId>
2020-07-10T16:25:30.854+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0d16d6551155308a4</imageId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200610</imageLocation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2020-06-11T21:13:02.000Z</creationDate>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200610</name>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2020-06-10</description>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0d9a3858117f34c53</snapshotId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0dee12b7525b27db5</imageId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200311</imageLocation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2020-03-12T20:56:16.000Z</creationDate>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200311</name>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2020-03-11</description>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-056b0e53bbc054793</snapshotId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0eb89db7593b5d434</imageId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200408</imageLocation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2020-04-09T16:44:39.000Z</creationDate>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200408</name>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2020-04-08</description>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-082d1ef4c14ba0c91</snapshotId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0ed2df11a6d41ea78</imageId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200323</imageLocation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2020-03-24T20:56:43.000Z</creationDate>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200323</name>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2020-03-23</description>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-02d0f1e3d04fe69ea</snapshotId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-0ee246e709782b1be</imageId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190617</imageLocation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2019-06-18T05:28:50.000Z</creationDate>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20190617</name>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-06-17</description>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-05bb0293d7f8b1227</snapshotId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-299d734e</imageId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180613</imageLocation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2018-06-13T23:49:20.000Z</creationDate>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180613</name>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2018-06-13</description>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0c10708861cc0a7ed</snapshotId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-54d12433</imageId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180806</imageLocation>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2018-08-07T10:46:48.000Z</creationDate>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180806</name>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2018-08-06</description>
2020-07-10T16:25:30.855+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0086a00134d04f6c2</snapshotId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-7cde341b</imageId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180724</imageLocation>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2018-07-25T16:07:50.000Z</creationDate>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180724</name>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2018-07-24</description>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0c8200eecf33c6cba</snapshotId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-9baf43fc</imageId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180522</imageLocation>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2018-05-22T17:32:59.000Z</creationDate>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180522</name>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2018-05-22</description>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-04fc36f1fbdd0d105</snapshotId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-cc6d8eab</imageId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180426.2</imageLocation>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2018-04-26T22:01:43.000Z</creationDate>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180426.2</name>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2018-04-26</description>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-0d586f073dde36708</snapshotId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-ddb950ba</imageId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180617</imageLocation>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2018-06-22T19:47:30.000Z</creationDate>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180617</name>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2018-06-17</description>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-03eb24d2894b2ff67</snapshotId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-e4ad5983</imageId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageLocation>099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180814</imageLocation>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageState>available</imageState>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageOwnerId>099720109477</imageOwnerId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <creationDate>2018-08-15T00:18:37.000Z</creationDate>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isPublic>true</isPublic>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageType>machine</imageType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sriovNetSupport>simple</sriovNetSupport>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <name>ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20180814</name>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <description>Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2018-08-14</description>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sda1</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebs>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <snapshotId>snap-09289474a62a0e41e</snapshotId>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeSize>8</volumeSize>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <volumeType>gp2</volumeType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <encrypted>false</encrypted>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ebs>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdb</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral0</virtualName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deviceName>/dev/sdc</deviceName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualName>ephemeral1</virtualName>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </blockDeviceMapping>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enaSupport>true</enaSupport>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <platformDetails>Linux/UNIX</platformDetails>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <usageOperation>RunInstances</usageOperation>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </imagesSet>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeImagesResponse>
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sda1 ebs:map[delete_on_termination:true encrypted:false iops:0 snapshot_id:snap-06f847eaf12ac49b1 volume_size:8 volume_type:gp2] virtual_name:]
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sdb virtual_name:ephemeral0]
2020-07-10T16:25:30.856+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sdc virtual_name:ephemeral1]
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Response s3/GetBucketAcl Details:
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/xml
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:31 GMT
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: YqFJw8nKZ2DywW4uiLeOasOGoiyIZsirNzHmge20EKovgF/HAP1k1VJI7kl7HGOWkzyEsqb7Kvk=
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 7E89E4A4CF1879DE
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <AccessControlPolicy xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Owner><ID>a638584f970e439a091147a9e860a68f68eb32c03355262e4f0f83b5218de5e4</ID></Owner><AccessControlList><Grant><Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser"><ID>a638584f970e439a091147a9e860a68f68eb32c03355262e4f0f83b5218de5e4</ID></Grantee><Permission>FULL_CONTROL</Permission></Grant></AccessControlList></AccessControlPolicy>
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] S3 bucket: pipeline-docker-registry-bucket, read ACL grants policy: {
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Grants: [{
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Grantee: {
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         ID: "a638584f970e439a091147a9e860a68f68eb32c03355262e4f0f83b5218de5e4",
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         Type: "CanonicalUser"
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       },
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Permission: "FULL_CONTROL"
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     }],
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Owner: {
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     ID: "a638584f970e439a091147a9e860a68f68eb32c03355262e4f0f83b5218de5e4"
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   }
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: }
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:30 [DEBUG] [aws-sdk-go] DEBUG: Request s3/GetBucketCors Details:
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: GET /?cors= HTTP/1.1
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=6ec8e0d18e73ab8e1be6d8cdd3dbe561d73a66002fa7e43a0f43c1a7ef1b37d7
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152530Z
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:30.913+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeVpcAttribute Details:
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 321
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:30 GMT
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: e6a05ec4-fdb5-471c-a603-20571f99c9af
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeVpcAttributeResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>e6a05ec4-fdb5-471c-a603-20571f99c9af</requestId>
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <enableDnsSupport>
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <value>true</value>
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </enableDnsSupport>
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeVpcAttributeResponse>
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeVpcAttribute Details:
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 94
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=5b558c73e9443b8f56722c3f60e4dde279633e908e9b5710faa27e84570eecc9
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152531Z
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeVpcAttribute&Attribute=enableDnsHostnames&Version=2016-11-15&VpcId=vpc-b31026da
2020-07-10T16:25:31.040+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetRole Details:
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 935
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:30 GMT
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 34b1e7da-6305-4b91-8ca0-716df70ef21e
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] <GetRoleResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <GetRoleResult>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <Role>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <Path>/</Path>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <AssumeRolePolicyDocument>%7B%22Version%22%3A%222012-10-17%22%2C%22Statement%22%3A%5B%7B%22Sid%22%3A%22%22%2C%22Effect%22%3A%22Allow%22%2C%22Principal%22%3A%7B%22Service%22%3A%22ec2.amazonaws.com%22%7D%2C%22Action%22%3A%22sts%3AAssumeRole%22%7D%5D%7D</AssumeRolePolicyDocument>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <MaxSessionDuration>3600</MaxSessionDuration>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <RoleId>AROA5FKVQQBHG7OTNJPMS</RoleId>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <RoleLastUsed>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <LastUsedDate>2020-07-10T14:49:26Z</LastUsedDate>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <Region>eu-west-2</Region>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       </RoleLastUsed>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <RoleName>default</RoleName>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <Arn>arn:aws:iam::904806826062:role/default</Arn>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <CreateDate>2020-07-09T18:23:35Z</CreateDate>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </Role>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </GetRoleResult>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>34b1e7da-6305-4b91-8ca0-716df70ef21e</RequestId>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:31.057+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </GetRoleResponse>
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:31 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_role.main
2020/07/10 16:25:31 [TRACE] EvalWriteState: writing current state object for aws_iam_role.main
2020/07/10 16:25:31 [TRACE] [walkRefresh] Exiting eval tree: aws_iam_role.main
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role.main": visit complete
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role.main": dynamic subgraph completed successfully
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role.main": visit complete
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": starting visit (*terraform.NodeRefreshableManagedResource)
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": expanding dynamic subgraph
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_iam_instance_profile.main"
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_s3_bucket_policy.main"
2020/07/10 16:25:31 [TRACE] vertex "aws_s3_bucket_policy.main": starting visit (*terraform.NodeRefreshableManagedResource)
2020/07/10 16:25:31 [TRACE] vertex "aws_s3_bucket_policy.main": expanding dynamic subgraph
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_instance_profile.main": starting visit (*terraform.NodeRefreshableManagedResource)
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_instance_profile.main": expanding dynamic subgraph
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-root": starting visit (*terraform.NodeRefreshableManagedResource)
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-root": expanding dynamic subgraph
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:31 [DEBUG] Resource state not found for node "aws_iam_role_policy.bucket-subdirs", instance aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:31 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-subdirs" references: []
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": entering dynamic subgraph
2020/07/10 16:25:31 [TRACE] dag/walk: updating graph
2020/07/10 16:25:31 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/07/10 16:25:31 [TRACE] NodeRefreshableManagedResourceInstance: aws_iam_role_policy.bucket-subdirs has no existing state to refresh
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": evaluating
2020/07/10 16:25:31 [TRACE] [walkRefresh] Entering eval tree: aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_s3_bucket_policy.main - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:31 [DEBUG] Resource state not found for node "aws_s3_bucket_policy.main", instance aws_s3_bucket_policy.main
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:31 [TRACE] EvalReadState: reading state for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:31 [DEBUG] ReferenceTransformer: "aws_s3_bucket_policy.main" references: []
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:31 [TRACE] vertex "aws_s3_bucket_policy.main": entering dynamic subgraph
2020/07/10 16:25:31 [TRACE] dag/walk: updating graph
2020/07/10 16:25:31 [TRACE] dag/walk: added new vertex: "aws_s3_bucket_policy.main"
2020/07/10 16:25:31 [TRACE] EvalReadState: no state present for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_s3_bucket_policy.main"
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:31 [TRACE] vertex "aws_s3_bucket_policy.main": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:31 [TRACE] NodeRefreshableManagedResourceInstance: aws_s3_bucket_policy.main has no existing state to refresh
2020/07/10 16:25:31 [DEBUG] Resource state not found for node "aws_iam_instance_profile.main", instance aws_iam_instance_profile.main
2020/07/10 16:25:31 [TRACE] vertex "aws_s3_bucket_policy.main": evaluating
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:31 [TRACE] [walkRefresh] Entering eval tree: aws_s3_bucket_policy.main
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:31 [TRACE] EvalReadState: reading state for aws_s3_bucket_policy.main
2020/07/10 16:25:31 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.main" references: []
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_instance_profile.main": entering dynamic subgraph
2020/07/10 16:25:31 [TRACE] dag/walk: updating graph
2020/07/10 16:25:31 [TRACE] dag/walk: added new vertex: "aws_iam_instance_profile.main"
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_iam_instance_profile.main"
2020/07/10 16:25:31 [TRACE] EvalReadState: no state present for aws_s3_bucket_policy.main
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_instance_profile.main": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy.bucket-root - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:31 [TRACE] NodeRefreshableManagedResourceInstance: aws_iam_instance_profile.main has no existing state to refresh
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_instance_profile.main": evaluating
2020/07/10 16:25:31 [DEBUG] Resource state not found for node "aws_iam_role_policy.bucket-root", instance aws_iam_role_policy.bucket-root
2020/07/10 16:25:31 [TRACE] [walkRefresh] Entering eval tree: aws_iam_instance_profile.main
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:31 [TRACE] EvalReadState: reading state for aws_iam_instance_profile.main
2020/07/10 16:25:31 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-root" references: []
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-root": entering dynamic subgraph
2020/07/10 16:25:31 [TRACE] dag/walk: updating graph
2020/07/10 16:25:31 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:31 [TRACE] EvalReadState: no state present for aws_iam_instance_profile.main
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-root": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/07/10 16:25:31 [TRACE] NodeRefreshableManagedResourceInstance: aws_iam_role_policy.bucket-root has no existing state to refresh
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-root": evaluating
2020/07/10 16:25:31 [TRACE] [walkRefresh] Entering eval tree: aws_iam_role_policy.bucket-root
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:31 [TRACE] EvalReadState: reading state for aws_iam_role_policy.bucket-root
2020/07/10 16:25:31 [TRACE] EvalReadState: no state present for aws_iam_role_policy.bucket-root
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:31 [TRACE] Re-validating config for "aws_iam_instance_profile.main"
2020/07/10 16:25:31 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:31 [TRACE] Re-validating config for "aws_s3_bucket_policy.main"
2020/07/10 16:25:31 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:31 [TRACE] Re-validating config for "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:31 [TRACE] Re-validating config for "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:31 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:31 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:31 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:31 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:31 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:31 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:31 [TRACE] EvalWriteState: recording 1 dependencies for aws_s3_bucket_policy.main
2020/07/10 16:25:31 [TRACE] EvalWriteState: writing current state object for aws_s3_bucket_policy.main
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:31 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:31 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_role_policy.bucket-root
2020/07/10 16:25:31 [TRACE] EvalWriteDiff: recorded Create change for aws_s3_bucket_policy.main
2020/07/10 16:25:31 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:31 [TRACE] [walkRefresh] Exiting eval tree: aws_s3_bucket_policy.main
2020/07/10 16:25:31 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy.bucket-root
2020/07/10 16:25:31 [TRACE] vertex "aws_s3_bucket_policy.main": visit complete
2020/07/10 16:25:31 [TRACE] vertex "aws_s3_bucket_policy.main": dynamic subgraph completed successfully
2020/07/10 16:25:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:31 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_instance_profile.main
2020/07/10 16:25:31 [TRACE] EvalWriteState: writing current state object for aws_iam_instance_profile.main
2020/07/10 16:25:31 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy.bucket-root
2020/07/10 16:25:31 [TRACE] vertex "aws_s3_bucket_policy.main": visit complete
2020/07/10 16:25:31 [TRACE] [walkRefresh] Exiting eval tree: aws_iam_role_policy.bucket-root
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-root": visit complete
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-root": dynamic subgraph completed successfully
2020/07/10 16:25:31 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-root": visit complete
2020/07/10 16:25:31 [TRACE] [walkRefresh] Exiting eval tree: aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": visit complete
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": dynamic subgraph completed successfully
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": visit complete
2020/07/10 16:25:31 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_instance_profile.main
2020/07/10 16:25:31 [TRACE] [walkRefresh] Exiting eval tree: aws_iam_instance_profile.main
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_instance_profile.main": visit complete
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_instance_profile.main": dynamic subgraph completed successfully
2020/07/10 16:25:31 [TRACE] vertex "aws_iam_instance_profile.main": visit complete
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Response s3/GetBucketCors Details:
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 404 Not Found
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/xml
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:30 GMT
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: nCEBwKIFhS6NrNsVbMNmp1/cWs3YfhLMemPTW9f++byHeTrRi+WP/nEXJRBB6vYaQDtMTIou0Ds=
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 7B40E72A9313F628
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <Error><Code>NoSuchCORSConfiguration</Code><Message>The CORS configuration does not exist</Message><BucketName>pipeline-docker-registry-bucket</BucketName><RequestId>7B40E72A9313F628</RequestId><HostId>nCEBwKIFhS6NrNsVbMNmp1/cWs3YfhLMemPTW9f++byHeTrRi+WP/nEXJRBB6vYaQDtMTIou0Ds=</HostId></Error>
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Validate Response s3/GetBucketCors failed, attempt 0/25, error NoSuchCORSConfiguration: The CORS configuration does not exist
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 	status code: 404, request id: 7B40E72A9313F628, host id: nCEBwKIFhS6NrNsVbMNmp1/cWs3YfhLMemPTW9f++byHeTrRi+WP/nEXJRBB6vYaQDtMTIou0Ds=
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Request s3/GetBucketWebsite Details:
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: GET /?website= HTTP/1.1
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=cc3b4771d46b209e4410eba0e2f908264208f8e4dc014d898c0ea7775ce97886
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152531Z
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.109+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeVpcAttribute Details:
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 325
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:30 GMT
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: cc48eb3a-4252-43ea-877f-80ec7ab330fc
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeVpcAttributeResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>cc48eb3a-4252-43ea-877f-80ec7ab330fc</requestId>
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <enableDnsHostnames>
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <value>true</value>
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </enableDnsHostnames>
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeVpcAttributeResponse>
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeRouteTables Details:
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 149
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=c5c107f739f6b5e631bded73fa67a98f99896b3392882e3385aafdbb67154190
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152531Z
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeRouteTables&Filter.1.Name=association.main&Filter.1.Value.1=true&Filter.2.Name=vpc-id&Filter.2.Value.1=vpc-b31026da&Version=2016-11-15
2020-07-10T16:25:31.294+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.306+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Response s3/GetBucketWebsite Details:
2020-07-10T16:25:31.306+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:31.306+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 404 Not Found
2020-07-10T16:25:31.306+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:31.306+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:31.306+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/xml
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:30 GMT
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: YuXtIm+h4LgZQF7RU6Qyei5voAWSBS3R4XymFSGDkNlush2YvaHAQtK9dbfxHszUSMx6Wvf7Ipo=
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 5091C7EC719D0B48
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <Error><Code>NoSuchWebsiteConfiguration</Code><Message>The specified bucket does not have a website configuration</Message><BucketName>pipeline-docker-registry-bucket</BucketName><RequestId>5091C7EC719D0B48</RequestId><HostId>YuXtIm+h4LgZQF7RU6Qyei5voAWSBS3R4XymFSGDkNlush2YvaHAQtK9dbfxHszUSMx6Wvf7Ipo=</HostId></Error>
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Validate Response s3/GetBucketWebsite failed, attempt 0/25, error NoSuchWebsiteConfiguration: The specified bucket does not have a website configuration
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 	status code: 404, request id: 5091C7EC719D0B48, host id: YuXtIm+h4LgZQF7RU6Qyei5voAWSBS3R4XymFSGDkNlush2YvaHAQtK9dbfxHszUSMx6Wvf7Ipo=
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Request s3/GetBucketVersioning Details:
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: GET /?versioning= HTTP/1.1
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=d9db8aa72ee91219b739958228b76487c86822343030613d7c41b9b1ffb7ca55
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152531Z
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.307+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Response s3/GetBucketVersioning Details:
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:32 GMT
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: wWR6JXCxeri9EIQLZEto+6Q+RllKZX6LRiFcTgaBRXuYBpSDbVK2CtfgPzMS0JYctvGCwuW9OLI=
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: A83D5CC82C4653F1
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <VersioningConfiguration xmlns="http://s3.amazonaws.com/doc/2006-03-01/"/>
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Request s3/GetBucketAccelerateConfiguration Details:
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: GET /?accelerate= HTTP/1.1
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=7b521f6ca4cea532a91958b55171c4bbfbedfb7b8027f6a14af7a76f16f48ef7
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152531Z
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:31.489+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:31.490+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.490+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.490+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeRouteTables Details:
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 1488
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:31 GMT
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 63234cd7-d736-46d2-9c89-cd37ae0bfea7
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeRouteTablesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>63234cd7-d736-46d2-9c89-cd37ae0bfea7</requestId>
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <routeTableSet>
2020-07-10T16:25:31.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <routeTableId>rtb-8f8095e6</routeTableId>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ownerId>904806826062</ownerId>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <routeSet>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <destinationCidrBlock>172.31.0.0/16</destinationCidrBlock>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <gatewayId>local</gatewayId>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <state>active</state>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <origin>CreateRouteTable</origin>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <destinationCidrBlock>0.0.0.0/0</destinationCidrBlock>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <gatewayId>igw-b9dfb3d0</gatewayId>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <state>active</state>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <origin>CreateRoute</origin>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </routeSet>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <associationSet>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <routeTableAssociationId>rtbassoc-e0af6588</routeTableAssociationId>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <routeTableId>rtb-8f8095e6</routeTableId>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <main>true</main>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <associationState>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <state>associated</state>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </associationState>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </associationSet>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <propagatingVgwSet/>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <tagSet/>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </routeTableSet>
2020-07-10T16:25:31.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeRouteTablesResponse>
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:31 [TRACE] EvalWriteState: writing current state object for data.aws_vpc.main
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:25:31 [TRACE] [walkRefresh] Exiting eval tree: data.aws_vpc.main
2020/07/10 16:25:31 [TRACE] vertex "data.aws_vpc.main": visit complete
2020/07/10 16:25:31 [TRACE] vertex "data.aws_vpc.main": dynamic subgraph completed successfully
2020/07/10 16:25:31 [TRACE] vertex "data.aws_vpc.main": visit complete
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": starting visit (*terraform.NodeRefreshableManagedResource)
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": expanding dynamic subgraph
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-registry-ingress": starting visit (*terraform.NodeRefreshableManagedResource)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-registry-ingress": expanding dynamic subgraph
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.allow-ssh-and-egress - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:31 [DEBUG] Resource state not found for node "aws_security_group.allow-ssh-and-egress", instance aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:31 [DEBUG] ReferenceTransformer: "aws_security_group.allow-ssh-and-egress" references: []
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": entering dynamic subgraph
2020/07/10 16:25:31 [TRACE] dag/walk: updating graph
2020/07/10 16:25:31 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/07/10 16:25:31 [TRACE] NodeRefreshableManagedResourceInstance: aws_security_group.allow-ssh-and-egress has no existing state to refresh
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.allow-registry-ingress - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": evaluating
2020/07/10 16:25:31 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:31 [DEBUG] Resource state not found for node "aws_security_group.allow-registry-ingress", instance aws_security_group.allow-registry-ingress
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:31 [TRACE] EvalReadState: reading state for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:31 [DEBUG] ReferenceTransformer: "aws_security_group.allow-registry-ingress" references: []
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-registry-ingress": entering dynamic subgraph
2020/07/10 16:25:31 [TRACE] dag/walk: updating graph
2020/07/10 16:25:31 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:31 [TRACE] EvalReadState: no state present for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-registry-ingress": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/07/10 16:25:31 [TRACE] NodeRefreshableManagedResourceInstance: aws_security_group.allow-registry-ingress has no existing state to refresh
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-registry-ingress": evaluating
2020/07/10 16:25:31 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.allow-registry-ingress
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:31 [TRACE] EvalReadState: reading state for aws_security_group.allow-registry-ingress
2020/07/10 16:25:31 [TRACE] EvalReadState: no state present for aws_security_group.allow-registry-ingress
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:31 [TRACE] Re-validating config for "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:31 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:31 [TRACE] Re-validating config for "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:31 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:31 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:31 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})})
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:31 [TRACE] EvalWriteState: recording 0 dependencies for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:31 [TRACE] EvalWriteState: writing current state object for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:31 [TRACE] EvalWriteState: recording 0 dependencies for aws_security_group.allow-registry-ingress
2020/07/10 16:25:31 [TRACE] EvalWriteState: writing current state object for aws_security_group.allow-registry-ingress
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:31 [TRACE] EvalWriteDiff: recorded Create change for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:31 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": visit complete
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": dynamic subgraph completed successfully
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": visit complete
2020/07/10 16:25:31 [TRACE] EvalWriteDiff: recorded Create change for aws_security_group.allow-registry-ingress
2020/07/10 16:25:31 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.allow-registry-ingress
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-registry-ingress": visit complete
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-registry-ingress": dynamic subgraph completed successfully
2020/07/10 16:25:31 [TRACE] vertex "aws_security_group.allow-registry-ingress": visit complete
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_instance.main"
2020/07/10 16:25:31 [TRACE] vertex "aws_instance.main": starting visit (*terraform.NodeRefreshableManagedResource)
2020/07/10 16:25:31 [TRACE] vertex "aws_instance.main": expanding dynamic subgraph
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.main - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:31 [DEBUG] Resource state not found for node "aws_instance.main", instance aws_instance.main
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:31 [DEBUG] ReferenceTransformer: "aws_instance.main" references: []
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:31 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:31 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:31 [TRACE] vertex "aws_instance.main": entering dynamic subgraph
2020/07/10 16:25:31 [TRACE] dag/walk: updating graph
2020/07/10 16:25:31 [TRACE] dag/walk: added new vertex: "aws_instance.main"
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "aws_instance.main"
2020/07/10 16:25:31 [TRACE] vertex "aws_instance.main": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/07/10 16:25:31 [TRACE] NodeRefreshableManagedResourceInstance: aws_instance.main has no existing state to refresh
2020/07/10 16:25:31 [TRACE] vertex "aws_instance.main": evaluating
2020/07/10 16:25:31 [TRACE] [walkRefresh] Entering eval tree: aws_instance.main
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:31 [TRACE] EvalReadState: reading state for aws_instance.main
2020/07/10 16:25:31 [TRACE] EvalReadState: no state present for aws_instance.main
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:31 [TRACE] Re-validating config for "aws_instance.main"
2020/07/10 16:25:31 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:31 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .user_data: planned value cty.StringVal("dd6dd3fbc7a6371b12c66660e27bdccda24faa51") does not match config value cty.StringVal("H4sIAAAAAAAA/7xX3XLbOJa+Z1Xe4bTsHXdmR7+O0/FftiRZpqhY9piKRZE9XQ4IQCQsENASoCS6K1XzGvMI+xr7KPMkWyApRW4nd7Pji1R4cH6/8+EcqC+FpkLXP+dLegZJxjVbolQ3E7ah5BxCmQmC0vyyNnbGg97dw+1V1/VrlvmqT2mqmBRn0G603lhvrHp9X+mNtfOdIqHmNK0PBJaEiegMfgmZ3lMogmu60U3MZUbqWIo5i95YY5bQV2EO9nWsdco0fZwzTtWZBVAHXDo9Ayfv6k+sFYXe6SL4LCPqXeuwX8g+OXmvgz7LCHemLccOWn+d8Tj01tFdJJ+crnxyrl0eznrKn7ncsU8Txx5EOJkKNLttYbGI/M5pFiRckNkoJjZfhezdJyfvGr8j0u9xOuxx/9h9doauDCa9JOxsFPJOhDMMYpzw2E82HD9LY6Od4YgHHb4Kn2R0PyWfd9+sd4zsaR5Mei1kP0QPz+PIF9MnVOTMnx3b5djerKg3XThDd3WX9+IwuS992qO239GcXMmI2DF37JM49B6isONX39V5v9cK896azG5lFfeZDEcnju3GxB5ExP6Q9dnY1DVDM1eGxyZ2exXYPKEez4K8zC2wp4k/myrS7z2Fnbb2vZOFY2+WYfIQ+bORIF6bh8J9LrA0mNzLp5fxuPY9wm/6Jpd7k+MS58bXSYI80sbJdQt5p5kznGaBPc2LHtndVTBzn2467srUgtlpHnhkiY/dnE5OK1ucUa+t/P67TySZ5rjCedx/t+knm1VgetDvqWAW8PBKRk7icl9MhRPJyLGDFU7aMRm6HD+Zs+Vz2HnH+qwbBQnnoe0+3xm9ftfwKCcJfzI8c8ReXdHymdinuamt0LVvY78T862dn2xWfuJy3LnN0azXCo+d905/tAyTNg+905xOHJPf87jIsxvtc8VJpu2bGeH4+F6PmVOe7/XdEb0ltqeGd/zG22LU3sOozYh3mwaze9ZP4hYZdt+b2nzPXZT1blZ+51oh+/SZXMn2+Kq7LnAZ3nL/eFTGSAYad6ZPOJm2SsxK/Hb1bX09FfYbp5KbexKykju+3Y7xsctx0o18MYrDxHDRlcFsxEfH48j3NnngXS/opJf5M3dJkocIH0/X2D7NSb+XhMdV7f1xhIejVehNW8ietnHe08HMzZF3+3yzi9vd6U48P6LeadsZkjgUhnMfotC7ToNJr407u7tieJgE3nWLzEb8jn2zH0/eRX5nsyo4bpMlseO2z06ewk5rFdin5p7mNx23wBp5o3YxJ5LuLwZjp999cq6czPQLeZtFNSeWoXctgklX+va2Xz1GPK6CfleTfm+vd93M7y/2fI2zghvJNA+8k6ftzMDJ9CnwTlrhcGFmxzIc3kfIa8dB5yFC3rtqFvAMzdyl722WtLpnW7xe4LnlYL8bBd5JMcMCM1+Go3ZwX+Hb7639mSvvWJfddNqcDEdL/3hc3BlkT2Nzd3d+riN93znNiD3NSL/9QGc9fvNwui5wEuP3zrWKnORkhTsnyyDxmXPd+mR8hENX3pU8bIXHozjoTBc44Z1g5rwv8ejxMLlmoT1d3LFeC4spr+TLULgciyAu7vrTYI3zijtDV+Jk+ozsU2VqGq/lpQUAQHcrK3z/rpDItaDpGaRS6jPzTyFcIh2fQZNq3ExpxJRO80ae8PKMpglTZoWpMzhq/XJycvQvWpabuoop5wqnbKl/tC1/aoZMNEOkYss6gAnV2VKBjilsE4UE4ZgJClpCjFYUEKSZEExE1gFcSbyg6TddHSMNCVpQBZmiIOeFKyaURgJT6wCWqTTLGBTVwERxuucfZTqmQjOMtFFGETKmhdbkGMIML6guTOcyBaVlykS0C36krAMgSKOGZRmdugSapnTD9PZTyEwoqi0rQUz8/BZ+t6DMjfNHUlRigSnucevS+moVfwfglGolNBxpqjR8KW3qmH6BeSoT+IKW+gtkqsRmVznnSDMpoGyEgWDFCCUQ5oXOXPKFSR3pCs6G9TKpKlOKYwk15/b6zrxkqoQMAKSyAqhZFgDOUg71uZrcQER1ozrFMjEQRFTXK4mKLQCVEQkqhkbz5YllSj8ANxOv2LAwMfe6uzsqn1xZWlRbAIA0qFhmnADdMKUhE4Sm8OXVRfjSsA4M+zIcv/QCSaY0hBSWHGEDGZ3LlG4JCDpmCqSgDWu/a9/Fa6JRqr+htcu6AX/+1/9Z8P/h9cfh/n2hPmxZxubw66/wE9TnUHvVzxr89tu5IYcop2TRiYHr3rmmFddmALyyASKpAiF1yZWSzoX1hmloWwBzZlnb7mUC/mbe83WBkj0KljJCNcLxVoHqtUwXEEulK9FK8iz5TgpnhaQMsTtoloQsUjTm+7PBzJF/77DOVFoMbCpWUAxtc29uIyY2UAdB16BouqIphFzihWWBucRTlDIUcqosa+w/TtqX//z7PzRNUzSXadJI8urWR+iff/+HdWs7t7PH7rTr3HR7N4PH6fBu8nlyeVRAI0ygpmKaqjpaIcaN26PKZnBrDK5+bEGFUSdHljfoPV457uVRc4XS5nq9LkUPk4F7ebRer+tmih9Z5XcuszRTNDWN3oaa9IeD8eDy6FDhmH4Tu4P7h8Hk8+OD61weHab0vzOq9GOWsiMDw3UmsJkpypILMyJKWtYpHP2N/nrcSY4OC3TMV3J0Dl/hAOyUUmERRl/pt8+P23+0KIl6DmZpQLE1JkgwnQOOKV5Yv8Lhz4xAPXoLP11CrVWD3+BPfwLCKNQm5WrYTjtDb6SKR0SjZgwPCpP2vsmDQhE9g8OfQ6RocQsOW2+BSMPJW5TQmkmgn1KkKRRdqCYrmP1rYaThIxx+v9tNKAuDi4vB3bV1AOv12qxnIUV9vV5bFcd+L67nAThzsw5SiMwF1rLQJiyl2EyApDI00kK/NH4sMv5zowx0XpykVGepgONWe5tY2eez5i6hw1eNPre+/jGfUVa9GSq5CfUq9IvAUmqo/raUbFYRm8ss5Aw/xjrh51YV4UZGqvgvwpgq9chlBIcVq3eGXEaqWSo0uIzKUDRNZVro/8CgUCj1t/AKzDNCy4Cs/ICIyxDxJpZJIkXDdPb8e+drmZJlajIoVbb5M6WpMJ1ZylTDh9aH1l8Ao2qpT1EqmKpUxxUlCZ0zQQmguaZpge5e7G3Y0oaX3tudXxqtRqvRPjP+TZ8MmbakNKv49xLbv3AZfS0ZY550VFnJgrAU6svXGP2+1w5jp76+8MgEoZuGOXxB8z962XPS3DMp6X7x09Vd/7P/1wEY4UfrojjjSESXNSpqRkAR+WhtGXOhmeb04/bKNMvPb8cJ1QhwjFJF9WUt0/P6hxo0P1oXzdLPRShJDpgjpS5rWAqNmKBpbc+D0aPpx4u4vYsStz+W9jTdUyRsBYxc1tYpWi4LH9aQci7Bkykn1kWTsNWe+lxKTdOP//s/cPgzMXPiP//Df3vRrMTWRdNkViRaALFtX4zMPIn2f7lYOJZrAXUXDs3UPjvczvM/Ym8cDIo9AGYpmDcw3jZP5UkoOcPAmVhYXEBd/XBCvZwHL1fPXiiXKvPus8oXyJWEXGawZio23E/Lw3I6/lfNUpRTrCEX5pdJzaeqBrVbWTsHIgvMMFIUDovjHYY+VfC2fEkwwXSDlBtv5/scwpSixfn5zuJWwttiVVQyqhC2iBTUsuQCahODSjm2SfEzp6q0Zr16aNTrb6z/CwAA///+xAo3oRUAAA==")
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:31 [TRACE] EvalWriteState: recording 4 dependencies for aws_instance.main
2020/07/10 16:25:31 [TRACE] EvalWriteState: writing current state object for aws_instance.main
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:31 [TRACE] EvalWriteDiff: recorded Create change for aws_instance.main
2020/07/10 16:25:31 [TRACE] [walkRefresh] Exiting eval tree: aws_instance.main
2020/07/10 16:25:31 [TRACE] vertex "aws_instance.main": visit complete
2020/07/10 16:25:31 [TRACE] vertex "aws_instance.main": dynamic subgraph completed successfully
2020/07/10 16:25:31 [TRACE] vertex "aws_instance.main": visit complete
2020/07/10 16:25:31 [TRACE] dag/walk: visiting "output.public-ip"
2020/07/10 16:25:31 [TRACE] vertex "output.public-ip": starting visit (*terraform.NodeApplyableOutput)
2020/07/10 16:25:31 [TRACE] vertex "output.public-ip": evaluating
2020/07/10 16:25:31 [TRACE] [walkRefresh] Entering eval tree: output.public-ip
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:31 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2020/07/10 16:25:31 [TRACE] EvalWriteOutput: Removing output.public-ip from state (it is now null)
2020/07/10 16:25:31 [TRACE] EvalWriteOutput: Saving Create change for output.public-ip in changeset
2020/07/10 16:25:31 [TRACE] [walkRefresh] Exiting eval tree: output.public-ip
2020/07/10 16:25:31 [TRACE] vertex "output.public-ip": visit complete
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Response s3/GetBucketAccelerateConfiguration Details:
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:32 GMT
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: Yl6zizIZ3+vkFNeGeZ3rG15kNd5gRjqCRIRRgh23lcyKO1EkPq5g/nsPs8uJ4YdnenmWa/+G35g=
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 8B0F7265809536FE
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <AccelerateConfiguration xmlns="http://s3.amazonaws.com/doc/2006-03-01/"/>
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Request s3/GetBucketRequestPayment Details:
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: GET /?requestPayment= HTTP/1.1
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=ec978f0dc1684dfd9512e54d180ef479237268a4cce7ae569202fb8ffdcb80c3
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152531Z
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.678+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Response s3/GetBucketRequestPayment Details:
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:32 GMT
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: YtAG4gie6mQWNOhOivNkDv2YZCSu58EKWtWUfRl+e3/s22/JlKYPQq3CN/L7noSaS5z/HGP5Bz4=
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 64FE392A7E749967
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <RequestPaymentConfiguration xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Payer>BucketOwner</Payer></RequestPaymentConfiguration>
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:31 [DEBUG] [aws-sdk-go] DEBUG: Request s3/GetBucketLogging Details:
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: GET /?logging= HTTP/1.1
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=7e20a563c9d430daf18f5d4f4ac820ef5e41a555f109ab822cbe13c101543f71
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152531Z
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:31.886+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] DEBUG: Response s3/GetBucketLogging Details:
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 289
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/xml
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:33 GMT
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: HkBluYQ+IPVQow/cI9t0bEpTV1fQjtg8LwCcqAaWAoMqbYh+c/dB8RKpHoCA3wovntNTp63NBqk=
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 8472EAC3BD5F30A2
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <BucketLoggingStatus xmlns="http://s3.amazonaws.com/doc/2006-03-01/">
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <!--<LoggingEnabled><TargetBucket>myLogsBucket</TargetBucket><TargetPrefix>add/this/prefix/to/my/log/files/access_log-</TargetPrefix></LoggingEnabled>-->
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </BucketLoggingStatus>
2020-07-10T16:25:32.062+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:32.063+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] DEBUG: Request s3/GetBucketLifecycleConfiguration Details:
2020-07-10T16:25:32.063+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:32.063+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: GET /?lifecycle= HTTP/1.1
2020-07-10T16:25:32.063+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:32.063+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:32.063+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=545d5c4b302e4433fd8837ccfaba42858b61f35b147c0cfe2ed19c3fc820434f
2020-07-10T16:25:32.063+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:32.063+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152532Z
2020-07-10T16:25:32.063+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:32.063+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:32.063+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.063+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.063+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] DEBUG: Response s3/GetBucketLifecycleConfiguration Details:
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 404 Not Found
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 305
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/xml
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:33 GMT
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: ZFPQ74fPDoGdHoRed5pBfKLTXgGvClGk4/WXLY6lcGZN3XwbYV1sCqK+73dOW6EwzLEXoQiNkDE=
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: ZFPQ74fPDoGdHoRed5pBfKLTXgGvClGk4/WXLY6lcGZN3XwbYV1sCqK+73dOW6EwzLEXoQiNkDE=
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 58BBA6A7B3C28534
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 58BBA6A7B3C28534
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] <Error><Code>NoSuchLifecycleConfiguration</Code><Message>The lifecycle configuration does not exist</Message><BucketName>pipeline-docker-registry-bucket</BucketName><RequestId>58BBA6A7B3C28534</RequestId><HostId>ZFPQ74fPDoGdHoRed5pBfKLTXgGvClGk4/WXLY6lcGZN3XwbYV1sCqK+73dOW6EwzLEXoQiNkDE=</HostId></Error>
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] DEBUG: Validate Response s3/GetBucketLifecycleConfiguration failed, attempt 0/25, error NoSuchLifecycleConfiguration: The lifecycle configuration does not exist
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 	status code: 404, request id: 58BBA6A7B3C28534, host id: ZFPQ74fPDoGdHoRed5pBfKLTXgGvClGk4/WXLY6lcGZN3XwbYV1sCqK+73dOW6EwzLEXoQiNkDE=
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] DEBUG: Request s3/GetBucketReplication Details:
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: GET /?replication= HTTP/1.1
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=a1397da9b78188149aed9721fca960474a1d57ee9cf54df4f1a635d5469770ae
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152532Z
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.265+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] DEBUG: Response s3/GetBucketReplication Details:
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 404 Not Found
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/xml
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:31 GMT
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: EjMa6YIu5gRSx4+ryJ7w4srS/uxlUK21m6YYGsgJoQCY1qwTJP3bPaU5hD15s6Ept3SEdqRTFl4=
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 49595075ACB774CB
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <Error><Code>ReplicationConfigurationNotFoundError</Code><Message>The replication configuration was not found</Message><BucketName>pipeline-docker-registry-bucket</BucketName><RequestId>49595075ACB774CB</RequestId><HostId>EjMa6YIu5gRSx4+ryJ7w4srS/uxlUK21m6YYGsgJoQCY1qwTJP3bPaU5hD15s6Ept3SEdqRTFl4=</HostId></Error>
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] DEBUG: Validate Response s3/GetBucketReplication failed, attempt 0/25, error ReplicationConfigurationNotFoundError: The replication configuration was not found
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 	status code: 404, request id: 49595075ACB774CB, host id: EjMa6YIu5gRSx4+ryJ7w4srS/uxlUK21m6YYGsgJoQCY1qwTJP3bPaU5hD15s6Ept3SEdqRTFl4=
2020-07-10T16:25:32.438+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:32.439+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] DEBUG: Request s3/GetBucketEncryption Details:
2020-07-10T16:25:32.439+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:32.439+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: GET /?encryption= HTTP/1.1
2020-07-10T16:25:32.439+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:32.439+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:32.439+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=a5d9c8196f1ec8779aa5192bbfede50be567a7d4a2d07d02b22b0438885b5809
2020-07-10T16:25:32.439+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:32.439+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152532Z
2020-07-10T16:25:32.439+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:32.439+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:32.439+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.439+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.439+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] DEBUG: Response s3/GetBucketEncryption Details:
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:33 GMT
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: QLFOu33dnj0ktRHmbZg0XiOQXDHgdCR1/sw23I6GgzLHqTyatCyHKQ+G+hwNM5G2HT+aZbeRT8Q=
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 00A40F7C1FAF79C4
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <ServerSideEncryptionConfiguration xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Rule><ApplyServerSideEncryptionByDefault><SSEAlgorithm>AES256</SSEAlgorithm></ApplyServerSideEncryptionByDefault></Rule></ServerSideEncryptionConfiguration>
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] DEBUG: Request s3/GetObjectLockConfiguration Details:
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: GET /?object-lock= HTTP/1.1
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=430b26e149fa810a05557a0974664d62b66c54dc6f2d2ae2704605927ae19f13
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152532Z
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.655+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] DEBUG: Response s3/GetObjectLockConfiguration Details:
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 404 Not Found
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/xml
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:32 GMT
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: /4Ip6zLtXu7FPZwIFay3oz4JTrzotNmFiGjpNnKtVX/UycLXspQN1vtOXD0OHOyz/vuvA+Y3kMc=
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 4270226FF8375BD6
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <Error><Code>ObjectLockConfigurationNotFoundError</Code><Message>Object Lock configuration does not exist for this bucket</Message><BucketName>pipeline-docker-registry-bucket</BucketName><RequestId>4270226FF8375BD6</RequestId><HostId>/4Ip6zLtXu7FPZwIFay3oz4JTrzotNmFiGjpNnKtVX/UycLXspQN1vtOXD0OHOyz/vuvA+Y3kMc=</HostId></Error>
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] DEBUG: Validate Response s3/GetObjectLockConfiguration failed, attempt 0/25, error ObjectLockConfigurationNotFoundError: Object Lock configuration does not exist for this bucket
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 	status code: 404, request id: 4270226FF8375BD6, host id: /4Ip6zLtXu7FPZwIFay3oz4JTrzotNmFiGjpNnKtVX/UycLXspQN1vtOXD0OHOyz/vuvA+Y3kMc=
2020-07-10T16:25:32.831+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:32.832+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:32 [DEBUG] [aws-sdk-go] DEBUG: Request s3/GetBucketLocation Details:
2020-07-10T16:25:32.832+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:32.832+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: GET /pipeline-docker-registry-bucket?location= HTTP/1.1
2020-07-10T16:25:32.832+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: s3.eu-west-2.amazonaws.com
2020-07-10T16:25:32.832+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:32.832+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=be99e90514380f5ebd2286f3c322bbc5191fdaf1e482ac49a046d79087ccb14b
2020-07-10T16:25:32.832+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:32.832+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152532Z
2020-07-10T16:25:32.832+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:32.832+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:32.832+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.832+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:32.832+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:33.008+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:33 [DEBUG] [aws-sdk-go] DEBUG: Response s3/GetBucketLocation Details:
2020-07-10T16:25:33.008+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:33.008+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:33.008+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:33.008+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:33.008+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/xml
2020-07-10T16:25:33.008+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:33 GMT
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: Dhl0vW1uB8CbUUeKl1YPBZLmp3UHO7jooceLFhHXCkHWVNbw592Prz6ud/BiTxeKAqyoL5qJUmY=
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 2D98C3448CD09D24
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:33 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <LocationConstraint xmlns="http://s3.amazonaws.com/doc/2006-03-01/">eu-west-2</LocationConstraint>
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:33 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:33 [DEBUG] [aws-sdk-go] DEBUG: Request s3/GetBucketTagging Details:
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: GET /?tagging= HTTP/1.1
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHIR62RFOK/20200710/eu-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=10d2939eeeccaeccda7930629a9cd6610e47511fd87b48bcd563c6e489c652ed
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152533Z
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDC7mOS8R4bt+fDEqASK7AQMUmmExoSAzRFqoq+q7emOpq3MRvI5Y0g9HwpAI4bsevQvZKoR2kzJWb1h1VQVno6d1OHbfgXwM0WoBT4zBbHnTZNpVnVVDZ+iIbfyhI3pyNeETxQN0Oi0xMwqvr4FL8MqQwESiL24kwylZ1oX4wWwOa7ar0vXIhT/4pomFSbgslU1hWXwwN4duVijcRc0TqxQU+Tq3cnKJ8ZWmIgOcdfxoaps31tgUUNNZ+amwnYFB6lKZcFsOx2apZLMo6ZCi+AUyLUZD1D/XnlN/VE2F2A+QMy/vI+ytkfDNJciRFLzmwg6RcQwydjtYpfmfM2ryJA==
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:33.009+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:33 [DEBUG] [aws-sdk-go] DEBUG: Response s3/GetBucketTagging Details:
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 404 Not Found
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/xml
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:33 GMT
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: TvxzIuYqy/sgZ71432Eh10Kr4OWUx3Pg/X798jHYp4jsgQHKz+dd6wrYzrQpoPD+pZxPydLrf8Y=
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: 452C658CB99E4282
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:33 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <Error><Code>NoSuchTagSet</Code><Message>The TagSet does not exist</Message><BucketName>pipeline-docker-registry-bucket</BucketName><RequestId>452C658CB99E4282</RequestId><HostId>TvxzIuYqy/sgZ71432Eh10Kr4OWUx3Pg/X798jHYp4jsgQHKz+dd6wrYzrQpoPD+pZxPydLrf8Y=</HostId></Error>
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:33 [DEBUG] [aws-sdk-go] DEBUG: Validate Response s3/GetBucketTagging failed, attempt 0/25, error NoSuchTagSet: The TagSet does not exist
2020-07-10T16:25:33.199+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 	status code: 404, request id: 452C658CB99E4282, host id: TvxzIuYqy/sgZ71432Eh10Kr4OWUx3Pg/X798jHYp4jsgQHKz+dd6wrYzrQpoPD+pZxPydLrf8Y=
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:33 [TRACE] EvalWriteState: recording 0 dependencies for aws_s3_bucket.encrypted
2020/07/10 16:25:33 [TRACE] EvalWriteState: writing current state object for aws_s3_bucket.encrypted
2020/07/10 16:25:33 [TRACE] [walkRefresh] Exiting eval tree: aws_s3_bucket.encrypted
2020/07/10 16:25:33 [TRACE] vertex "aws_s3_bucket.encrypted": visit complete
2020/07/10 16:25:33 [TRACE] vertex "aws_s3_bucket.encrypted": dynamic subgraph completed successfully
2020/07/10 16:25:33 [TRACE] vertex "aws_s3_bucket.encrypted": visit complete
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "provider.aws (close)"
2020/07/10 16:25:33 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/10 16:25:33 [TRACE] vertex "provider.aws (close)": evaluating
2020/07/10 16:25:33 [TRACE] [walkRefresh] Entering eval tree: provider.aws (close)
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/10 16:25:33 [TRACE] GRPCProvider: Close
2020-07-10T16:25:33.205+0100 [DEBUG] plugin: plugin process exited: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 pid=4134
2020-07-10T16:25:33.205+0100 [DEBUG] plugin: plugin exited
2020/07/10 16:25:33 [TRACE] [walkRefresh] Exiting eval tree: provider.aws (close)
2020/07/10 16:25:33 [TRACE] vertex "provider.aws (close)": visit complete
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "root"
2020/07/10 16:25:33 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/10 16:25:33 [TRACE] vertex "root": visit complete
2020/07/10 16:25:33 [INFO] backend/local: apply calling Plan
2020/07/10 16:25:33 [INFO] terraform: building graph: GraphTypePlan
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/10 16:25:33 [TRACE] ConfigTransformer: Starting for path: 
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodePlannableResource
  aws_iam_role.main - *terraform.NodePlannableResource
  aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
  aws_instance.main - *terraform.NodePlannableResource
  aws_key_pair.main - *terraform.NodePlannableResource
  aws_s3_bucket.encrypted - *terraform.NodePlannableResource
  aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
  data.aws_ami.ubuntu - *terraform.NodePlannableResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
  data.aws_iam_policy_document.default - *terraform.NodePlannableResource
  data.aws_vpc.main - *terraform.NodePlannableResource
  data.template_cloudinit_config.init - *terraform.NodePlannableResource
  data.template_file.registry-config - *terraform.NodePlannableResource
  ------
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodePlannableResource
  aws_iam_role.main - *terraform.NodePlannableResource
  aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
  aws_instance.main - *terraform.NodePlannableResource
  aws_key_pair.main - *terraform.NodePlannableResource
  aws_s3_bucket.encrypted - *terraform.NodePlannableResource
  aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
  data.aws_ami.ubuntu - *terraform.NodePlannableResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
  data.aws_iam_policy_document.default - *terraform.NodePlannableResource
  data.aws_vpc.main - *terraform.NodePlannableResource
  data.template_cloudinit_config.init - *terraform.NodePlannableResource
  data.template_file.registry-config - *terraform.NodePlannableResource
  output.public-ip - *terraform.NodeApplyableOutput
  ------
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/10 16:25:33 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "aws_s3_bucket.encrypted" (*terraform.NodePlannableResource) config from bucket.tf:9,1-37
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.main" (*terraform.NodePlannableResource) config from main.tf:150,1-31
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.registry-config" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:90, Column:1, Byte:2188}, End:hcl.Pos{Line:90, Column:39, Byte:2226}}
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.default" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"permissions.tf", Start:hcl.Pos{Line:62, Column:1, Byte:1810}, End:hcl.Pos{Line:62, Column:41, Byte:1850}}
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.bucket-root" (*terraform.NodePlannableResource) config from permissions.tf:92,1-45
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.main" (*terraform.NodePlannableResource) config from permissions.tf:86,1-31
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.allow-registry-ingress" (*terraform.NodePlannableResource) config from main.tf:31,1-55
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.main" (*terraform.NodePlannableResource) config from permissions.tf:112,1-43
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_vpc.main" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:13, Column:1, Byte:382}, End:hcl.Pos{Line:13, Column:22, Byte:403}}
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.bucket-root" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"permissions.tf", Start:hcl.Pos{Line:9, Column:1, Byte:343}, End:hcl.Pos{Line:9, Column:45, Byte:387}}
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "aws_s3_bucket_policy.main" (*terraform.NodePlannableResource) config from bucket.tf:29,1-39
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.ubuntu" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"ami.tf", Start:hcl.Pos{Line:3, Column:1, Byte:79}, End:hcl.Pos{Line:3, Column:24, Byte:102}}
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.main" (*terraform.NodePlannableResource) config from main.tf:19,1-31
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.bucket-subdirs" (*terraform.NodePlannableResource) config from permissions.tf:99,1-48
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_cloudinit_config.init" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:101, Column:1, Byte:2474}, End:hcl.Pos{Line:101, Column:40, Byte:2513}}
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.bucket-subdirs" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"permissions.tf", Start:hcl.Pos{Line:34, Column:1, Byte:999}, End:hcl.Pos{Line:34, Column:48, Byte:1046}}
2020/07/10 16:25:33 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.allow-ssh-and-egress" (*terraform.NodePlannableResource) config from main.tf:59,1-53
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodePlannableResource
  aws_iam_role.main - *terraform.NodePlannableResource
  aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
  aws_instance.main - *terraform.NodePlannableResource
  aws_key_pair.main - *terraform.NodePlannableResource
  aws_s3_bucket.encrypted - *terraform.NodePlannableResource
  aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
  data.aws_ami.ubuntu - *terraform.NodePlannableResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
  data.aws_iam_policy_document.default - *terraform.NodePlannableResource
  data.aws_vpc.main - *terraform.NodePlannableResource
  data.template_cloudinit_config.init - *terraform.NodePlannableResource
  data.template_file.registry-config - *terraform.NodePlannableResource
  output.public-ip - *terraform.NodeApplyableOutput
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/10 16:25:33 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/10 16:25:33 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from main.tf:1,1-15
2020/07/10 16:25:33 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodePlannableResource
  aws_iam_role.main - *terraform.NodePlannableResource
  aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
  aws_instance.main - *terraform.NodePlannableResource
  aws_key_pair.main - *terraform.NodePlannableResource
  aws_s3_bucket.encrypted - *terraform.NodePlannableResource
  aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
  data.aws_ami.ubuntu - *terraform.NodePlannableResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
  data.aws_iam_policy_document.default - *terraform.NodePlannableResource
  data.aws_vpc.main - *terraform.NodePlannableResource
  data.template_cloudinit_config.init - *terraform.NodePlannableResource
  data.template_file.registry-config - *terraform.NodePlannableResource
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:33 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/10 16:25:33 [DEBUG] adding implicit provider configuration provider.template, implied first by data.template_cloudinit_config.init
2020/07/10 16:25:33 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodePlannableResource
  aws_iam_role.main - *terraform.NodePlannableResource
  aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
  aws_instance.main - *terraform.NodePlannableResource
  aws_key_pair.main - *terraform.NodePlannableResource
  aws_s3_bucket.encrypted - *terraform.NodePlannableResource
  aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
  data.aws_ami.ubuntu - *terraform.NodePlannableResource
  data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
  data.aws_iam_policy_document.default - *terraform.NodePlannableResource
  data.aws_vpc.main - *terraform.NodePlannableResource
  data.template_cloudinit_config.init - *terraform.NodePlannableResource
  data.template_file.registry-config - *terraform.NodePlannableResource
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:33 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/10 16:25:33 [TRACE] ProviderTransformer: data.aws_ami.ubuntu is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: aws_key_pair.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: aws_iam_role_policy.bucket-subdirs is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: data.template_cloudinit_config.init is provided by provider.template or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: data.aws_iam_policy_document.bucket-subdirs is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: aws_security_group.allow-ssh-and-egress is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: aws_s3_bucket.encrypted is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: aws_instance.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: data.template_file.registry-config is provided by provider.template or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: data.aws_iam_policy_document.default is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: aws_iam_role_policy.bucket-root is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: aws_iam_role.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: aws_security_group.allow-registry-ingress is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: aws_iam_instance_profile.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: data.aws_vpc.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: data.aws_iam_policy_document.bucket-root is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: aws_s3_bucket_policy.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role.main
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "aws_iam_role.main" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.allow-registry-ingress
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "aws_security_group.allow-registry-ingress" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_instance_profile.main
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.main" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.bucket-root" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_s3_bucket_policy.main
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "aws_s3_bucket_policy.main" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.bucket-subdirs" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_s3_bucket.encrypted
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "aws_s3_bucket.encrypted" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.template serving data.template_file.registry-config
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "data.template_file.registry-config" (*terraform.NodePlannableResource) needs provider.template
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.template serving data.template_cloudinit_config.init
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "data.template_cloudinit_config.init" (*terraform.NodePlannableResource) needs provider.template
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "aws_security_group.allow-ssh-and-egress" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_vpc.main
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "data.aws_vpc.main" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_ami.ubuntu
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "data.aws_ami.ubuntu" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_key_pair.main
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "aws_key_pair.main" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "aws_iam_role_policy.bucket-subdirs" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.main
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "aws_instance.main" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_iam_policy_document.default
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.default" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy.bucket-root
2020/07/10 16:25:33 [DEBUG] ProviderTransformer: "aws_iam_role_policy.bucket-root" (*terraform.NodePlannableResource) needs provider.aws
2020/07/10 16:25:33 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:33 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/10 16:25:33 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/10 16:25:33 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/10 16:25:33 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_iam_instance_profile.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.bucket-root
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_s3_bucket.encrypted
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.main
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.registry-config
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.default
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_s3_bucket_policy.main
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.main
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.allow-registry-ingress
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.main
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_vpc.main
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.template
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.main
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.ubuntu
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_cloudinit_config.init
2020/07/10 16:25:33 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "data.aws_vpc.main" references: []
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.bucket-root" references: [var.bucket]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "var.region" references: []
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "var.bucket" references: []
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "aws_s3_bucket_policy.main" references: [var.bucket aws_iam_role.main var.bucket aws_iam_role.main var.bucket]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "aws_iam_role.main" references: [data.aws_iam_policy_document.default]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "aws_security_group.allow-registry-ingress" references: [data.aws_vpc.main]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.main" references: [aws_iam_role.main]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "provider.template" references: []
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "aws_key_pair.main" references: []
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntu" references: []
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "var.profile" references: []
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "var.ansible_pem_key" references: []
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "aws_security_group.allow-ssh-and-egress" references: [data.aws_vpc.main]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-subdirs" references: [data.aws_iam_policy_document.bucket-subdirs aws_iam_role.main]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "data.template_cloudinit_config.init" references: [data.template_file.registry-config]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.bucket-subdirs" references: [var.bucket]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.default" references: []
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "output.public-ip" references: [aws_instance.main]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "var.key_name" references: []
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-root" references: [data.aws_iam_policy_document.bucket-root aws_iam_role.main]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "aws_s3_bucket.encrypted" references: [var.bucket]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "aws_instance.main" references: [var.key_name data.template_cloudinit_config.init aws_security_group.allow-ssh-and-egress aws_security_group.allow-registry-ingress data.aws_ami.ubuntu aws_iam_instance_profile.main]
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "data.template_file.registry-config" references: [var.bucket var.region]
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodePlannableResource
    aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_ami.ubuntu - *terraform.NodePlannableResource
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodePlannableResource
    data.template_file.registry-config - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodePlannableResource
    aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_ami.ubuntu - *terraform.NodePlannableResource
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodePlannableResource
    data.template_file.registry-config - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    aws_instance.main - *terraform.NodePlannableResource
    aws_key_pair.main - *terraform.NodePlannableResource
    aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
    aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_ami.ubuntu - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
    data.template_file.registry-config - *terraform.NodePlannableResource
    output.public-ip - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.template - *terraform.NodeApplyableProvider
    var.ansible_pem_key - *terraform.NodeRootVariable
    var.bucket - *terraform.NodeRootVariable
    var.key_name - *terraform.NodeRootVariable
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy.bucket-root" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "aws_s3_bucket.encrypted" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "aws_instance.main" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "data.template_file.registry-config" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "data.aws_iam_policy_document.default" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "aws_s3_bucket_policy.main" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "aws_iam_role.main" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "aws_security_group.allow-registry-ingress" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "aws_iam_instance_profile.main" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "data.aws_vpc.main" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "data.aws_iam_policy_document.bucket-root" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "aws_key_pair.main" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "data.aws_ami.ubuntu" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "aws_security_group.allow-ssh-and-egress" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy.bucket-subdirs" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "data.template_cloudinit_config.init" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] ForcedCBDTransformer: "data.aws_iam_policy_document.bucket-subdirs" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodePlannableResource
    aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_ami.ubuntu - *terraform.NodePlannableResource
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodePlannableResource
    data.template_file.registry-config - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    aws_instance.main - *terraform.NodePlannableResource
    aws_key_pair.main - *terraform.NodePlannableResource
    aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
    aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_ami.ubuntu - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
    data.template_file.registry-config - *terraform.NodePlannableResource
    output.public-ip - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.template - *terraform.NodeApplyableProvider
    var.ansible_pem_key - *terraform.NodeRootVariable
    var.bucket - *terraform.NodeRootVariable
    var.key_name - *terraform.NodeRootVariable
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    aws_instance.main - *terraform.NodePlannableResource
    aws_key_pair.main - *terraform.NodePlannableResource
    aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
    aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_ami.ubuntu - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
    data.template_file.registry-config - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodePlannableResource
    aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_ami.ubuntu - *terraform.NodePlannableResource
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodePlannableResource
    data.template_file.registry-config - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    aws_instance.main - *terraform.NodePlannableResource
    aws_key_pair.main - *terraform.NodePlannableResource
    aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
    aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_ami.ubuntu - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
    data.template_file.registry-config - *terraform.NodePlannableResource
    output.public-ip - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.template - *terraform.NodeApplyableProvider
    var.ansible_pem_key - *terraform.NodeRootVariable
    var.bucket - *terraform.NodeRootVariable
    var.key_name - *terraform.NodeRootVariable
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    aws_instance.main - *terraform.NodePlannableResource
    aws_key_pair.main - *terraform.NodePlannableResource
    aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
    aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_ami.ubuntu - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
    data.template_file.registry-config - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
  aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.default - *terraform.NodePlannableResource
  aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
  aws_instance.main - *terraform.NodePlannableResource
    aws_iam_instance_profile.main - *terraform.NodePlannableResource
    aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_ami.ubuntu - *terraform.NodePlannableResource
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
    var.key_name - *terraform.NodeRootVariable
  aws_key_pair.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main - *terraform.NodePlannableResource
    aws_iam_role.main - *terraform.NodePlannableResource
    var.bucket - *terraform.NodeRootVariable
  aws_security_group.allow-registry-ingress - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResource
    data.aws_vpc.main - *terraform.NodePlannableResource
  data.aws_ami.ubuntu - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  data.aws_iam_policy_document.default - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init - *terraform.NodePlannableResource
    data.template_file.registry-config - *terraform.NodePlannableResource
  data.template_file.registry-config - *terraform.NodePlannableResource
    provider.template - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    aws_key_pair.main - *terraform.NodePlannableResource
    aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
    output.public-ip - *terraform.NodeApplyableOutput
    var.ansible_pem_key - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_role_policy.bucket-root - *terraform.NodePlannableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResource
    aws_instance.main - *terraform.NodePlannableResource
    aws_key_pair.main - *terraform.NodePlannableResource
    aws_s3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:33 [DEBUG] Starting graph walk: walkPlan
2020/07/10 16:25:33 [TRACE] dag/walk: updating graph
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "provider.aws"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "data.aws_vpc.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "var.bucket"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "aws_instance.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "data.aws_ami.ubuntu"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "data.template_cloudinit_config.init"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "output.public-ip"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "var.profile"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "var.region"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "aws_key_pair.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.bucket-subdirs"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.bucket-root"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.default"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "aws_s3_bucket.encrypted"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "data.template_file.registry-config"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "aws_s3_bucket_policy.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "aws_iam_role.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "var.ansible_pem_key"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "var.key_name"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "root"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "aws_iam_instance_profile.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "provider.template"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-subdirs" waiting on "aws_iam_role.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_security_group.allow-registry-ingress" waiting on "data.aws_vpc.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "data.template_file.registry-config" waiting on "var.region"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "aws_iam_instance_profile.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_s3_bucket_policy.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.public-ip"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_s3_bucket_policy.main" waiting on "aws_iam_role.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "data.aws_ami.ubuntu"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_s3_bucket.encrypted"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-subdirs" waiting on "data.aws_iam_policy_document.bucket-subdirs"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_s3_bucket.encrypted" waiting on "provider.aws"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-root" waiting on "data.aws_iam_policy_document.bucket-root"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_key_pair.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_cloudinit_config.init"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_security_group.allow-ssh-and-egress" waiting on "data.aws_vpc.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-root" waiting on "aws_iam_role.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_s3_bucket_policy.main" waiting on "var.bucket"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-subdirs" waiting on "provider.aws"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_instance.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.default" waiting on "provider.aws"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "var.key_name"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_key_pair.main" waiting on "provider.aws"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-root" waiting on "provider.aws"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "output.public-ip" waiting on "aws_instance.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-root" waiting on "var.bucket"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_iam_role.main" waiting on "data.aws_iam_policy_document.default"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "data.template_file.registry-config" waiting on "provider.template"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_s3_bucket_policy.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_s3_bucket.encrypted"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.region"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "data.aws_ami.ubuntu" waiting on "provider.aws"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-subdirs" waiting on "var.bucket"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "data.aws_vpc.main" waiting on "provider.aws"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "data.template_file.registry-config" waiting on "var.bucket"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_key_pair.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "data.template_cloudinit_config.init" waiting on "data.template_file.registry-config"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.main" waiting on "aws_iam_role.main"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.ansible_pem_key"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "data.template_cloudinit_config.init"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "aws_s3_bucket.encrypted" waiting on "var.bucket"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:33 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "aws_s3_bucket_policy.main", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy.bucket-root", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "aws_iam_role.main", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "aws_security_group.allow-registry-ingress", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "data.template_file.registry-config", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "aws_s3_bucket.encrypted", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "data.aws_iam_policy_document.default", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "data.template_cloudinit_config.init", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "aws_security_group.allow-ssh-and-egress", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "data.aws_iam_policy_document.bucket-root", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "output.public-ip", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "aws_iam_instance_profile.main", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy.bucket-subdirs", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "aws_instance.main", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "data.aws_iam_policy_document.bucket-subdirs", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "aws_key_pair.main", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "data.aws_ami.ubuntu", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: dependencies changed for "data.aws_vpc.main", sending new deps
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "var.bucket"
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "var.region"
2020/07/10 16:25:33 [TRACE] vertex "var.bucket": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:33 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:33 [TRACE] vertex "var.bucket": evaluating
2020/07/10 16:25:33 [TRACE] vertex "var.region": evaluating
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "var.key_name"
2020/07/10 16:25:33 [TRACE] [walkPlan] Entering eval tree: var.region
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:33 [TRACE] [walkPlan] Exiting eval tree: var.region
2020/07/10 16:25:33 [TRACE] [walkPlan] Entering eval tree: var.bucket
2020/07/10 16:25:33 [TRACE] vertex "var.key_name": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:33 [TRACE] vertex "var.region": visit complete
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:33 [TRACE] vertex "var.key_name": evaluating
2020/07/10 16:25:33 [TRACE] [walkPlan] Entering eval tree: var.key_name
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "provider.template"
2020/07/10 16:25:33 [TRACE] vertex "provider.template": starting visit (*terraform.NodeApplyableProvider)
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "var.profile"
2020/07/10 16:25:33 [TRACE] vertex "var.profile": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "var.ansible_pem_key"
2020/07/10 16:25:33 [TRACE] vertex "var.ansible_pem_key": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:33 [TRACE] [walkPlan] Exiting eval tree: var.bucket
2020/07/10 16:25:33 [TRACE] vertex "var.bucket": visit complete
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:33 [TRACE] [walkPlan] Exiting eval tree: var.key_name
2020/07/10 16:25:33 [TRACE] vertex "provider.template": evaluating
2020/07/10 16:25:33 [TRACE] [walkPlan] Entering eval tree: provider.template
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/07/10 16:25:33 [TRACE] vertex "var.profile": evaluating
2020/07/10 16:25:33 [TRACE] [walkPlan] Entering eval tree: var.profile
2020/07/10 16:25:33 [TRACE] vertex "var.ansible_pem_key": evaluating
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:33 [TRACE] [walkPlan] Entering eval tree: var.ansible_pem_key
2020/07/10 16:25:33 [TRACE] [walkPlan] Exiting eval tree: var.profile
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:33 [TRACE] vertex "var.profile": visit complete
2020/07/10 16:25:33 [TRACE] [walkPlan] Exiting eval tree: var.ansible_pem_key
2020/07/10 16:25:33 [TRACE] vertex "var.key_name": visit complete
2020/07/10 16:25:33 [TRACE] vertex "var.ansible_pem_key": visit complete
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "provider.aws"
2020/07/10 16:25:33 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2020/07/10 16:25:33 [TRACE] vertex "provider.aws": evaluating
2020/07/10 16:25:33 [TRACE] [walkPlan] Entering eval tree: provider.aws
2020-07-10T16:25:33.211+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-10T16:25:33.241+0100 [DEBUG] plugin: starting plugin: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 args=[/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4]
2020-07-10T16:25:33.245+0100 [DEBUG] plugin: plugin started: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 pid=4144
2020-07-10T16:25:33.245+0100 [DEBUG] plugin: waiting for RPC address: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4
2020-07-10T16:25:33.253+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:25:33.253+0100
2020-07-10T16:25:33.279+0100 [DEBUG] plugin: using plugin: version=5
2020-07-10T16:25:33.279+0100 [DEBUG] plugin.terraform-provider-template_v2.1.2_x4: plugin address: address=/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin237949839 network=unix timestamp=2020-07-10T16:25:33.279+0100
2020/07/10 16:25:33 [TRACE] BuiltinEvalContext: Initialized "template" provider for provider.template
2020/07/10 16:25:33 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:33 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-07-10T16:25:33.280+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:25:33.303+0100 [DEBUG] plugin: starting plugin: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 args=[/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4]
2020-07-10T16:25:33.311+0100 [DEBUG] plugin: plugin started: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 pid=4145
2020-07-10T16:25:33.312+0100 [DEBUG] plugin: waiting for RPC address: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4
2020-07-10T16:25:33.336+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:25:33.335+0100
2020-07-10T16:25:33.357+0100 [DEBUG] plugin: using plugin: version=5
2020-07-10T16:25:33.358+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: plugin address: address=/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin573275220 network=unix timestamp=2020-07-10T16:25:33.357+0100
2020/07/10 16:25:33 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2020/07/10 16:25:33 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/10 16:25:33 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:33 [TRACE] buildProviderConfig for provider.template: no configuration at all
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:33 [TRACE] GRPCProvider: GetSchema
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/10 16:25:33 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2020/07/10 16:25:33 [TRACE] GRPCProvider: GetSchema
2020/07/10 16:25:33 [TRACE] GRPCProvider: Configure
2020/07/10 16:25:33 [TRACE] [walkPlan] Exiting eval tree: provider.template
2020/07/10 16:25:33 [TRACE] vertex "provider.template": visit complete
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "data.template_file.registry-config"
2020/07/10 16:25:33 [TRACE] vertex "data.template_file.registry-config": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:33 [TRACE] vertex "data.template_file.registry-config": evaluating
2020/07/10 16:25:33 [TRACE] [walkPlan] Entering eval tree: data.template_file.registry-config
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:33 [TRACE] [walkPlan] Exiting eval tree: data.template_file.registry-config
2020/07/10 16:25:33 [TRACE] vertex "data.template_file.registry-config": expanding dynamic subgraph
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.template_file.registry-config - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "data.template_file.registry-config" references: []
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:33 [TRACE] vertex "data.template_file.registry-config": entering dynamic subgraph
2020/07/10 16:25:33 [TRACE] dag/walk: updating graph
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "data.template_file.registry-config"
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "data.template_file.registry-config"
2020/07/10 16:25:33 [TRACE] vertex "data.template_file.registry-config": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:33 [TRACE] vertex "data.template_file.registry-config": evaluating
2020/07/10 16:25:33 [TRACE] [walkPlan] Entering eval tree: data.template_file.registry-config
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:33 [TRACE] EvalReadState: reading state for data.template_file.registry-config
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/07/10 16:25:33 [TRACE] [walkPlan] Exiting eval tree: data.template_file.registry-config
2020/07/10 16:25:33 [TRACE] vertex "data.template_file.registry-config": visit complete
2020/07/10 16:25:33 [TRACE] vertex "data.template_file.registry-config": dynamic subgraph completed successfully
2020/07/10 16:25:33 [TRACE] vertex "data.template_file.registry-config": visit complete
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "data.template_cloudinit_config.init"
2020/07/10 16:25:33 [TRACE] vertex "data.template_cloudinit_config.init": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:33 [TRACE] vertex "data.template_cloudinit_config.init": evaluating
2020/07/10 16:25:33 [TRACE] [walkPlan] Entering eval tree: data.template_cloudinit_config.init
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:33 [TRACE] [walkPlan] Exiting eval tree: data.template_cloudinit_config.init
2020/07/10 16:25:33 [TRACE] vertex "data.template_cloudinit_config.init": expanding dynamic subgraph
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.template_cloudinit_config.init - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:33 [DEBUG] ReferenceTransformer: "data.template_cloudinit_config.init" references: []
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:33 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:33 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:33 [TRACE] vertex "data.template_cloudinit_config.init": entering dynamic subgraph
2020/07/10 16:25:33 [TRACE] dag/walk: updating graph
2020/07/10 16:25:33 [TRACE] dag/walk: added new vertex: "data.template_cloudinit_config.init"
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "data.template_cloudinit_config.init"
2020/07/10 16:25:33 [TRACE] vertex "data.template_cloudinit_config.init": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:33 [TRACE] vertex "data.template_cloudinit_config.init": evaluating
2020/07/10 16:25:33 [TRACE] [walkPlan] Entering eval tree: data.template_cloudinit_config.init
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:33 [TRACE] EvalReadState: reading state for data.template_cloudinit_config.init
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/07/10 16:25:33 [TRACE] [walkPlan] Exiting eval tree: data.template_cloudinit_config.init
2020/07/10 16:25:33 [TRACE] vertex "data.template_cloudinit_config.init": visit complete
2020/07/10 16:25:33 [TRACE] vertex "data.template_cloudinit_config.init": dynamic subgraph completed successfully
2020/07/10 16:25:33 [TRACE] vertex "data.template_cloudinit_config.init": visit complete
2020/07/10 16:25:33 [TRACE] dag/walk: visiting "provider.template (close)"
2020/07/10 16:25:33 [TRACE] vertex "provider.template (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/10 16:25:33 [TRACE] vertex "provider.template (close)": evaluating
2020/07/10 16:25:33 [TRACE] [walkPlan] Entering eval tree: provider.template (close)
2020/07/10 16:25:33 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/10 16:25:33 [TRACE] GRPCProvider: Close
2020-07-10T16:25:33.363+0100 [DEBUG] plugin: plugin process exited: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 pid=4144
2020-07-10T16:25:33.364+0100 [DEBUG] plugin: plugin exited
2020/07/10 16:25:33 [TRACE] [walkPlan] Exiting eval tree: provider.template (close)
2020/07/10 16:25:33 [TRACE] vertex "provider.template (close)": visit complete
2020/07/10 16:25:33 [TRACE] GRPCProvider: Configure
2020-07-10T16:25:33.450+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:33 [INFO] No assume_role block read from configuration
2020-07-10T16:25:33.450+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:33 [INFO] Building AWS auth structure
2020-07-10T16:25:33.450+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:33 [INFO] Setting AWS metadata API timeout to 100ms
2020-07-10T16:25:34.105+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:34 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2020-07-10T16:25:34.105+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:34 [INFO] Attempting to use session-derived credentials
2020-07-10T16:25:35.755+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:35 [INFO] Successfully derived credentials from session
2020-07-10T16:25:35.755+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:35 [INFO] AWS Auth provider used: "AssumeRoleProvider"
2020-07-10T16:25:35.755+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:35 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2020-07-10T16:25:35.755+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:35 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2020-07-10T16:25:35.756+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:35.756+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:35.756+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: sts.amazonaws.com
2020-07-10T16:25:35.756+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:35.756+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 43
2020-07-10T16:25:35.756+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHN3A3BA4I/20200710/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=a8341508165fdb4f5f00f907c04f4b04810a34a589b240cba42b877c5b4c5cda
2020-07-10T16:25:35.756+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:35.756+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152535Z
2020-07-10T16:25:35.756+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDIKCUIxIZ/lgeWTY/iK7AbHv4wJq7UN0HPENeE79bvDBnkFjpR4HKKqhjyT69+dew8Aw886Aq7xP/o2Akus5yPa9M6IDlyzD/eGa5r5lcYa5jCuVIhGJw30fC6/vJ79KGrNbhT4S3jsmtaDCWU43TCV32H8cwwE6/6UBRGYIxgvaAyNSI6OSE4nUddLqVxUFoTFvJkNTa7lk5WNrDj1JizLIzHxfOROb9seVHaD/3X4IvOdgOmHPrjQ9LI3x0ux7qss8Di81SClnMpQo75Ci+AUyLTMCXelouJPtRyeH/gAY+8kIFXwYPEQld7joiDOKudGLNcM9T/aAiD1b5F4m+A==
2020-07-10T16:25:35.756+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:35.756+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:35.756+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=GetCallerIdentity&Version=2011-06-15
2020-07-10T16:25:35.756+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:36 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 475
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:35 GMT
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 67ee1ec6-68ee-4e13-bd46-961cc6535ac5
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:36 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <GetCallerIdentityResult>
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <Arn>arn:aws:sts::904806826062:assumed-role/OrganizationEngineerAccessRole/1594394734106693000</Arn>
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <UserId>AROAIJZZV4UHAQVJ4UJ66:1594394734106693000</UserId>
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <Account>904806826062</Account>
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </GetCallerIdentityResult>
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>67ee1ec6-68ee-4e13-bd46-961cc6535ac5</RequestId>
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </GetCallerIdentityResponse>
2020-07-10T16:25:36.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:36 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:36 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: sts.amazonaws.com
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 43
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHN3A3BA4I/20200710/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=ae7196f2b340f21f3ee1ddfcdbfb5d71fb242c483ea94e86e98ff214c8cc8799
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152536Z
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDIKCUIxIZ/lgeWTY/iK7AbHv4wJq7UN0HPENeE79bvDBnkFjpR4HKKqhjyT69+dew8Aw886Aq7xP/o2Akus5yPa9M6IDlyzD/eGa5r5lcYa5jCuVIhGJw30fC6/vJ79KGrNbhT4S3jsmtaDCWU43TCV32H8cwwE6/6UBRGYIxgvaAyNSI6OSE4nUddLqVxUFoTFvJkNTa7lk5WNrDj1JizLIzHxfOROb9seVHaD/3X4IvOdgOmHPrjQ9LI3x0ux7qss8Di81SClnMpQo75Ci+AUyLTMCXelouJPtRyeH/gAY+8kIFXwYPEQld7joiDOKudGLNcM9T/aAiD1b5F4m+A==
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=GetCallerIdentity&Version=2011-06-15
2020-07-10T16:25:36.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:36 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 475
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:35 GMT
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 7d6df73c-980f-4daf-8d51-5ef2a95f24b6
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:36 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <GetCallerIdentityResult>
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <Arn>arn:aws:sts::904806826062:assumed-role/OrganizationEngineerAccessRole/1594394734106693000</Arn>
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <UserId>AROAIJZZV4UHAQVJ4UJ66:1594394734106693000</UserId>
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <Account>904806826062</Account>
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </GetCallerIdentityResult>
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>7d6df73c-980f-4daf-8d51-5ef2a95f24b6</RequestId>
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:36.766+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </GetCallerIdentityResponse>
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:36 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeAccountAttributes Details:
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 87
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHN3A3BA4I/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=ea5ebbd20ff12dacdbac19c7a1fba9d83dc36c955ba1a6f0306d8d7a1edaab0b
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152536Z
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDIKCUIxIZ/lgeWTY/iK7AbHv4wJq7UN0HPENeE79bvDBnkFjpR4HKKqhjyT69+dew8Aw886Aq7xP/o2Akus5yPa9M6IDlyzD/eGa5r5lcYa5jCuVIhGJw30fC6/vJ79KGrNbhT4S3jsmtaDCWU43TCV32H8cwwE6/6UBRGYIxgvaAyNSI6OSE4nUddLqVxUFoTFvJkNTa7lk5WNrDj1JizLIzHxfOROb9seVHaD/3X4IvOdgOmHPrjQ9LI3x0ux7qss8Di81SClnMpQo75Ci+AUyLTMCXelouJPtRyeH/gAY+8kIFXwYPEQld7joiDOKudGLNcM9T/aAiD1b5F4m+A==
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeAccountAttributes&AttributeName.1=supported-platforms&Version=2016-11-15
2020-07-10T16:25:36.769+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:36 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeAccountAttributes Details:
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 540
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:36 GMT
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 1eaef58b-7344-4224-a51f-c263999568d5
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:36 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeAccountAttributesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>1eaef58b-7344-4224-a51f-c263999568d5</requestId>
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <accountAttributeSet>
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <attributeName>supported-platforms</attributeName>
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <attributeValueSet>
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <attributeValue>VPC</attributeValue>
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </attributeValueSet>
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </accountAttributeSet>
2020-07-10T16:25:36.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeAccountAttributesResponse>
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: provider.aws
2020/07/10 16:25:36 [TRACE] vertex "provider.aws": visit complete
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.default"
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "data.aws_ami.ubuntu"
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.default": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_s3_bucket.encrypted"
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket.encrypted": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.bucket-root"
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "data.aws_vpc.main"
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket.encrypted": evaluating
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_key_pair.main"
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_s3_bucket.encrypted
2020/07/10 16:25:36 [TRACE] vertex "data.aws_vpc.main": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] vertex "data.aws_vpc.main": evaluating
2020/07/10 16:25:36 [TRACE] vertex "data.aws_ami.ubuntu": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] vertex "data.aws_ami.ubuntu": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: data.aws_ami.ubuntu
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.bucket-subdirs"
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.default": evaluating
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: data.aws_iam_policy_document.default
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: data.aws_vpc.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [TRACE] vertex "aws_key_pair.main": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] vertex "aws_key_pair.main": evaluating
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_key_pair.main
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_iam_policy_document.bucket-subdirs - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.bucket-subdirs" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.bucket-subdirs"
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: data.aws_iam_policy_document.default
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.bucket-subdirs"
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.default": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: data.aws_vpc.main
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:36 [TRACE] vertex "data.aws_vpc.main": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_s3_bucket.encrypted
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket.encrypted": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_iam_policy_document.default - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.default" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.default": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.default"
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.default"
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.default": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.default": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: data.aws_iam_policy_document.default
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_key_pair.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] vertex "aws_key_pair.main": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for data.aws_iam_policy_document.default
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: data.aws_ami.ubuntu
2020/07/10 16:25:36 [TRACE] vertex "data.aws_ami.ubuntu": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_vpc.main - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "data.aws_vpc.main" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: data.aws_iam_policy_document.bucket-subdirs
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": visit complete
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs": visit complete
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] vertex "data.aws_vpc.main": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_s3_bucket.encrypted - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "data.aws_vpc.main"
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "data.aws_vpc.main"
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [TRACE] vertex "data.aws_vpc.main": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] vertex "data.aws_vpc.main": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: data.aws_vpc.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for data.aws_vpc.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: data.aws_iam_policy_document.default
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.default": visit complete
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.default": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.default": visit complete
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_iam_role.main"
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role.main": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role.main": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_iam_role.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "aws_s3_bucket.encrypted" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket.encrypted": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "aws_s3_bucket.encrypted"
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_s3_bucket.encrypted"
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket.encrypted": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket.encrypted": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_s3_bucket.encrypted
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_iam_policy_document.bucket-root - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for aws_s3_bucket.encrypted
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: data.aws_vpc.main
2020/07/10 16:25:36 [TRACE] vertex "data.aws_vpc.main": visit complete
2020/07/10 16:25:36 [TRACE] vertex "data.aws_vpc.main": dynamic subgraph completed successfully
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.bucket-root" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] vertex "data.aws_vpc.main": visit complete
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.bucket-root"
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:36 [TRACE] UpgradeResourceState: schema version of aws_s3_bucket.encrypted is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] GRPCProvider: UpgradeResourceState
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.bucket-root"
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": evaluating
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": evaluating
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-registry-ingress": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-registry-ingress": evaluating
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_key_pair.main - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_security_group.allow-registry-ingress
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [DEBUG] Resource instance state not found for node "aws_key_pair.main", instance aws_key_pair.main
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "aws_key_pair.main" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "aws_key_pair.main": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "aws_key_pair.main"
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_key_pair.main"
2020/07/10 16:25:36 [TRACE] vertex "aws_key_pair.main": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] vertex "aws_key_pair.main": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_key_pair.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_iam_role.main
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for aws_key_pair.main
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role.main": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:36 [TRACE] EvalReadState: no state present for aws_key_pair.main
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role.main - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: data.aws_iam_policy_document.bucket-root
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": visit complete
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "data.aws_iam_policy_document.bucket-root": visit complete
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "aws_iam_role.main" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role.main": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "aws_iam_role.main"
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.allow-registry-ingress
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-registry-ingress": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] Re-validating config for "aws_key_pair.main"
2020/07/10 16:25:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_ami.ubuntu - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_iam_role.main"
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role.main": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role.main": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_iam_role.main
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for aws_iam_role.main
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntu" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "data.aws_ami.ubuntu": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "data.aws_ami.ubuntu"
2020/07/10 16:25:36 [TRACE] UpgradeResourceState: schema version of aws_iam_role.main is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "data.aws_ami.ubuntu"
2020/07/10 16:25:36 [TRACE] GRPCProvider: UpgradeResourceState
2020/07/10 16:25:36 [TRACE] vertex "data.aws_ami.ubuntu": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] vertex "data.aws_ami.ubuntu": evaluating
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: data.aws_ami.ubuntu
2020/07/10 16:25:36 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.allow-ssh-and-egress - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [DEBUG] Resource instance state not found for node "aws_security_group.allow-ssh-and-egress", instance aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for data.aws_ami.ubuntu
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "aws_security_group.allow-ssh-and-egress" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.allow-registry-ingress - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [DEBUG] Resource instance state not found for node "aws_security_group.allow-registry-ingress", instance aws_security_group.allow-registry-ingress
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "aws_security_group.allow-registry-ingress" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-registry-ingress": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:36 [TRACE] EvalReadState: no state present for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-registry-ingress": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-registry-ingress": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_security_group.allow-registry-ingress
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for aws_security_group.allow-registry-ingress
2020/07/10 16:25:36 [TRACE] EvalReadState: no state present for aws_security_group.allow-registry-ingress
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: data.aws_ami.ubuntu
2020/07/10 16:25:36 [TRACE] vertex "data.aws_ami.ubuntu": visit complete
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:36 [TRACE] vertex "data.aws_ami.ubuntu": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "data.aws_ami.ubuntu": visit complete
2020/07/10 16:25:36 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:36 [TRACE] EvalWriteState: writing current state object for aws_key_pair.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:36 [TRACE] EvalWriteDiff: recorded Create change for aws_key_pair.main
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_key_pair.main
2020/07/10 16:25:36 [TRACE] vertex "aws_key_pair.main": visit complete
2020/07/10 16:25:36 [TRACE] vertex "aws_key_pair.main": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "aws_key_pair.main": visit complete
2020/07/10 16:25:36 [TRACE] Re-validating config for "aws_iam_role.main"
2020/07/10 16:25:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:36 [TRACE] Re-validating config for "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:36 [TRACE] Re-validating config for "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:36 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/10 16:25:36 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:36 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:36 [TRACE] EvalWriteState: writing current state object for aws_iam_role.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:36 [TRACE] EvalWriteDiff: recorded NoOp change for aws_iam_role.main
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_iam_role.main
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role.main": visit complete
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role.main": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role.main": visit complete
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_s3_bucket_policy.main"
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket_policy.main": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket_policy.main": evaluating
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_iam_instance_profile.main"
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_s3_bucket_policy.main
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_instance_profile.main": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_instance_profile.main": evaluating
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_s3_bucket_policy.main
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket_policy.main": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_iam_instance_profile.main
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_s3_bucket_policy.main - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-root": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [DEBUG] Resource instance state not found for node "aws_s3_bucket_policy.main", instance aws_s3_bucket_policy.main
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-root": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_iam_role_policy.bucket-root
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "aws_s3_bucket_policy.main" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket_policy.main": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "aws_s3_bucket_policy.main"
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_s3_bucket_policy.main"
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket_policy.main": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_iam_role_policy.bucket-root
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-root": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket_policy.main": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_s3_bucket_policy.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy.bucket-root - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_iam_instance_profile.main
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for aws_s3_bucket_policy.main
2020/07/10 16:25:36 [DEBUG] Resource instance state not found for node "aws_iam_role_policy.bucket-root", instance aws_iam_role_policy.bucket-root
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_instance_profile.main": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-root" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-root": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:36 [TRACE] EvalReadState: no state present for aws_s3_bucket_policy.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-root": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-root": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_iam_role_policy.bucket-root
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy.bucket-subdirs - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for aws_iam_role_policy.bucket-root
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [DEBUG] Resource instance state not found for node "aws_iam_role_policy.bucket-subdirs", instance aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-subdirs" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] EvalReadState: no state present for aws_iam_role_policy.bucket-root
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": evaluating
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [DEBUG] Resource instance state not found for node "aws_iam_instance_profile.main", instance aws_iam_instance_profile.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.main" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_instance_profile.main": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})})
2020/07/10 16:25:36 [TRACE] EvalReadState: no state present for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:36 [TRACE] Re-validating config for "aws_s3_bucket.encrypted"
2020/07/10 16:25:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/10 16:25:36 [TRACE] Re-validating config for "aws_s3_bucket_policy.main"
2020/07/10 16:25:36 [TRACE] EvalWriteState: writing current state object for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "aws_iam_instance_profile.main"
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_iam_instance_profile.main"
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_instance_profile.main": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_instance_profile.main": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_iam_instance_profile.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for aws_iam_instance_profile.main
2020/07/10 16:25:36 [TRACE] EvalReadState: no state present for aws_iam_instance_profile.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/10 16:25:36 [TRACE] Re-validating config for "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:36 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 16:25:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:36 [TRACE] EvalWriteState: writing current state object for aws_security_group.allow-registry-ingress
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:36 [TRACE] EvalWriteDiff: recorded Create change for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": visit complete
2020/07/10 16:25:36 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": visit complete
2020/07/10 16:25:36 [TRACE] Re-validating config for "aws_iam_instance_profile.main"
2020/07/10 16:25:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:36 [TRACE] Re-validating config for "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:36 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:36 [TRACE] EvalWriteDiff: recorded Create change for aws_security_group.allow-registry-ingress
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.allow-registry-ingress
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-registry-ingress": visit complete
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-registry-ingress": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "aws_security_group.allow-registry-ingress": visit complete
2020/07/10 16:25:36 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:36 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:36 [TRACE] EvalWriteState: writing current state object for aws_s3_bucket_policy.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:36 [TRACE] EvalWriteDiff: recorded Create change for aws_s3_bucket_policy.main
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_s3_bucket_policy.main
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket_policy.main": visit complete
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket_policy.main": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket_policy.main": visit complete
2020/07/10 16:25:36 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:36 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy.bucket-root
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:36 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy.bucket-root
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_iam_role_policy.bucket-root
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-root": visit complete
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-root": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-root": visit complete
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:36 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:36 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": visit complete
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": visit complete
2020/07/10 16:25:36 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:36 [TRACE] EvalWriteState: writing current state object for aws_iam_instance_profile.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:36 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_instance_profile.main
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_iam_instance_profile.main
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_instance_profile.main": visit complete
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_instance_profile.main": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "aws_iam_instance_profile.main": visit complete
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_instance.main"
2020/07/10 16:25:36 [TRACE] vertex "aws_instance.main": starting visit (*terraform.NodePlannableResource)
2020/07/10 16:25:36 [TRACE] vertex "aws_instance.main": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_instance.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_instance.main
2020/07/10 16:25:36 [TRACE] vertex "aws_instance.main": expanding dynamic subgraph
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.main - *terraform.NodePlannableResourceInstance
  ------
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:36 [DEBUG] Resource instance state not found for node "aws_instance.main", instance aws_instance.main
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:36 [DEBUG] ReferenceTransformer: "aws_instance.main" references: []
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/10 16:25:36 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:36 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/10 16:25:36 [TRACE] vertex "aws_instance.main": entering dynamic subgraph
2020/07/10 16:25:36 [TRACE] dag/walk: updating graph
2020/07/10 16:25:36 [TRACE] dag/walk: added new vertex: "aws_instance.main"
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "aws_instance.main"
2020/07/10 16:25:36 [TRACE] vertex "aws_instance.main": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/10 16:25:36 [TRACE] vertex "aws_instance.main": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: aws_instance.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:36 [TRACE] EvalReadState: reading state for aws_instance.main
2020/07/10 16:25:36 [TRACE] EvalReadState: no state present for aws_instance.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:36 [TRACE] Re-validating config for "aws_instance.main"
2020/07/10 16:25:36 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:36 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:36 [TRACE] EvalWriteState: writing current state object for aws_s3_bucket.encrypted
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:36 [TRACE] EvalWriteDiff: recorded NoOp change for aws_s3_bucket.encrypted
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_s3_bucket.encrypted
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket.encrypted": visit complete
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket.encrypted": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "aws_s3_bucket.encrypted": visit complete
2020/07/10 16:25:36 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:36 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .user_data: planned value cty.StringVal("dd6dd3fbc7a6371b12c66660e27bdccda24faa51") does not match config value cty.StringVal("H4sIAAAAAAAA/7xX3XLbOJa+Z1Xe4bTsHXdmR7+O0/FftiRZpqhY9piKRZE9XQ4IQCQsENASoCS6K1XzGvMI+xr7KPMkWyApRW4nd7Pji1R4cH6/8+EcqC+FpkLXP+dLegZJxjVbolQ3E7ah5BxCmQmC0vyyNnbGg97dw+1V1/VrlvmqT2mqmBRn0G603lhvrHp9X+mNtfOdIqHmNK0PBJaEiegMfgmZ3lMogmu60U3MZUbqWIo5i95YY5bQV2EO9nWsdco0fZwzTtWZBVAHXDo9Ayfv6k+sFYXe6SL4LCPqXeuwX8g+OXmvgz7LCHemLccOWn+d8Tj01tFdJJ+crnxyrl0eznrKn7ncsU8Txx5EOJkKNLttYbGI/M5pFiRckNkoJjZfhezdJyfvGr8j0u9xOuxx/9h9doauDCa9JOxsFPJOhDMMYpzw2E82HD9LY6Od4YgHHb4Kn2R0PyWfd9+sd4zsaR5Mei1kP0QPz+PIF9MnVOTMnx3b5djerKg3XThDd3WX9+IwuS992qO239GcXMmI2DF37JM49B6isONX39V5v9cK896azG5lFfeZDEcnju3GxB5ExP6Q9dnY1DVDM1eGxyZ2exXYPKEez4K8zC2wp4k/myrS7z2Fnbb2vZOFY2+WYfIQ+bORIF6bh8J9LrA0mNzLp5fxuPY9wm/6Jpd7k+MS58bXSYI80sbJdQt5p5kznGaBPc2LHtndVTBzn2467srUgtlpHnhkiY/dnE5OK1ucUa+t/P67TySZ5rjCedx/t+knm1VgetDvqWAW8PBKRk7icl9MhRPJyLGDFU7aMRm6HD+Zs+Vz2HnH+qwbBQnnoe0+3xm9ftfwKCcJfzI8c8ReXdHymdinuamt0LVvY78T862dn2xWfuJy3LnN0azXCo+d905/tAyTNg+905xOHJPf87jIsxvtc8VJpu2bGeH4+F6PmVOe7/XdEb0ltqeGd/zG22LU3sOozYh3mwaze9ZP4hYZdt+b2nzPXZT1blZ+51oh+/SZXMn2+Kq7LnAZ3nL/eFTGSAYad6ZPOJm2SsxK/Hb1bX09FfYbp5KbexKykju+3Y7xsctx0o18MYrDxHDRlcFsxEfH48j3NnngXS/opJf5M3dJkocIH0/X2D7NSb+XhMdV7f1xhIejVehNW8ietnHe08HMzZF3+3yzi9vd6U48P6LeadsZkjgUhnMfotC7ToNJr407u7tieJgE3nWLzEb8jn2zH0/eRX5nsyo4bpMlseO2z06ewk5rFdin5p7mNx23wBp5o3YxJ5LuLwZjp999cq6czPQLeZtFNSeWoXctgklX+va2Xz1GPK6CfleTfm+vd93M7y/2fI2zghvJNA+8k6ftzMDJ9CnwTlrhcGFmxzIc3kfIa8dB5yFC3rtqFvAMzdyl722WtLpnW7xe4LnlYL8bBd5JMcMCM1+Go3ZwX+Hb7639mSvvWJfddNqcDEdL/3hc3BlkT2Nzd3d+riN93znNiD3NSL/9QGc9fvNwui5wEuP3zrWKnORkhTsnyyDxmXPd+mR8hENX3pU8bIXHozjoTBc44Z1g5rwv8ejxMLlmoT1d3LFeC4spr+TLULgciyAu7vrTYI3zijtDV+Jk+ozsU2VqGq/lpQUAQHcrK3z/rpDItaDpGaRS6jPzTyFcIh2fQZNq3ExpxJRO80ae8PKMpglTZoWpMzhq/XJycvQvWpabuoop5wqnbKl/tC1/aoZMNEOkYss6gAnV2VKBjilsE4UE4ZgJClpCjFYUEKSZEExE1gFcSbyg6TddHSMNCVpQBZmiIOeFKyaURgJT6wCWqTTLGBTVwERxuucfZTqmQjOMtFFGETKmhdbkGMIML6guTOcyBaVlykS0C36krAMgSKOGZRmdugSapnTD9PZTyEwoqi0rQUz8/BZ+t6DMjfNHUlRigSnucevS+moVfwfglGolNBxpqjR8KW3qmH6BeSoT+IKW+gtkqsRmVznnSDMpoGyEgWDFCCUQ5oXOXPKFSR3pCs6G9TKpKlOKYwk15/b6zrxkqoQMAKSyAqhZFgDOUg71uZrcQER1ozrFMjEQRFTXK4mKLQCVEQkqhkbz5YllSj8ANxOv2LAwMfe6uzsqn1xZWlRbAIA0qFhmnADdMKUhE4Sm8OXVRfjSsA4M+zIcv/QCSaY0hBSWHGEDGZ3LlG4JCDpmCqSgDWu/a9/Fa6JRqr+htcu6AX/+1/9Z8P/h9cfh/n2hPmxZxubw66/wE9TnUHvVzxr89tu5IYcop2TRiYHr3rmmFddmALyyASKpAiF1yZWSzoX1hmloWwBzZlnb7mUC/mbe83WBkj0KljJCNcLxVoHqtUwXEEulK9FK8iz5TgpnhaQMsTtoloQsUjTm+7PBzJF/77DOVFoMbCpWUAxtc29uIyY2UAdB16BouqIphFzihWWBucRTlDIUcqosa+w/TtqX//z7PzRNUzSXadJI8urWR+iff/+HdWs7t7PH7rTr3HR7N4PH6fBu8nlyeVRAI0ygpmKaqjpaIcaN26PKZnBrDK5+bEGFUSdHljfoPV457uVRc4XS5nq9LkUPk4F7ebRer+tmih9Z5XcuszRTNDWN3oaa9IeD8eDy6FDhmH4Tu4P7h8Hk8+OD61weHab0vzOq9GOWsiMDw3UmsJkpypILMyJKWtYpHP2N/nrcSY4OC3TMV3J0Dl/hAOyUUmERRl/pt8+P23+0KIl6DmZpQLE1JkgwnQOOKV5Yv8Lhz4xAPXoLP11CrVWD3+BPfwLCKNQm5WrYTjtDb6SKR0SjZgwPCpP2vsmDQhE9g8OfQ6RocQsOW2+BSMPJW5TQmkmgn1KkKRRdqCYrmP1rYaThIxx+v9tNKAuDi4vB3bV1AOv12qxnIUV9vV5bFcd+L67nAThzsw5SiMwF1rLQJiyl2EyApDI00kK/NH4sMv5zowx0XpykVGepgONWe5tY2eez5i6hw1eNPre+/jGfUVa9GSq5CfUq9IvAUmqo/raUbFYRm8ss5Aw/xjrh51YV4UZGqvgvwpgq9chlBIcVq3eGXEaqWSo0uIzKUDRNZVro/8CgUCj1t/AKzDNCy4Cs/ICIyxDxJpZJIkXDdPb8e+drmZJlajIoVbb5M6WpMJ1ZylTDh9aH1l8Ao2qpT1EqmKpUxxUlCZ0zQQmguaZpge5e7G3Y0oaX3tudXxqtRqvRPjP+TZ8MmbakNKv49xLbv3AZfS0ZY550VFnJgrAU6svXGP2+1w5jp76+8MgEoZuGOXxB8z962XPS3DMp6X7x09Vd/7P/1wEY4UfrojjjSESXNSpqRkAR+WhtGXOhmeb04/bKNMvPb8cJ1QhwjFJF9WUt0/P6hxo0P1oXzdLPRShJDpgjpS5rWAqNmKBpbc+D0aPpx4u4vYsStz+W9jTdUyRsBYxc1tYpWi4LH9aQci7Bkykn1kWTsNWe+lxKTdOP//s/cPgzMXPiP//Df3vRrMTWRdNkViRaALFtX4zMPIn2f7lYOJZrAXUXDs3UPjvczvM/Ym8cDIo9AGYpmDcw3jZP5UkoOcPAmVhYXEBd/XBCvZwHL1fPXiiXKvPus8oXyJWEXGawZio23E/Lw3I6/lfNUpRTrCEX5pdJzaeqBrVbWTsHIgvMMFIUDovjHYY+VfC2fEkwwXSDlBtv5/scwpSixfn5zuJWwttiVVQyqhC2iBTUsuQCahODSjm2SfEzp6q0Zr16aNTrb6z/CwAA///+xAo3oRUAAA==")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:36 [TRACE] EvalWriteState: writing current state object for aws_instance.main
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:36 [TRACE] EvalWriteDiff: recorded Create change for aws_instance.main
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: aws_instance.main
2020/07/10 16:25:36 [TRACE] vertex "aws_instance.main": visit complete
2020/07/10 16:25:36 [TRACE] vertex "aws_instance.main": dynamic subgraph completed successfully
2020/07/10 16:25:36 [TRACE] vertex "aws_instance.main": visit complete
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "output.public-ip"
2020/07/10 16:25:36 [TRACE] vertex "output.public-ip": starting visit (*terraform.NodeApplyableOutput)
2020/07/10 16:25:36 [TRACE] vertex "output.public-ip": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: output.public-ip
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "provider.aws (close)"
2020/07/10 16:25:36 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:36 [TRACE] vertex "provider.aws (close)": evaluating
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: provider.aws (close)
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/10 16:25:36 [TRACE] GRPCProvider: Close
2020/07/10 16:25:36 [TRACE] EvalWriteOutput: Removing output.public-ip from state (it is now null)
2020/07/10 16:25:36 [TRACE] EvalWriteOutput: Saving Create change for output.public-ip in changeset
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: output.public-ip
2020/07/10 16:25:36 [TRACE] vertex "output.public-ip": visit complete
2020/07/10 16:25:36 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/10 16:25:36 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/10 16:25:36 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/10 16:25:36 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/10 16:25:36 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/10 16:25:36 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/10 16:25:36 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-10T16:25:37.002+0100 [DEBUG] plugin: plugin process exited: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 pid=4145
2020-07-10T16:25:37.002+0100 [DEBUG] plugin: plugin exited
2020/07/10 16:25:37 [TRACE] [walkPlan] Exiting eval tree: provider.aws (close)
2020/07/10 16:25:37 [TRACE] vertex "provider.aws (close)": visit complete
2020/07/10 16:25:37 [TRACE] dag/walk: visiting "root"
2020/07/10 16:25:37 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/10 16:25:37 [TRACE] vertex "root": visit complete
2020/07/10 16:25:37 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/07/10 16:25:49 [INFO] backend/local: apply calling Apply
2020/07/10 16:25:49 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/10 16:25:49 [TRACE] ConfigTransformer: Starting for path: 
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
  data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
  data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
  data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
  data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/07/10 16:25:49 [TRACE] DiffTransformer starting
2020/07/10 16:25:49 [TRACE] DiffTransformer: found Create change for aws_key_pair.main 
2020/07/10 16:25:49 [TRACE] DiffTransformer: aws_key_pair.main will be represented by aws_key_pair.main
2020/07/10 16:25:49 [TRACE] DiffTransformer: found NoOp change for aws_iam_role.main 
2020/07/10 16:25:49 [TRACE] DiffTransformer: found Create change for aws_security_group.allow-ssh-and-egress 
2020/07/10 16:25:49 [TRACE] DiffTransformer: aws_security_group.allow-ssh-and-egress will be represented by aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:49 [TRACE] DiffTransformer: found Create change for aws_security_group.allow-registry-ingress 
2020/07/10 16:25:49 [TRACE] DiffTransformer: aws_security_group.allow-registry-ingress will be represented by aws_security_group.allow-registry-ingress
2020/07/10 16:25:49 [TRACE] DiffTransformer: found Create change for aws_s3_bucket_policy.main 
2020/07/10 16:25:49 [TRACE] DiffTransformer: aws_s3_bucket_policy.main will be represented by aws_s3_bucket_policy.main
2020/07/10 16:25:49 [TRACE] DiffTransformer: found Create change for aws_iam_role_policy.bucket-root 
2020/07/10 16:25:49 [TRACE] DiffTransformer: aws_iam_role_policy.bucket-root will be represented by aws_iam_role_policy.bucket-root
2020/07/10 16:25:49 [TRACE] DiffTransformer: found Create change for aws_iam_role_policy.bucket-subdirs 
2020/07/10 16:25:49 [TRACE] DiffTransformer: aws_iam_role_policy.bucket-subdirs will be represented by aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:49 [TRACE] DiffTransformer: found Create change for aws_iam_instance_profile.main 
2020/07/10 16:25:49 [TRACE] DiffTransformer: aws_iam_instance_profile.main will be represented by aws_iam_instance_profile.main
2020/07/10 16:25:49 [TRACE] DiffTransformer: found NoOp change for aws_s3_bucket.encrypted 
2020/07/10 16:25:49 [TRACE] DiffTransformer: found Create change for aws_instance.main 
2020/07/10 16:25:49 [TRACE] DiffTransformer: aws_instance.main will be represented by aws_instance.main
2020/07/10 16:25:49 [TRACE] DiffTransformer complete
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
  data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
  data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
  data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
  data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.bucket-subdirs (prepare state)" (*terraform.NodeApplyableResource) config from permissions.tf:99,1-48
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_s3_bucket.encrypted (prepare state)" (*terraform.NodeApplyableResource) config from bucket.tf:9,1-37
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.allow-ssh-and-egress (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:59,1-53
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.ubuntu (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"ami.tf", Start:hcl.Pos{Line:3, Column:1, Byte:79}, End:hcl.Pos{Line:3, Column:24, Byte:102}}
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.allow-registry-ingress" (*terraform.NodeApplyableResourceInstance) config from main.tf:31,1-55
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.main" (*terraform.NodeApplyableResourceInstance) config from permissions.tf:112,1-43
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.main (prepare state)" (*terraform.NodeApplyableResource) config from permissions.tf:112,1-43
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_s3_bucket_policy.main (prepare state)" (*terraform.NodeApplyableResource) config from bucket.tf:29,1-39
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.main (prepare state)" (*terraform.NodeApplyableResource) config from permissions.tf:86,1-31
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.bucket-root (prepare state)" (*terraform.NodeApplyableResource) config from permissions.tf:92,1-45
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.bucket-root (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"permissions.tf", Start:hcl.Pos{Line:9, Column:1, Byte:343}, End:hcl.Pos{Line:9, Column:45, Byte:387}}
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.bucket-subdirs (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"permissions.tf", Start:hcl.Pos{Line:34, Column:1, Byte:999}, End:hcl.Pos{Line:34, Column:48, Byte:1046}}
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.registry-config (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:90, Column:1, Byte:2188}, End:hcl.Pos{Line:90, Column:39, Byte:2226}}
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.bucket-subdirs" (*terraform.NodeApplyableResourceInstance) config from permissions.tf:99,1-48
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.main" (*terraform.NodeApplyableResourceInstance) config from main.tf:150,1-31
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.allow-registry-ingress (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:31,1-55
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.main (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:150,1-31
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.main (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:19,1-31
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_s3_bucket_policy.main" (*terraform.NodeApplyableResourceInstance) config from bucket.tf:29,1-39
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.default (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"permissions.tf", Start:hcl.Pos{Line:62, Column:1, Byte:1810}, End:hcl.Pos{Line:62, Column:41, Byte:1850}}
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_vpc.main (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:13, Column:1, Byte:382}, End:hcl.Pos{Line:13, Column:22, Byte:403}}
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_cloudinit_config.init (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:101, Column:1, Byte:2474}, End:hcl.Pos{Line:101, Column:40, Byte:2513}}
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.main" (*terraform.NodeApplyableResourceInstance) config from main.tf:19,1-31
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.allow-ssh-and-egress" (*terraform.NodeApplyableResourceInstance) config from main.tf:59,1-53
2020/07/10 16:25:49 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.bucket-root" (*terraform.NodeApplyableResourceInstance) config from permissions.tf:92,1-45
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/10 16:25:49 [DEBUG] Resource state not found for node "aws_security_group.allow-ssh-and-egress", instance aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:49 [DEBUG] Resource state not found for node "aws_iam_role_policy.bucket-root", instance aws_iam_role_policy.bucket-root
2020/07/10 16:25:49 [DEBUG] Resource state not found for node "aws_key_pair.main", instance aws_key_pair.main
2020/07/10 16:25:49 [DEBUG] Resource state not found for node "aws_security_group.allow-registry-ingress", instance aws_security_group.allow-registry-ingress
2020/07/10 16:25:49 [DEBUG] Resource state not found for node "aws_iam_instance_profile.main", instance aws_iam_instance_profile.main
2020/07/10 16:25:49 [DEBUG] Resource state not found for node "aws_iam_role_policy.bucket-subdirs", instance aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:49 [DEBUG] Resource state not found for node "aws_instance.main", instance aws_instance.main
2020/07/10 16:25:49 [DEBUG] Resource state not found for node "aws_s3_bucket_policy.main", instance aws_s3_bucket_policy.main
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
  data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
  data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
  data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
  data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
  data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
  data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
  data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
  data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
  output.public-ip - *terraform.NodeApplyableOutput
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/10 16:25:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/10 16:25:49 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from main.tf:1,1-15
2020/07/10 16:25:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
  data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
  data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
  data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
  data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/10 16:25:49 [DEBUG] adding implicit provider configuration provider.template, implied first by data.template_file.registry-config (prepare state)
2020/07/10 16:25:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
  aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
  data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
  data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
  data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
  data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/10 16:25:49 [TRACE] ProviderTransformer: data.aws_iam_policy_document.default (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_iam_role_policy.bucket-root is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_iam_instance_profile.main (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_s3_bucket_policy.main (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: data.aws_iam_policy_document.bucket-subdirs (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: data.template_file.registry-config (prepare state) is provided by provider.template or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_iam_role_policy.bucket-subdirs is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_security_group.allow-registry-ingress (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_instance.main (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: data.aws_vpc.main (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: data.template_cloudinit_config.init (prepare state) is provided by provider.template or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_key_pair.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_security_group.allow-ssh-and-egress is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_iam_role_policy.bucket-subdirs (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_s3_bucket.encrypted (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_security_group.allow-ssh-and-egress (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: data.aws_ami.ubuntu (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_security_group.allow-registry-ingress is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_iam_instance_profile.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_iam_role.main (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_iam_role_policy.bucket-root (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: data.aws_iam_policy_document.bucket-root (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_instance.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_key_pair.main (prepare state) is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: aws_s3_bucket_policy.main is provided by provider.aws or inherited equivalent
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_security_group.allow-ssh-and-egress (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.allow-registry-ingress
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_security_group.allow-registry-ingress" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_instance_profile.main
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.main" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_iam_role_policy.bucket-root (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_iam_policy_document.default (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.default (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_instance_profile.main (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.main (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_security_group.allow-ssh-and-egress" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.main (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_instance.main (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_iam_role_policy.bucket-subdirs (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_s3_bucket_policy.main
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_s3_bucket_policy.main" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy.bucket-root
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_iam_role_policy.bucket-root" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.template serving data.template_file.registry-config (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "data.template_file.registry-config (prepare state)" (*terraform.NodeApplyableResource) needs provider.template
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.allow-registry-ingress (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_security_group.allow-registry-ingress (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.template serving data.template_cloudinit_config.init (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "data.template_cloudinit_config.init (prepare state)" (*terraform.NodeApplyableResource) needs provider.template
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_s3_bucket.encrypted (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_s3_bucket.encrypted (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role.main (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_iam_role.main (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_s3_bucket_policy.main (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_s3_bucket_policy.main (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.bucket-subdirs (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_vpc.main (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "data.aws_vpc.main (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.bucket-root (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.main
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_instance.main" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_key_pair.main (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_key_pair.main (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_iam_role_policy.bucket-subdirs" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_key_pair.main
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "aws_key_pair.main" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2020/07/10 16:25:49 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_ami.ubuntu (prepare state)
2020/07/10 16:25:49 [DEBUG] ProviderTransformer: "data.aws_ami.ubuntu (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2020/07/10 16:25:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/10 16:25:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/10 16:25:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/10 16:25:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  output.public-ip - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_vpc.main (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_cloudinit_config.init (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.main
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_s3_bucket.encrypted (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.ubuntu (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.allow-registry-ingress
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.main
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.main (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.main
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.template
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.main (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_s3_bucket_policy.main
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.default (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.bucket-root
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.main (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_s3_bucket_policy.main (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.registry-config (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.allow-registry-ingress (prepare state)
2020/07/10 16:25:49 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.main (prepare state)
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "provider.template" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_iam_role.main (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-root (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.bucket-root (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_instance.main" references: [data.aws_ami.ubuntu (prepare state) data.template_cloudinit_config.init (prepare state) aws_iam_instance_profile.main (prepare state) aws_iam_instance_profile.main aws_iam_instance_profile.main aws_security_group.allow-ssh-and-egress aws_security_group.allow-ssh-and-egress aws_security_group.allow-ssh-and-egress (prepare state) aws_security_group.allow-registry-ingress (prepare state) aws_security_group.allow-registry-ingress aws_security_group.allow-registry-ingress var.key_name]
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_key_pair.main (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_s3_bucket_policy.main" references: [aws_iam_role.main (prepare state) var.bucket aws_iam_role.main (prepare state) var.bucket var.bucket]
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "var.bucket" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "output.public-ip" references: [aws_instance.main aws_instance.main aws_instance.main (prepare state)]
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.default (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-root" references: [data.aws_iam_policy_document.bucket-root (prepare state) aws_iam_role.main (prepare state)]
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "var.ansible_pem_key" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "var.key_name" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-subdirs" references: [data.aws_iam_policy_document.bucket-subdirs (prepare state) aws_iam_role.main (prepare state)]
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.main (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_s3_bucket_policy.main (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.bucket-subdirs (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "data.template_file.registry-config (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_security_group.allow-registry-ingress (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_instance.main (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "var.profile" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "var.region" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "data.aws_vpc.main (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "data.template_cloudinit_config.init (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_key_pair.main" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_security_group.allow-ssh-and-egress" references: [data.aws_vpc.main (prepare state)]
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_security_group.allow-registry-ingress" references: [data.aws_vpc.main (prepare state)]
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.main" references: [aws_iam_role.main (prepare state)]
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.bucket-subdirs (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_s3_bucket.encrypted (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "aws_security_group.allow-ssh-and-egress (prepare state)" references: []
2020/07/10 16:25:49 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntu (prepare state)" references: []
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/10 16:25:49 [TRACE] AttachDependenciesTransformer: aws_s3_bucket_policy.main depends on [aws_iam_role.main]
2020/07/10 16:25:49 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy.bucket-root depends on [aws_iam_role.main]
2020/07/10 16:25:49 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy.bucket-subdirs depends on [aws_iam_role.main]
2020/07/10 16:25:49 [TRACE] AttachDependenciesTransformer: aws_key_pair.main depends on []
2020/07/10 16:25:49 [TRACE] AttachDependenciesTransformer: aws_security_group.allow-ssh-and-egress depends on []
2020/07/10 16:25:49 [TRACE] AttachDependenciesTransformer: aws_security_group.allow-registry-ingress depends on []
2020/07/10 16:25:49 [TRACE] AttachDependenciesTransformer: aws_iam_instance_profile.main depends on [aws_iam_role.main]
2020/07/10 16:25:49 [TRACE] AttachDependenciesTransformer: aws_instance.main depends on [aws_iam_instance_profile.main aws_iam_role.main aws_security_group.allow-registry-ingress aws_security_group.allow-ssh-and-egress]
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
    output.public-ip - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.template - *terraform.NodeApplyableProvider
    var.ansible_pem_key - *terraform.NodeRootVariable
    var.bucket - *terraform.NodeRootVariable
    var.key_name - *terraform.NodeRootVariable
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
    output.public-ip - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.template - *terraform.NodeApplyableProvider
    var.ansible_pem_key - *terraform.NodeRootVariable
    var.bucket - *terraform.NodeRootVariable
    var.key_name - *terraform.NodeRootVariable
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.key_name - *terraform.NodeRootVariable
  aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
    output.public-ip - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.template - *terraform.NodeApplyableProvider
    var.ansible_pem_key - *terraform.NodeRootVariable
    var.bucket - *terraform.NodeRootVariable
    var.key_name - *terraform.NodeRootVariable
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:49 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/10 16:25:49 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
  aws_iam_instance_profile.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.main - *terraform.NodeApplyableResourceInstance
    aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    var.key_name - *terraform.NodeRootVariable
  aws_instance.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    aws_iam_role.main (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    var.bucket - *terraform.NodeRootVariable
  aws_s3_bucket_policy.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-registry-ingress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.allow-ssh-and-egress - *terraform.NodeApplyableResourceInstance
    aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.allow-ssh-and-egress (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.bucket-subdirs (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_vpc.main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
    provider.template - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
    data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
    output.public-ip - *terraform.NodeApplyableOutput
    var.ansible_pem_key - *terraform.NodeRootVariable
  output.public-ip - *terraform.NodeApplyableOutput
    aws_instance.main - *terraform.NodeApplyableResourceInstance
  provider.aws - *terraform.NodeApplyableProvider
    var.profile - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_role_policy.bucket-root - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.bucket-subdirs - *terraform.NodeApplyableResourceInstance
    aws_instance.main - *terraform.NodeApplyableResourceInstance
    aws_key_pair.main - *terraform.NodeApplyableResourceInstance
    aws_s3_bucket.encrypted (prepare state) - *terraform.NodeApplyableResource
    aws_s3_bucket_policy.main - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.default (prepare state) - *terraform.NodeApplyableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init (prepare state) - *terraform.NodeApplyableResource
    data.template_file.registry-config (prepare state) - *terraform.NodeApplyableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/07/10 16:25:49 [DEBUG] Starting graph walk: walkApply
2020/07/10 16:25:49 [TRACE] dag/walk: updating graph
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "var.ansible_pem_key"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_s3_bucket_policy.main"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "var.bucket"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "output.public-ip"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "data.template_file.registry-config (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_instance.main"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "var.key_name"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.bucket-subdirs (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-registry-ingress (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_iam_role.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_key_pair.main"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-ssh-and-egress (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_s3_bucket_policy.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "var.profile"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "data.template_cloudinit_config.init (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-root (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_iam_instance_profile.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "var.region"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "data.aws_ami.ubuntu (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_key_pair.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.default (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_s3_bucket.encrypted (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy.bucket-subdirs (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "data.aws_iam_policy_document.bucket-root (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "provider.template"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "root"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_instance.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "data.aws_vpc.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added new vertex: "aws_iam_instance_profile.main"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-subdirs" waiting on "data.aws_iam_policy_document.bucket-subdirs (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_instance.main"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_instance.main (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "data.template_cloudinit_config.init (prepare state)" waiting on "provider.template"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "data.aws_iam_policy_document.default (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.aws_iam_policy_document.default (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_security_group.allow-registry-ingress" waiting on "aws_security_group.allow-registry-ingress (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.public-ip"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_cloudinit_config.init (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "data.template_file.registry-config (prepare state)" waiting on "provider.template"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "var.key_name"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_key_pair.main"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_key_pair.main (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_security_group.allow-registry-ingress (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.registry-config (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.ansible_pem_key"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.template_file.registry-config (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.main" waiting on "aws_iam_instance_profile.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.main" waiting on "aws_iam_role.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_security_group.allow-ssh-and-egress" waiting on "aws_security_group.allow-ssh-and-egress (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "output.public-ip" waiting on "aws_instance.main"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "data.template_cloudinit_config.init (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_s3_bucket.encrypted (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.main (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_s3_bucket_policy.main" waiting on "var.bucket"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_s3_bucket.encrypted (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_s3_bucket_policy.main"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_s3_bucket_policy.main" waiting on "aws_iam_role.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-root" waiting on "data.aws_iam_policy_document.bucket-root (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_security_group.allow-registry-ingress" waiting on "data.aws_vpc.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-root (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_s3_bucket_policy.main (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-subdirs" waiting on "aws_iam_role.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-root" waiting on "aws_iam_role.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_key_pair.main"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "aws_iam_instance_profile.main"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.region"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_key_pair.main" waiting on "aws_key_pair.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.default (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_s3_bucket.encrypted (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_s3_bucket_policy.main"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_s3_bucket_policy.main" waiting on "aws_s3_bucket_policy.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_security_group.allow-ssh-and-egress" waiting on "data.aws_vpc.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-root (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-subdirs" waiting on "aws_iam_role_policy.bucket-subdirs (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_security_group.allow-ssh-and-egress (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "data.aws_vpc.main (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "aws_instance.main (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "data.aws_ami.ubuntu (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_instance.main" waiting on "data.aws_ami.ubuntu (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-subdirs (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "data.aws_iam_policy_document.bucket-subdirs (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_iam_role.main (prepare state)" waiting on "provider.aws"
2020/07/10 16:25:49 [TRACE] dag/walk: added edge: "aws_iam_role_policy.bucket-root" waiting on "aws_iam_role_policy.bucket-root (prepare state)"
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_instance.main", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "data.template_file.registry-config (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_s3_bucket_policy.main (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_s3_bucket.encrypted (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy.bucket-subdirs (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_security_group.allow-registry-ingress", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_key_pair.main (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_iam_instance_profile.main (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_s3_bucket_policy.main", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "data.aws_iam_policy_document.bucket-root (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_security_group.allow-ssh-and-egress (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy.bucket-subdirs", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_iam_instance_profile.main", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_key_pair.main", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "data.template_cloudinit_config.init (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_security_group.allow-ssh-and-egress", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "output.public-ip", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy.bucket-root", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "data.aws_iam_policy_document.bucket-subdirs (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_iam_role.main (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_instance.main (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy.bucket-root (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "data.aws_ami.ubuntu (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "aws_security_group.allow-registry-ingress (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "data.aws_iam_policy_document.default (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: dependencies changed for "data.aws_vpc.main (prepare state)", sending new deps
2020/07/10 16:25:49 [TRACE] dag/walk: visiting "var.key_name"
2020/07/10 16:25:49 [TRACE] dag/walk: visiting "provider.template"
2020/07/10 16:25:49 [TRACE] dag/walk: visiting "var.region"
2020/07/10 16:25:49 [TRACE] dag/walk: visiting "var.bucket"
2020/07/10 16:25:49 [TRACE] vertex "var.bucket": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:49 [TRACE] vertex "var.key_name": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:49 [TRACE] vertex "var.bucket": evaluating
2020/07/10 16:25:49 [TRACE] vertex "var.key_name": evaluating
2020/07/10 16:25:49 [TRACE] [walkApply] Entering eval tree: var.bucket
2020/07/10 16:25:49 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:49 [TRACE] [walkApply] Exiting eval tree: var.bucket
2020/07/10 16:25:49 [TRACE] vertex "var.region": evaluating
2020/07/10 16:25:49 [TRACE] vertex "provider.template": starting visit (*terraform.NodeApplyableProvider)
2020/07/10 16:25:49 [TRACE] [walkApply] Entering eval tree: var.region
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:49 [TRACE] dag/walk: visiting "var.profile"
2020/07/10 16:25:49 [TRACE] vertex "var.profile": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:49 [TRACE] dag/walk: visiting "var.ansible_pem_key"
2020/07/10 16:25:49 [TRACE] vertex "var.ansible_pem_key": starting visit (*terraform.NodeRootVariable)
2020/07/10 16:25:49 [TRACE] vertex "var.ansible_pem_key": evaluating
2020/07/10 16:25:49 [TRACE] [walkApply] Entering eval tree: var.ansible_pem_key
2020/07/10 16:25:49 [TRACE] [walkApply] Entering eval tree: var.key_name
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:49 [TRACE] [walkApply] Exiting eval tree: var.key_name
2020/07/10 16:25:49 [TRACE] vertex "var.key_name": visit complete
2020/07/10 16:25:49 [TRACE] vertex "var.bucket": visit complete
2020/07/10 16:25:49 [TRACE] vertex "provider.template": evaluating
2020/07/10 16:25:49 [TRACE] [walkApply] Entering eval tree: provider.template
2020/07/10 16:25:49 [TRACE] [walkApply] Exiting eval tree: var.region
2020/07/10 16:25:49 [TRACE] vertex "var.region": visit complete
2020/07/10 16:25:49 [TRACE] vertex "var.profile": evaluating
2020/07/10 16:25:49 [TRACE] [walkApply] Entering eval tree: var.profile
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:49 [TRACE] [walkApply] Exiting eval tree: var.ansible_pem_key
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:49 [TRACE] vertex "var.ansible_pem_key": visit complete
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:49 [TRACE] [walkApply] Exiting eval tree: var.profile
2020/07/10 16:25:49 [TRACE] vertex "var.profile": visit complete
2020/07/10 16:25:49 [TRACE] dag/walk: visiting "provider.aws"
2020/07/10 16:25:49 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2020/07/10 16:25:49 [TRACE] vertex "provider.aws": evaluating
2020/07/10 16:25:49 [TRACE] [walkApply] Entering eval tree: provider.aws
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-10T16:25:49.145+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:25:49.174+0100 [DEBUG] plugin: starting plugin: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 args=[/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4]
2020-07-10T16:25:49.178+0100 [DEBUG] plugin: plugin started: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 pid=4155
2020-07-10T16:25:49.178+0100 [DEBUG] plugin: waiting for RPC address: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4
2020-07-10T16:25:49.186+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:25:49.186+0100
2020-07-10T16:25:49.217+0100 [DEBUG] plugin: using plugin: version=5
2020-07-10T16:25:49.217+0100 [DEBUG] plugin.terraform-provider-template_v2.1.2_x4: plugin address: address=/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin771893534 network=unix timestamp=2020-07-10T16:25:49.217+0100
2020/07/10 16:25:49 [TRACE] BuiltinEvalContext: Initialized "template" provider for provider.template
2020/07/10 16:25:49 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:49 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-07-10T16:25:49.217+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:25:49.242+0100 [DEBUG] plugin: starting plugin: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 args=[/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4]
2020-07-10T16:25:49.250+0100 [DEBUG] plugin: plugin started: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 pid=4156
2020-07-10T16:25:49.251+0100 [DEBUG] plugin: waiting for RPC address: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4
2020-07-10T16:25:49.276+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:25:49.276+0100
2020-07-10T16:25:49.301+0100 [DEBUG] plugin: using plugin: version=5
2020-07-10T16:25:49.301+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: plugin address: address=/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin000252723 network=unix timestamp=2020-07-10T16:25:49.301+0100
2020/07/10 16:25:49 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2020/07/10 16:25:49 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:49 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/10 16:25:49 [TRACE] buildProviderConfig for provider.template: no configuration at all
2020/07/10 16:25:49 [TRACE] GRPCProvider: GetSchema
2020/07/10 16:25:49 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2020/07/10 16:25:49 [TRACE] GRPCProvider: GetSchema
2020/07/10 16:25:49 [TRACE] GRPCProvider: Configure
2020/07/10 16:25:49 [TRACE] [walkApply] Exiting eval tree: provider.template
2020/07/10 16:25:49 [TRACE] vertex "provider.template": visit complete
2020/07/10 16:25:49 [TRACE] dag/walk: visiting "data.template_file.registry-config (prepare state)"
2020/07/10 16:25:49 [TRACE] vertex "data.template_file.registry-config (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:49 [TRACE] dag/walk: visiting "data.template_cloudinit_config.init (prepare state)"
2020/07/10 16:25:49 [TRACE] vertex "data.template_file.registry-config (prepare state)": evaluating
2020/07/10 16:25:49 [TRACE] [walkApply] Entering eval tree: data.template_file.registry-config (prepare state)
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:49 [TRACE] [walkApply] Exiting eval tree: data.template_file.registry-config (prepare state)
2020/07/10 16:25:49 [TRACE] vertex "data.template_cloudinit_config.init (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:49 [TRACE] vertex "data.template_file.registry-config (prepare state)": visit complete
2020/07/10 16:25:49 [TRACE] vertex "data.template_cloudinit_config.init (prepare state)": evaluating
2020/07/10 16:25:49 [TRACE] [walkApply] Entering eval tree: data.template_cloudinit_config.init (prepare state)
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:49 [TRACE] [walkApply] Exiting eval tree: data.template_cloudinit_config.init (prepare state)
2020/07/10 16:25:49 [TRACE] vertex "data.template_cloudinit_config.init (prepare state)": visit complete
2020/07/10 16:25:49 [TRACE] dag/walk: visiting "provider.template (close)"
2020/07/10 16:25:49 [TRACE] vertex "provider.template (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/10 16:25:49 [TRACE] vertex "provider.template (close)": evaluating
2020/07/10 16:25:49 [TRACE] [walkApply] Entering eval tree: provider.template (close)
2020/07/10 16:25:49 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/10 16:25:49 [TRACE] GRPCProvider: Close
2020-07-10T16:25:49.306+0100 [DEBUG] plugin: plugin process exited: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-template_v2.1.2_x4 pid=4155
2020-07-10T16:25:49.306+0100 [DEBUG] plugin: plugin exited
2020/07/10 16:25:49 [TRACE] [walkApply] Exiting eval tree: provider.template (close)
2020/07/10 16:25:49 [TRACE] vertex "provider.template (close)": visit complete
2020/07/10 16:25:49 [TRACE] GRPCProvider: Configure
2020-07-10T16:25:49.397+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:49 [INFO] No assume_role block read from configuration
2020-07-10T16:25:49.397+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:49 [INFO] Building AWS auth structure
2020-07-10T16:25:49.397+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:49 [INFO] Setting AWS metadata API timeout to 100ms
2020-07-10T16:25:49.961+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:49 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2020-07-10T16:25:49.962+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:49 [INFO] Attempting to use session-derived credentials
2020-07-10T16:25:50.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:50 [INFO] Successfully derived credentials from session
2020-07-10T16:25:50.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:50 [INFO] AWS Auth provider used: "AssumeRoleProvider"
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:50 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:50 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: sts.amazonaws.com
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 43
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=69a0bba192219e7f7728c82143ee08ee2cd98c345da8f90bcde7a6a3387e529f
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152550Z
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=GetCallerIdentity&Version=2011-06-15
2020-07-10T16:25:50.589+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 475
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:50 GMT
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: a8d98ed7-c9af-4b26-b7e1-b23b02e2aa2e
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <GetCallerIdentityResult>
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <Arn>arn:aws:sts::904806826062:assumed-role/OrganizationEngineerAccessRole/1594394749962798000</Arn>
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <UserId>AROAIJZZV4UHAQVJ4UJ66:1594394749962798000</UserId>
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <Account>904806826062</Account>
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </GetCallerIdentityResult>
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>a8d98ed7-c9af-4b26-b7e1-b23b02e2aa2e</RequestId>
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </GetCallerIdentityResponse>
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: sts.amazonaws.com
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 43
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=c358193431693973b94233e56f62b62d376b1c73bd27cb2683173254310885b1
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152551Z
2020-07-10T16:25:51.100+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:51.101+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:51.101+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.101+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=GetCallerIdentity&Version=2011-06-15
2020-07-10T16:25:51.101+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 475
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:51 GMT
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: c6fd1d84-fae0-4c86-af20-3b2d879f197e
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <GetCallerIdentityResult>
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <Arn>arn:aws:sts::904806826062:assumed-role/OrganizationEngineerAccessRole/1594394749962798000</Arn>
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <UserId>AROAIJZZV4UHAQVJ4UJ66:1594394749962798000</UserId>
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <Account>904806826062</Account>
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </GetCallerIdentityResult>
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>c6fd1d84-fae0-4c86-af20-3b2d879f197e</RequestId>
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:51.671+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </GetCallerIdentityResponse>
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeAccountAttributes Details:
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 87
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=e1b89b990e650c33672c635c453f1e3958f8518f6ceb0f274ded18e54d6d1e34
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152551Z
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeAccountAttributes&AttributeName.1=supported-platforms&Version=2016-11-15
2020-07-10T16:25:51.673+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeAccountAttributes Details:
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 540
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:51 GMT
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: ab7940f0-1ba5-4033-b502-280dc72b30c9
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeAccountAttributesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>ab7940f0-1ba5-4033-b502-280dc72b30c9</requestId>
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <accountAttributeSet>
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <attributeName>supported-platforms</attributeName>
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <attributeValueSet>
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <attributeValue>VPC</attributeValue>
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </attributeValueSet>
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: provider.aws
2020/07/10 16:25:51 [TRACE] vertex "provider.aws": visit complete
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </accountAttributeSet>
2020-07-10T16:25:51.870+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeAccountAttributesResponse>
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.bucket-subdirs (prepare state)"
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-subdirs (prepare state)"
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_s3_bucket.encrypted (prepare state)"
2020/07/10 16:25:51 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] vertex "aws_s3_bucket.encrypted (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_key_pair.main (prepare state)"
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_iam_instance_profile.main (prepare state)"
2020/07/10 16:25:51 [TRACE] vertex "aws_key_pair.main (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.default (prepare state)"
2020/07/10 16:25:51 [TRACE] vertex "aws_key_pair.main (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] vertex "data.aws_iam_policy_document.default (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_key_pair.main (prepare state)
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_instance_profile.main (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_instance.main (prepare state)"
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_security_group.allow-registry-ingress (prepare state)"
2020/07/10 16:25:51 [TRACE] vertex "aws_instance.main (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_instance_profile.main (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] vertex "aws_security_group.allow-registry-ingress (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_iam_instance_profile.main (prepare state)
2020/07/10 16:25:51 [TRACE] vertex "aws_security_group.allow-registry-ingress (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_security_group.allow-registry-ingress (prepare state)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_security_group.allow-ssh-and-egress (prepare state)"
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: aws_security_group.allow-registry-ingress (prepare state)
2020/07/10 16:25:51 [TRACE] vertex "aws_security_group.allow-ssh-and-egress (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] vertex "aws_security_group.allow-registry-ingress (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] vertex "aws_security_group.allow-ssh-and-egress (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 16:25:51 [TRACE] vertex "aws_security_group.allow-ssh-and-egress (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: aws_iam_instance_profile.main (prepare state)
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_instance_profile.main (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "data.aws_ami.ubuntu (prepare state)"
2020/07/10 16:25:51 [TRACE] vertex "data.aws_ami.ubuntu (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] vertex "data.aws_ami.ubuntu (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_iam_role.main (prepare state)"
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_role.main (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_role.main (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_iam_role.main (prepare state)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "data.aws_vpc.main (prepare state)"
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: aws_iam_role.main (prepare state)
2020/07/10 16:25:51 [TRACE] vertex "data.aws_vpc.main (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_role.main (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] vertex "data.aws_vpc.main (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_iam_instance_profile.main"
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_instance_profile.main": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-root (prepare state)"
2020/07/10 16:25:51 [TRACE] vertex "data.aws_iam_policy_document.bucket-subdirs (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] vertex "aws_s3_bucket.encrypted (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_instance_profile.main": evaluating
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_s3_bucket.encrypted (prepare state)
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_iam_instance_profile.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_s3_bucket_policy.main (prepare state)"
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: aws_s3_bucket.encrypted (prepare state)
2020/07/10 16:25:51 [TRACE] vertex "aws_s3_bucket_policy.main (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] vertex "aws_s3_bucket.encrypted (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] vertex "aws_s3_bucket_policy.main (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.bucket-root (prepare state)"
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_s3_bucket_policy.main (prepare state)
2020/07/10 16:25:51 [TRACE] vertex "data.aws_iam_policy_document.bucket-root (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] vertex "aws_instance.main (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_instance.main (prepare state)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: aws_instance.main (prepare state)
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: data.aws_ami.ubuntu (prepare state)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: data.aws_ami.ubuntu (prepare state)
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: data.aws_vpc.main (prepare state)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_role_policy.bucket-root (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: data.aws_vpc.main (prepare state)
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_role_policy.bucket-root (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] vertex "data.aws_vpc.main (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 16:25:51 [TRACE] vertex "aws_security_group.allow-registry-ingress": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_role_policy.bucket-root (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:51 [TRACE] vertex "data.aws_iam_policy_document.default (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: data.aws_iam_policy_document.default (prepare state)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: aws_key_pair.main (prepare state)
2020/07/10 16:25:51 [TRACE] vertex "data.aws_iam_policy_document.bucket-root (prepare state)": evaluating
2020/07/10 16:25:51 [TRACE] vertex "aws_key_pair.main (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: aws_s3_bucket_policy.main (prepare state)
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_key_pair.main"
2020/07/10 16:25:51 [TRACE] vertex "aws_s3_bucket_policy.main (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] vertex "aws_key_pair.main": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_s3_bucket_policy.main"
2020/07/10 16:25:51 [TRACE] vertex "aws_s3_bucket_policy.main": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/10 16:25:51 [TRACE] vertex "aws_key_pair.main": evaluating
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_key_pair.main
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] vertex "data.aws_ami.ubuntu (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": evaluating
2020/07/10 16:25:51 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:51 [TRACE] vertex "aws_security_group.allow-registry-ingress": evaluating
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:51 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": evaluating
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_security_group.allow-registry-ingress
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: data.aws_iam_policy_document.default (prepare state)
2020/07/10 16:25:51 [TRACE] vertex "data.aws_iam_policy_document.default (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_key_pair.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] [walkApply] Exiting eval tree: data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] vertex "data.aws_iam_policy_document.bucket-root (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_key_pair.main
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_key_pair.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] dag/walk: visiting "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:51 [TRACE] vertex "aws_instance.main (prepare state)": visit complete
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_role_policy.bucket-root": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/10 16:25:51 [TRACE] vertex "aws_iam_role_policy.bucket-root": evaluating
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_iam_role_policy.bucket-root
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:51 [TRACE] vertex "aws_s3_bucket_policy.main": evaluating
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:51 [TRACE] [walkApply] Entering eval tree: aws_s3_bucket_policy.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_key_pair.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy.bucket-root
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.allow-registry-ingress
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_s3_bucket_policy.main
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_security_group.allow-registry-ingress
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_s3_bucket_policy.main
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_s3_bucket_policy.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_s3_bucket_policy.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_security_group.allow-registry-ingress
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_instance_profile.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_iam_instance_profile.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_iam_instance_profile.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_iam_role_policy.bucket-root
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_iam_role_policy.bucket-root
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_instance_profile.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy.bucket-root
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:51 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.allow-registry-ingress
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:51 [TRACE] Re-validating config for "aws_key_pair.main"
2020/07/10 16:25:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:51 [TRACE] Re-validating config for "aws_s3_bucket_policy.main"
2020/07/10 16:25:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:51 [TRACE] Re-validating config for "aws_iam_instance_profile.main"
2020/07/10 16:25:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:51 [TRACE] Re-validating config for "aws_iam_role_policy.bucket-subdirs"
2020/07/10 16:25:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:51 [TRACE] Re-validating config for "aws_iam_role_policy.bucket-root"
2020/07/10 16:25:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:51 [TRACE] Re-validating config for "aws_security_group.allow-ssh-and-egress"
2020/07/10 16:25:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:51 [TRACE] Re-validating config for "aws_security_group.allow-registry-ingress"
2020/07/10 16:25:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:51 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:51 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:51 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:51 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:51 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:51 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:51 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/10 16:25:51 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/10 16:25:51 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/10 16:25:51 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/10 16:25:51 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/10 16:25:51 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_iam_instance_profile.main
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_s3_bucket_policy.main
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_s3_bucket_policy.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_iam_instance_profile.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/10 16:25:51 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:51 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_iam_role_policy.bucket-root
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_key_pair.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_key_pair.main
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_iam_role_policy.bucket-root
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/10 16:25:51 [DEBUG] aws_key_pair.main: applying the planned Create change
2020/07/10 16:25:51 [TRACE] GRPCProvider: ApplyResourceChange
2020/07/10 16:25:51 [DEBUG] aws_iam_instance_profile.main: applying the planned Create change
2020/07/10 16:25:51 [TRACE] GRPCProvider: ApplyResourceChange
2020/07/10 16:25:51 [DEBUG] aws_s3_bucket_policy.main: applying the planned Create change
2020/07/10 16:25:51 [TRACE] GRPCProvider: ApplyResourceChange
2020/07/10 16:25:51 [DEBUG] aws_iam_role_policy.bucket-root: applying the planned Create change
2020/07/10 16:25:51 [TRACE] GRPCProvider: ApplyResourceChange
2020/07/10 16:25:51 [DEBUG] aws_iam_role_policy.bucket-subdirs: applying the planned Create change
2020/07/10 16:25:51 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-10T16:25:51.877+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] S3 bucket: pipeline-docker-registry-bucket, put policy: {
2020-07-10T16:25:51.877+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     "Statement": [
2020-07-10T16:25:51.877+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         {
2020-07-10T16:25:51.877+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Action": [
2020/07/10 16:25:51 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})})
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/10 16:25:51 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020-07-10T16:25:51.877+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:PutObject",
2020-07-10T16:25:51.877+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:GetObject",
2020-07-10T16:25:51.877+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:DeleteObject",
2020-07-10T16:25:51.877+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:ListMultipartUploadParts",
2020-07-10T16:25:51.877+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:AbortMultipartUpload"
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020-07-10T16:25:51.877+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             ],
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Effect": "Allow",
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Principal": {
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "AWS": "arn:aws:iam::904806826062:role/default"
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             },
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Resource": "arn:aws:s3:::pipeline-docker-registry-bucket/*",
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Sid": "AddCannedAcl"
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         },
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         {
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Action": [
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:ListBucket",
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:GetBucketLocation",
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:ListBucketMultipartUploads"
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/10 16:25:51 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             ],
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Effect": "Allow",
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/10 16:25:51 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Principal": {
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "AWS": "arn:aws:iam::904806826062:role/default"
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             },
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Resource": "arn:aws:s3:::pipeline-docker-registry-bucket"
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         }
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     ],
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     "Version": "2012-10-17"
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: }
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] setting computed for "roles" from ComputedKeys
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] DEBUG: Request iam/PutRolePolicy Details:
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: iam.amazonaws.com
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 528
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=a8721ba9b78c34a5d88219b0d6e22fdf91daa1c3625e6b44bdb6f38523cb86f7
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152551Z
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=PutRolePolicy&PolicyDocument=%7B%0A++%22Version%22%3A+%222012-10-17%22%2C%0A++%22Statement%22%3A+%5B%0A++++%7B%0A++++++%22Sid%22%3A+%22%22%2C%0A++++++%22Effect%22%3A+%22Allow%22%2C%0A++++++%22Action%22%3A+%5B%0A++++++++%22s3%3AListBucketMultipartUploads%22%2C%0A++++++++%22s3%3AListBucket%22%2C%0A++++++++%22s3%3AGetBucketLocation%22%0A++++++%5D%2C%0A++++++%22Resource%22%3A+%22arn%3Aaws%3As3%3A%3A%3Apipeline-docker-registry-bucket%22%0A++++%7D%0A++%5D%0A%7D&PolicyName=bucket-root-s3&RoleName=default&Version=2010-05-08
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/ImportKeyPair Details:
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 1095
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=bb0183c510927bf00d8b5b5cf2ec8c6d4290cc4af1f37f27ff0b3443cf5fef78
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152551Z
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=ImportKeyPair&KeyName=sample-key20200710152551876800000001&PublicKeyMaterial=c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFDQVFERlVnSWNJd2hvS01QM1loR0tTQzlMcFJJVm1kckNQSnVNN3NaM01mek9CdkE3dXVEY3hRcGl2R0JJRDBxekxHZWhHYlI2YysxblgxQitRb25KVDNicTd3ckIwQjBMdTBvR1RJVU5WVnBEUXphRkpiczkwVGVuY0Fqem5kWmY1ajdvazNaNUF6K1NmYVIyWDdyNzBkTzhnazE1bVJOaWlYWWZYcDNnd1JzR0NsUmh5bnZlaDU0VWFVdW1pcUQ3aGE4Z3gvL1JvM0tsVGswUVNha05hd1BWeEJVVUNjWm0wUFR0aFcrRjdxNExaa0ZmM0lsczNkREd0V2ZiOGRwa2k0MWxOMDErb3d0a0dsQ0lQN0k0MGMxSm4rQ1ZDanE3UjdlZHRVNFgvMStYU3dmZjlWRGJwd1BXc1o5U3RDMUdHN2ZGSkhaR1kvcnN1blgvSXFBTmxLTVYwa2ExWTRMVERnNjRGNFFwUzNlZnpkL3NPcW9aZ0tOQzZDYVg0M3ZJdU85djFtWFBXQzMyVWlOR1BoRWd0bDhQeVhHeGJPTjdzUFZMZjlyeFJZb0JVTSszWG9XZGwreUdZWVNxbUtra3VTYytmTDhMTU5aU01YUHRzY1ZNRzVqMVpDZ2JaNGJ0R3VTcWlHNUxNUERCRlhBWUFFU1ZaaEdtR1ZmbzFBQjk0UXA0ZFBwcnRjNU9DQjRJSzFjbDNINS9YRXRHTGY2Vm9JZnhIWnk4UFp4dUl6ay9kUEVSYWJkRE5HK2UyVFd2VERXaUpQd1A4bFlYNmZUb2pPK25meElKUmVUdG5vOHJndGFFTjNmVTVMdEdkSnVmUnRVdXZlY0l0aWtXZDUrWGVDcHowYzJZUG1VckEraTh4NWYvdXhueEhaeURDUzhPVjRHN1RCUXhGVW93M1E9PSB0ZXN0QG9wcy50aXBzCg%3D%3D&Version=2016-11-15
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] DEBUG: Request iam/PutRolePolicy Details:
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: iam.amazonaws.com
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 608
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=ce512480a1315ff07661f48c5b599e67818e0f8c8126707a862dc8da1f0a5c42
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:51 [TRACE] EvalReadState: reading state for aws_security_group.allow-registry-ingress
2020-07-10T16:25:51.878+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152551Z
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020/07/10 16:25:51 [TRACE] EvalReadState: no state present for aws_security_group.allow-registry-ingress
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=PutRolePolicy&PolicyDocument=%7B%0A++%22Version%22%3A+%222012-10-17%22%2C%0A++%22Statement%22%3A+%5B%0A++++%7B%0A++++++%22Sid%22%3A+%22%22%2C%0A++++++%22Effect%22%3A+%22Allow%22%2C%0A++++++%22Action%22%3A+%5B%0A++++++++%22s3%3APutObject%22%2C%0A++++++++%22s3%3AListMultipartUploadParts%22%2C%0A++++++++%22s3%3AGetObject%22%2C%0A++++++++%22s3%3ADeleteObject%22%2C%0A++++++++%22s3%3AAbortMultipartUpload%22%0A++++++%5D%2C%0A++++++%22Resource%22%3A+%22arn%3Aaws%3As3%3A%3A%3Apipeline-docker-registry-bucket%2F%2A%22%0A++++%7D%0A++%5D%0A%7D&PolicyName=bucket-subdirs-s3&RoleName=default&Version=2010-05-08
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] DEBUG: Request iam/CreateInstanceProfile Details:
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: iam.amazonaws.com
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:51 [DEBUG] aws_security_group.allow-ssh-and-egress: applying the planned Create change
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 93
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=fa96a81b54b25cde3511962f25bb7f8b4a0061797c43b0c387f925e45692d7fd
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152551Z
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=CreateInstanceProfile&InstanceProfileName=instance-profile&Path=%2F&Version=2010-05-08
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] DEBUG: Request s3/PutBucketPolicy Details:
2020/07/10 16:25:51 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: PUT /?policy= HTTP/1.1
2020/07/10 16:25:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020/07/10 16:25:51 [TRACE] <root>: eval: *terraform.EvalApply
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 939
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/s3/aws4_request, SignedHeaders=content-length;content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=c5b23f7faf1ba3f5eb28528ad738c0d88389d426c18468b28cabb46089d3c946
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Md5: dp6QAZ2WiNofiuZQCr1zSQ==
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Content-Sha256: a5b975a73627eba6898e85823c3510433baba15b22d6d6a3a9142b916160cb72
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152551Z
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: {
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     "Statement": [
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         {
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Action": [
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:PutObject",
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:GetObject",
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:DeleteObject",
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:ListMultipartUploadParts",
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:AbortMultipartUpload"
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             ],
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Effect": "Allow",
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Principal": {
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "AWS": "arn:aws:iam::904806826062:role/default"
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             },
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Resource": "arn:aws:s3:::pipeline-docker-registry-bucket/*",
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Sid": "AddCannedAcl"
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         },
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         {
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Action": [
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:ListBucket",
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:GetBucketLocation",
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "s3:ListBucketMultipartUploads"
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             ],
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Effect": "Allow",
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Principal": {
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 "AWS": "arn:aws:iam::904806826062:role/default"
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             },
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             "Resource": "arn:aws:s3:::pipeline-docker-registry-bucket"
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         }
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     ],
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     "Version": "2012-10-17"
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: }
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.879+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020/07/10 16:25:51 [DEBUG] aws_security_group.allow-registry-ingress: applying the planned Create change
2020/07/10 16:25:51 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-10T16:25:51.880+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] Security Group create configuration: {
2020-07-10T16:25:51.880+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Description: "Allows ingress SSH traffic and egress to any address.",
2020-07-10T16:25:51.880+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   GroupName: "allow-ssh-and-egress",
2020-07-10T16:25:51.880+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   VpcId: "vpc-b31026da"
2020-07-10T16:25:51.880+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: }
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 166
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=756fb32b6e0fcaa3c710c29a927d2039c391f30c59d3560676b9a1068c8d2363
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152551Z
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=CreateSecurityGroup&GroupDescription=Allows+ingress+SSH+traffic+and+egress+to+any+address.&GroupName=allow-ssh-and-egress&Version=2016-11-15&VpcId=vpc-b31026da
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:51.881+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] setting computed for "egress" from ComputedKeys
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] Security Group create configuration: {
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Description: "Allows ingress SSH traffic and egress to any address.",
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   GroupName: "allow-registry-ingress",
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   VpcId: "vpc-b31026da"
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: }
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:51 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 168
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=f3e88715cefd7aba5413852aa561ce91d5da28b9da433795958b4bf87f4b7802
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152551Z
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=CreateSecurityGroup&GroupDescription=Allows+ingress+SSH+traffic+and+egress+to+any+address.&GroupName=allow-registry-ingress&Version=2016-11-15&VpcId=vpc-b31026da
2020-07-10T16:25:51.882+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/ImportKeyPair Details:
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 395
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:51 GMT
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: e9e73e77-1443-492d-9d51-9aee58407a58
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <ImportKeyPairResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>e9e73e77-1443-492d-9d51-9aee58407a58</requestId>
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <keyName>sample-key20200710152551876800000001</keyName>
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <keyPairId>key-022540913991cb509</keyPairId>
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <keyFingerprint>7f:b8:7b:ad:7e:55:5a:21:be:bc:c3:d0:75:23:35:d4</keyFingerprint>
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </ImportKeyPairResponse>
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeKeyPairs Details:
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 89
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=ca5dd08db96597c43cf5dbb5eaaaaba96bc73f90ef337f2797e0e6c57a74ee4e
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152552Z
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeKeyPairs&KeyName.1=sample-key20200710152551876800000001&Version=2016-11-15
2020-07-10T16:25:52.158+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.182+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2020-07-10T16:25:52.182+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:52.182+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:52.182+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:52.182+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 283
2020-07-10T16:25:52.182+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:52.182+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:51 GMT
2020-07-10T16:25:52.182+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:52.182+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: d75956d7-f831-4114-b385-a8150cf28bdf
2020-07-10T16:25:52.182+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>d75956d7-f831-4114-b385-a8150cf28bdf</requestId>
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <return>true</return>
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </CreateSecurityGroupResponse>
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [INFO] Security Group ID: sg-06f7dddb3983ea1eb
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] Waiting for Security Group (sg-06f7dddb3983ea1eb) to exist
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] Waiting for state to become: [exists]
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 79
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=19724901ddc1cff96ab0532d577abbe002d1a3c471e16b6fb6427d5900a1c10d
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152552Z
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeSecurityGroups&GroupId.1=sg-06f7dddb3983ea1eb&Version=2016-11-15
2020-07-10T16:25:52.183+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.215+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2020-07-10T16:25:52.215+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:52.215+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 283
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:51 GMT
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 7f2ebbaf-912e-4556-b796-4e21093bb179
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>7f2ebbaf-912e-4556-b796-4e21093bb179</requestId>
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <return>true</return>
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </CreateSecurityGroupResponse>
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [INFO] Security Group ID: sg-0d7af5cbbf39093fe
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] Waiting for Security Group (sg-0d7af5cbbf39093fe) to exist
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] Waiting for state to become: [exists]
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 79
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=2ab7a5518d48276a6df66bb614dd50132a9649e8520b5de57f4031dfedbeb167
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152552Z
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeSecurityGroups&GroupId.1=sg-0d7af5cbbf39093fe&Version=2016-11-15
2020-07-10T16:25:52.216+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeKeyPairs Details:
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 505
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:51 GMT
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: f9d0f13a-d17d-4902-947c-5294789bed47
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeKeyPairsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>f9d0f13a-d17d-4902-947c-5294789bed47</requestId>
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <keySet>
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <keyName>sample-key20200710152551876800000001</keyName>
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <keyPairId>key-022540913991cb509</keyPairId>
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <keyFingerprint>7f:b8:7b:ad:7e:55:5a:21:be:bc:c3:d0:75:23:35:d4</keyFingerprint>
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <tagSet/>
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </keySet>
2020-07-10T16:25:52.448+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeKeyPairsResponse>
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:52 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.main
2020/07/10 16:25:52 [TRACE] EvalWriteState: writing current state object for aws_key_pair.main
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:52 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.main
2020/07/10 16:25:52 [TRACE] EvalWriteState: writing current state object for aws_key_pair.main
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:25:52 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2020/07/10 16:25:52 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 174
2020/07/10 16:25:52 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/10 16:25:52 [TRACE] [walkApply] Exiting eval tree: aws_key_pair.main
2020/07/10 16:25:52 [TRACE] vertex "aws_key_pair.main": visit complete
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Response iam/CreateInstanceProfile Details:
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 630
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 2681408c-058b-4469-a336-b04dff93d507
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] <CreateInstanceProfileResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <CreateInstanceProfileResult>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <InstanceProfile>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <Path>/</Path>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <InstanceProfileName>instance-profile</InstanceProfileName>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <Roles/>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <Arn>arn:aws:iam::904806826062:instance-profile/instance-profile</Arn>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <InstanceProfileId>AIPA5FKVQQBHP5UHK555Z</InstanceProfileId>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <CreateDate>2020-07-10T15:25:52Z</CreateDate>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </InstanceProfile>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </CreateInstanceProfileResult>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>2681408c-058b-4469-a336-b04dff93d507</RequestId>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </CreateInstanceProfileResponse>
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetInstanceProfile Details:
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: iam.amazonaws.com
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io) Waiter
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 81
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=3dbd411626d805d45f1e9a3ac658ff88f9fc8cbcf559cf68fee3174f007b65fc
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152552Z
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=GetInstanceProfile&InstanceProfileName=instance-profile&Version=2010-05-08
2020-07-10T16:25:52.482+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Response iam/PutRolePolicy Details:
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 206
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 20328add-c877-4797-bf22-5ca9c5fed9fb
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] <PutRolePolicyResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>20328add-c877-4797-bf22-5ca9c5fed9fb</RequestId>
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </PutRolePolicyResponse>
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetRolePolicy Details:
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: iam.amazonaws.com
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 82
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=2993991bff37e5a5cada3c2f9b6ab2ba8c2970b70a4d52d5aadf8135c9efa11e
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152552Z
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=GetRolePolicy&PolicyName=bucket-root-s3&RoleName=default&Version=2010-05-08
2020-07-10T16:25:52.483+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Response iam/PutRolePolicy Details:
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 206
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 97ec021a-29a4-4c7b-b92c-e833eb5f1f0e
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] <PutRolePolicyResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>97ec021a-29a4-4c7b-b92c-e833eb5f1f0e</RequestId>
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </PutRolePolicyResponse>
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetRolePolicy Details:
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: iam.amazonaws.com
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 85
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=b67511e10c6cda18861489e999761f2ef41b574d7fc0e77548f4e03847b5893a
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152552Z
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=GetRolePolicy&PolicyName=bucket-subdirs-s3&RoleName=default&Version=2010-05-08
2020-07-10T16:25:52.494+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 1068
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: fed98a72-91a7-4917-87a7-183a0192f17a
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>fed98a72-91a7-4917-87a7-183a0192f17a</requestId>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <securityGroupInfo>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ownerId>904806826062</ownerId>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupName>allow-ssh-and-egress</groupName>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupDescription>Allows ingress SSH traffic and egress to any address.</groupDescription>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ipPermissions/>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ipPermissionsEgress>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipProtocol>-1</ipProtocol>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groups/>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipRanges>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <cidrIp>0.0.0.0/0</cidrIp>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ipRanges>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipv6Ranges/>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <prefixListIds/>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </ipPermissionsEgress>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </securityGroupInfo>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeSecurityGroupsResponse>
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateTags Details:
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 118
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=1f98b2d6cae5f7866b3b96d5f2cec991945b9dac341d330bf3fa22dc29fbd73e
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152552Z
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=CreateTags&ResourceId.1=sg-06f7dddb3983ea1eb&Tag.1.Key=Name&Tag.1.Value=allow_ssh-and-egress&Version=2016-11-15
2020-07-10T16:25:52.496+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 1070
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: cc5c7f09-15d9-4c98-9914-8f7e36439692
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>cc5c7f09-15d9-4c98-9914-8f7e36439692</requestId>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <securityGroupInfo>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ownerId>904806826062</ownerId>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupName>allow-registry-ingress</groupName>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupDescription>Allows ingress SSH traffic and egress to any address.</groupDescription>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ipPermissions/>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ipPermissionsEgress>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipProtocol>-1</ipProtocol>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groups/>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipRanges>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <cidrIp>0.0.0.0/0</cidrIp>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ipRanges>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipv6Ranges/>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <prefixListIds/>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </ipPermissionsEgress>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </securityGroupInfo>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeSecurityGroupsResponse>
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateTags Details:
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 120
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=220c487edaad2925acfdb99b3e6166f29637d12f49329dbf541c4d1bb79bc107
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152552Z
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=CreateTags&ResourceId.1=sg-0d7af5cbbf39093fe&Tag.1.Key=Name&Tag.1.Value=allow_registry-ingress&Version=2016-11-15
2020-07-10T16:25:52.504+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.764+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateTags Details:
2020-07-10T16:25:52.764+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:52.764+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:52.764+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:52.764+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 221
2020-07-10T16:25:52.764+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:52.764+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:52.764+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:52.764+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 079998ab-bf8f-4a93-97b7-77653ad347d5
2020-07-10T16:25:52.764+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.764+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.764+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <CreateTagsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>079998ab-bf8f-4a93-97b7-77653ad347d5</requestId>
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <return>true</return>
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </CreateTagsResponse>
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] Revoking default egress rule for Security Group for sg-0d7af5cbbf39093fe
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 208
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=de36fedb1813b989cd4a7cef07bc20262619ea5a04dcbeed31549ffb3bf93178
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152552Z
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=RevokeSecurityGroupEgress&GroupId=sg-0d7af5cbbf39093fe&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2020-07-10T16:25:52.765+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.772+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Response s3/PutBucketPolicy Details:
2020-07-10T16:25:52.772+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:52.772+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 204 No Content
2020-07-10T16:25:52.772+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:52.772+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 0
2020-07-10T16:25:52.772+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:53 GMT
2020-07-10T16:25:52.772+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonS3
2020-07-10T16:25:52.772+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Id-2: jPfOtaUPrQy3LCTNc3GDdTexD4Ba5oUtGT9D1IkhU0cADAOYnHUG4mTz5cYq05V/tMSkrrgsd+s=
2020-07-10T16:25:52.772+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Request-Id: F49C7A76CDF1AC15
2020-07-10T16:25:52.772+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.772+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.772+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.772+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] 
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:52 [TRACE] EvalWriteState: recording 1 dependencies for aws_s3_bucket_policy.main
2020/07/10 16:25:52 [TRACE] EvalWriteState: writing current state object for aws_s3_bucket_policy.main
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:52 [TRACE] EvalWriteState: recording 1 dependencies for aws_s3_bucket_policy.main
2020/07/10 16:25:52 [TRACE] EvalWriteState: writing current state object for aws_s3_bucket_policy.main
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/10 16:25:52 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:25:52 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2020/07/10 16:25:52 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 175
2020/07/10 16:25:52 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateTags Details:
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 221
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 6a1045c0-4371-42ad-8770-962db3b71c68
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <CreateTagsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>6a1045c0-4371-42ad-8770-962db3b71c68</requestId>
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <return>true</return>
2020-07-10T16:25:52.782+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </CreateTagsResponse>
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] Revoking default egress rule for Security Group for sg-06f7dddb3983ea1eb
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 208
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=434e20c1d94a58ce5824454cd53623efe5e90948eb0ce82448521a404d8c554d
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152552Z
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=RevokeSecurityGroupEgress&GroupId=sg-06f7dddb3983ea1eb&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2020-07-10T16:25:52.783+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020/07/10 16:25:52 [TRACE] [walkApply] Exiting eval tree: aws_s3_bucket_policy.main
2020/07/10 16:25:52 [TRACE] vertex "aws_s3_bucket_policy.main": visit complete
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetRolePolicy Details:
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 948
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: bed5c20f-3cbb-40b1-99f8-4fedb8b32ae7
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] <GetRolePolicyResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <GetRolePolicyResult>
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <PolicyDocument>%7B%0A%20%20%22Version%22%3A%20%222012-10-17%22%2C%0A%20%20%22Statement%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22Sid%22%3A%20%22%22%2C%0A%20%20%20%20%20%20%22Effect%22%3A%20%22Allow%22%2C%0A%20%20%20%20%20%20%22Action%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%22s3%3AListBucketMultipartUploads%22%2C%0A%20%20%20%20%20%20%20%20%22s3%3AListBucket%22%2C%0A%20%20%20%20%20%20%20%20%22s3%3AGetBucketLocation%22%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%22Resource%22%3A%20%22arn%3Aaws%3As3%3A%3A%3Apipeline-docker-registry-bucket%22%0A%20%20%20%20%7D%0A%20%20%5D%0A%7D</PolicyDocument>
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <PolicyName>bucket-root-s3</PolicyName>
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RoleName>default</RoleName>
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </GetRolePolicyResult>
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>bed5c20f-3cbb-40b1-99f8-4fedb8b32ae7</RequestId>
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:53.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </GetRolePolicyResponse>
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:53 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_role_policy.bucket-root
2020/07/10 16:25:53 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy.bucket-root
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:53 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_role_policy.bucket-root
2020/07/10 16:25:53 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy.bucket-root
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:25:53 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2020/07/10 16:25:53 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 176
2020/07/10 16:25:53 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/10 16:25:53 [TRACE] [walkApply] Exiting eval tree: aws_iam_role_policy.bucket-root
2020/07/10 16:25:53 [TRACE] vertex "aws_iam_role_policy.bucket-root": visit complete
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 251
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: f37f534d-de30-48b3-81e3-7b1f13aa7737
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:53.036+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>f37f534d-de30-48b3-81e3-7b1f13aa7737</requestId>
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <return>true</return>
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </RevokeSecurityGroupEgressResponse>
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetRolePolicy Details:
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 1060
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: e492b202-a4af-498e-8237-d9571fddd316
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-0d7af5cbbf39093fe
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] <GetRolePolicyResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <GetRolePolicyResult>
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <PolicyDocument>%7B%0A%20%20%22Version%22%3A%20%222012-10-17%22%2C%0A%20%20%22Statement%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22Sid%22%3A%20%22%22%2C%0A%20%20%20%20%20%20%22Effect%22%3A%20%22Allow%22%2C%0A%20%20%20%20%20%20%22Action%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%22s3%3APutObject%22%2C%0A%20%20%20%20%20%20%20%20%22s3%3AListMultipartUploadParts%22%2C%0A%20%20%20%20%20%20%20%20%22s3%3AGetObject%22%2C%0A%20%20%20%20%20%20%20%20%22s3%3ADeleteObject%22%2C%0A%20%20%20%20%20%20%20%20%22s3%3AAbortMultipartUpload%22%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%22Resource%22%3A%20%22arn%3Aaws%3As3%3A%3A%3Apipeline-docker-registry-bucket%2F%2A%22%0A%20%20%20%20%7D%0A%20%20%5D%0A%7D</PolicyDocument>
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <PolicyName>bucket-subdirs-s3</PolicyName>
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RoleName>default</RoleName>
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </GetRolePolicyResult>
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>e492b202-a4af-498e-8237-d9571fddd316</RequestId>
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </GetRolePolicyResponse>
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:53 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:53 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy.bucket-subdirs
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalWriteState
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020/07/10 16:25:53 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:53 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy.bucket-subdirs
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 211
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=9f4f921c121b114e2b07b41c494c9361fe1e1914cf162b50bb8844b4855063ca
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152553Z
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalIf
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=RevokeSecurityGroupEgress&GroupId=sg-0d7af5cbbf39093fe&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2020-07-10T16:25:53.037+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:25:53 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2020/07/10 16:25:53 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 177
2020/07/10 16:25:53 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetInstanceProfile Details:
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 618
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 4467b255-9ced-462a-9c8e-043fc98b47c9
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] <GetInstanceProfileResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <GetInstanceProfileResult>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <InstanceProfile>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <Path>/</Path>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <InstanceProfileName>instance-profile</InstanceProfileName>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <Roles/>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <Arn>arn:aws:iam::904806826062:instance-profile/instance-profile</Arn>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <InstanceProfileId>AIPA5FKVQQBHP5UHK555Z</InstanceProfileId>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       <CreateDate>2020-07-10T15:25:52Z</CreateDate>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </InstanceProfile>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </GetInstanceProfileResult>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>4467b255-9ced-462a-9c8e-043fc98b47c9</RequestId>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </GetInstanceProfileResponse>
2020-07-10T16:25:53.042+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Request iam/AddRoleToInstanceProfile Details:
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: iam.amazonaws.com
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 104
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=c31a9c1fdc7e687cc2fbd8362ec67a0b4c86cf6ee0253035e0aeed92ad956d63
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152553Z
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=AddRoleToInstanceProfile&InstanceProfileName=instance-profile&RoleName=default&Version=2010-05-08
2020-07-10T16:25:53.043+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020/07/10 16:25:53 [TRACE] [walkApply] Exiting eval tree: aws_iam_role_policy.bucket-subdirs
2020/07/10 16:25:53 [TRACE] vertex "aws_iam_role_policy.bucket-subdirs": visit complete
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 251
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 4e4fb03d-3842-456e-973b-7e9f7e430e43
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>4e4fb03d-3842-456e-973b-7e9f7e430e43</requestId>
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <return>true</return>
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </RevokeSecurityGroupEgressResponse>
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-06f7dddb3983ea1eb
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 211
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=8d86fc79ba552bd8db5c552b1b698350024f20c7481af009c7a7b24f6a1b651c
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152553Z
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=RevokeSecurityGroupEgress&GroupId=sg-06f7dddb3983ea1eb&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2020-07-10T16:25:53.124+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 251
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 26de86f3-0eff-4002-a27d-1f2f3e84d3d1
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>26de86f3-0eff-4002-a27d-1f2f3e84d3d1</requestId>
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <return>true</return>
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </RevokeSecurityGroupEgressResponse>
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] Waiting for Security Group (sg-0d7af5cbbf39093fe) to exist
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] Waiting for state to become: [exists]
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 79
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=3acc2ff352a4365e76f06f6fd6cf91e8394ff6607b960a7dd8a08992a4586646
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152553Z
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeSecurityGroups&GroupId.1=sg-0d7af5cbbf39093fe&Version=2016-11-15
2020-07-10T16:25:53.347+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 251
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: dc39324a-c168-4aab-9d26-f7b8c8325e06
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>dc39324a-c168-4aab-9d26-f7b8c8325e06</requestId>
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <return>true</return>
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </RevokeSecurityGroupEgressResponse>
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] Waiting for Security Group (sg-06f7dddb3983ea1eb) to exist
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] Waiting for state to become: [exists]
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 79
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=0e8d6d25b9d44f1e68f10957e89638876737c3ac8956210b45c796dcbf12efc6
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152553Z
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeSecurityGroups&GroupId.1=sg-06f7dddb3983ea1eb&Version=2016-11-15
2020-07-10T16:25:53.353+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Response iam/AddRoleToInstanceProfile Details:
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 228
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:52 GMT
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: d3046f7a-467d-4c33-8dfc-7162281288f3
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] <AddRoleToInstanceProfileResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   <ResponseMetadata>
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <RequestId>d3046f7a-467d-4c33-8dfc-7162281288f3</RequestId>
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   </ResponseMetadata>
2020-07-10T16:25:53.611+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </AddRoleToInstanceProfileResponse>
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:53 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_instance_profile.main
2020/07/10 16:25:53 [TRACE] EvalWriteState: writing current state object for aws_iam_instance_profile.main
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:53 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_instance_profile.main
2020/07/10 16:25:53 [TRACE] EvalWriteState: writing current state object for aws_iam_instance_profile.main
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/10 16:25:53 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:25:53 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2020/07/10 16:25:53 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 178
2020/07/10 16:25:53 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/10 16:25:53 [TRACE] [walkApply] Exiting eval tree: aws_iam_instance_profile.main
2020/07/10 16:25:53 [TRACE] vertex "aws_iam_instance_profile.main": visit complete
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 839
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:53 GMT
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 8815ce5c-3813-4b50-b76b-0592deee33c3
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>8815ce5c-3813-4b50-b76b-0592deee33c3</requestId>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <securityGroupInfo>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ownerId>904806826062</ownerId>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupName>allow-ssh-and-egress</groupName>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupDescription>Allows ingress SSH traffic and egress to any address.</groupDescription>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ipPermissions/>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ipPermissionsEgress/>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <tagSet>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <key>Name</key>
2020-07-10T16:25:53.637+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <value>allow_ssh-and-egress</value>
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </tagSet>
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </securityGroupInfo>
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeSecurityGroupsResponse>
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] Authorizing security group {
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Description: "Allows ingress SSH traffic and egress to any address.",
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   GroupId: "sg-06f7dddb3983ea1eb",
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   GroupName: "allow-ssh-and-egress",
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   OwnerId: "904806826062",
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Tags: [{
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Key: "Name",
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Value: "allow_ssh-and-egress"
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     }],
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   VpcId: "vpc-b31026da"
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: } ingress rule: []*ec2.IpPermission{{
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   FromPort: 22,
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   IpProtocol: "tcp",
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   IpRanges: [{
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       CidrIp: "0.0.0.0/0"
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     }],
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   ToPort: 22
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: }}
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 215
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=0df69d26c144433cec9ff11c7d7d7bc0749d6b03042364ea2eea8cdf29eb1e14
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152553Z
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=AuthorizeSecurityGroupIngress&GroupId=sg-06f7dddb3983ea1eb&IpPermissions.1.FromPort=22&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=22&Version=2016-11-15
2020-07-10T16:25:53.638+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 843
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:53 GMT
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 124ec556-349c-4616-bada-aa6e64837e34
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>124ec556-349c-4616-bada-aa6e64837e34</requestId>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <securityGroupInfo>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ownerId>904806826062</ownerId>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupName>allow-registry-ingress</groupName>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupDescription>Allows ingress SSH traffic and egress to any address.</groupDescription>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ipPermissions/>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ipPermissionsEgress/>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <tagSet>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <key>Name</key>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <value>allow_registry-ingress</value>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </tagSet>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </securityGroupInfo>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeSecurityGroupsResponse>
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] Authorizing security group {
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Description: "Allows ingress SSH traffic and egress to any address.",
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   GroupId: "sg-0d7af5cbbf39093fe",
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   GroupName: "allow-registry-ingress",
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   OwnerId: "904806826062",
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Tags: [{
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Key: "Name",
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Value: "allow_registry-ingress"
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     }],
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   VpcId: "vpc-b31026da"
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: } ingress rule: []*ec2.IpPermission{{
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   FromPort: 80,
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   IpProtocol: "tcp",
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   IpRanges: [{
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       CidrIp: "0.0.0.0/0"
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     }],
2020-07-10T16:25:53.651+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   ToPort: 80
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: }, {
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   FromPort: 5000,
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   IpProtocol: "tcp",
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   IpRanges: [{
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       CidrIp: "0.0.0.0/0"
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     }],
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   ToPort: 5000
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: }}
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 350
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=f03bfcd2b4ea9c37df82cabb267994c8d70090b82c61c2320d9b43eee0a6ed1b
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152553Z
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=AuthorizeSecurityGroupIngress&GroupId=sg-0d7af5cbbf39093fe&IpPermissions.1.FromPort=80&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=80&IpPermissions.2.FromPort=5000&IpPermissions.2.IpProtocol=tcp&IpPermissions.2.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.2.ToPort=5000&Version=2016-11-15
2020-07-10T16:25:53.652+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 259
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:53 GMT
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 795c7458-0275-4263-b145-f575145ff734
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>795c7458-0275-4263-b145-f575145ff734</requestId>
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <return>true</return>
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </AuthorizeSecurityGroupIngressResponse>
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] Waiting for Security Group (sg-0d7af5cbbf39093fe) to exist
2020-07-10T16:25:53.902+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] Waiting for state to become: [exists]
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 79
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=3acc2ff352a4365e76f06f6fd6cf91e8394ff6607b960a7dd8a08992a4586646
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152553Z
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeSecurityGroups&GroupId.1=sg-0d7af5cbbf39093fe&Version=2016-11-15
2020-07-10T16:25:53.903+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 259
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:53 GMT
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 4f18fc0e-cba1-4416-aea9-94cb8c82d56d
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:53.911+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>4f18fc0e-cba1-4416-aea9-94cb8c82d56d</requestId>
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <return>true</return>
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </AuthorizeSecurityGroupIngressResponse>
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] Authorizing security group {
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Description: "Allows ingress SSH traffic and egress to any address.",
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   GroupId: "sg-06f7dddb3983ea1eb",
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   GroupName: "allow-ssh-and-egress",
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   OwnerId: "904806826062",
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Tags: [{
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Key: "Name",
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Value: "allow_ssh-and-egress"
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     }],
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   VpcId: "vpc-b31026da"
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: } egress rule: []*ec2.IpPermission{{
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   FromPort: 0,
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   IpProtocol: "-1",
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   IpRanges: [{
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       CidrIp: "0.0.0.0/0"
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     }],
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   ToPort: 0
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: }}
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupEgress Details:
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 211
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=e49b558c3d27efbb8e9821a035ed411b5ea0cced3c49bec9bba8ae9a6790a54b
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152553Z
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=AuthorizeSecurityGroupEgress&GroupId=sg-06f7dddb3983ea1eb&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2020-07-10T16:25:53.912+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020/07/10 16:25:54 [TRACE] dag/walk: vertex "output.public-ip" is waiting for "aws_instance.main"
2020/07/10 16:25:54 [TRACE] dag/walk: vertex "aws_instance.main" is waiting for "aws_security_group.allow-ssh-and-egress"
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 1799
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:53 GMT
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 17106bf8-7166-4a62-b03d-a29981b7e503
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>17106bf8-7166-4a62-b03d-a29981b7e503</requestId>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <securityGroupInfo>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ownerId>904806826062</ownerId>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupName>allow-registry-ingress</groupName>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupDescription>Allows ingress SSH traffic and egress to any address.</groupDescription>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ipPermissions>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipProtocol>tcp</ipProtocol>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <fromPort>80</fromPort>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <toPort>80</toPort>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groups/>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipRanges>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <cidrIp>0.0.0.0/0</cidrIp>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ipRanges>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipv6Ranges/>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <prefixListIds/>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipProtocol>tcp</ipProtocol>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <fromPort>5000</fromPort>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <toPort>5000</toPort>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groups/>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipRanges>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <cidrIp>0.0.0.0/0</cidrIp>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ipRanges>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipv6Ranges/>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <prefixListIds/>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </ipPermissions>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ipPermissionsEgress/>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <tagSet>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <key>Name</key>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <value>allow_registry-ingress</value>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </tagSet>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </securityGroupInfo>
2020-07-10T16:25:54.231+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeSecurityGroupsResponse>
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:54 [TRACE] EvalWriteState: recording 0 dependencies for aws_security_group.allow-registry-ingress
2020/07/10 16:25:54 [TRACE] EvalWriteState: writing current state object for aws_security_group.allow-registry-ingress
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:54 [TRACE] EvalWriteState: recording 0 dependencies for aws_security_group.allow-registry-ingress
2020/07/10 16:25:54 [TRACE] EvalWriteState: writing current state object for aws_security_group.allow-registry-ingress
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:25:54 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2020/07/10 16:25:54 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 179
2020/07/10 16:25:54 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupEgress Details:
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 257
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:53 GMT
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: e455d30c-0c9e-4be3-906a-825567bca417
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <AuthorizeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>e455d30c-0c9e-4be3-906a-825567bca417</requestId>
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <return>true</return>
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </AuthorizeSecurityGroupEgressResponse>
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] Waiting for Security Group (sg-06f7dddb3983ea1eb) to exist
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] Waiting for state to become: [exists]
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 79
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=d2df38d0adaabe8e4b7aa917b244614081326e42f4d2bf541e7aeeff66c21b50
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152554Z
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeSecurityGroups&GroupId.1=sg-06f7dddb3983ea1eb&Version=2016-11-15
2020-07-10T16:25:54.244+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020/07/10 16:25:54 [TRACE] [walkApply] Exiting eval tree: aws_security_group.allow-registry-ingress
2020/07/10 16:25:54 [TRACE] vertex "aws_security_group.allow-registry-ingress": visit complete
2020/07/10 16:25:54 [TRACE] dag/walk: vertex "root" is waiting for "provider.aws (close)"
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 1740
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:54 GMT
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: a1a7a9b3-0cef-4cbc-b2ca-ae21931e63b3
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>a1a7a9b3-0cef-4cbc-b2ca-ae21931e63b3</requestId>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <securityGroupInfo>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ownerId>904806826062</ownerId>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupName>allow-ssh-and-egress</groupName>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupDescription>Allows ingress SSH traffic and egress to any address.</groupDescription>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ipPermissions>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipProtocol>tcp</ipProtocol>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <fromPort>22</fromPort>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <toPort>22</toPort>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groups/>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipRanges>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <cidrIp>0.0.0.0/0</cidrIp>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ipRanges>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipv6Ranges/>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <prefixListIds/>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </ipPermissions>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ipPermissionsEgress>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipProtocol>-1</ipProtocol>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groups/>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipRanges>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <cidrIp>0.0.0.0/0</cidrIp>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </ipRanges>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipv6Ranges/>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <prefixListIds/>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </ipPermissionsEgress>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <tagSet>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <key>Name</key>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <value>allow_ssh-and-egress</value>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </tagSet>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </securityGroupInfo>
2020-07-10T16:25:54.501+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeSecurityGroupsResponse>
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:54 [TRACE] EvalWriteState: recording 0 dependencies for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:54 [TRACE] EvalWriteState: writing current state object for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:25:54 [TRACE] EvalWriteState: recording 0 dependencies for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:54 [TRACE] EvalWriteState: writing current state object for aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:25:54 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2020/07/10 16:25:54 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 180
2020/07/10 16:25:54 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/10 16:25:54 [TRACE] [walkApply] Exiting eval tree: aws_security_group.allow-ssh-and-egress
2020/07/10 16:25:54 [TRACE] vertex "aws_security_group.allow-ssh-and-egress": visit complete
2020/07/10 16:25:54 [TRACE] dag/walk: visiting "aws_instance.main"
2020/07/10 16:25:54 [TRACE] vertex "aws_instance.main": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/10 16:25:54 [TRACE] vertex "aws_instance.main": evaluating
2020/07/10 16:25:54 [TRACE] [walkApply] Entering eval tree: aws_instance.main
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:54 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.main
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:54 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:54 [TRACE] EvalReadState: reading state for aws_instance.main
2020/07/10 16:25:54 [TRACE] EvalReadState: no state present for aws_instance.main
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/10 16:25:54 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.main
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/10 16:25:54 [TRACE] Re-validating config for "aws_instance.main"
2020/07/10 16:25:54 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/10 16:25:54 [TRACE] GRPCProvider: PlanResourceChange
2020/07/10 16:25:54 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .user_data: planned value cty.StringVal("dd6dd3fbc7a6371b12c66660e27bdccda24faa51") does not match config value cty.StringVal("H4sIAAAAAAAA/7xX3XLbOJa+Z1Xe4bTsHXdmR7+O0/FftiRZpqhY9piKRZE9XQ4IQCQsENASoCS6K1XzGvMI+xr7KPMkWyApRW4nd7Pji1R4cH6/8+EcqC+FpkLXP+dLegZJxjVbolQ3E7ah5BxCmQmC0vyyNnbGg97dw+1V1/VrlvmqT2mqmBRn0G603lhvrHp9X+mNtfOdIqHmNK0PBJaEiegMfgmZ3lMogmu60U3MZUbqWIo5i95YY5bQV2EO9nWsdco0fZwzTtWZBVAHXDo9Ayfv6k+sFYXe6SL4LCPqXeuwX8g+OXmvgz7LCHemLccOWn+d8Tj01tFdJJ+crnxyrl0eznrKn7ncsU8Txx5EOJkKNLttYbGI/M5pFiRckNkoJjZfhezdJyfvGr8j0u9xOuxx/9h9doauDCa9JOxsFPJOhDMMYpzw2E82HD9LY6Od4YgHHb4Kn2R0PyWfd9+sd4zsaR5Mei1kP0QPz+PIF9MnVOTMnx3b5djerKg3XThDd3WX9+IwuS992qO239GcXMmI2DF37JM49B6isONX39V5v9cK896azG5lFfeZDEcnju3GxB5ExP6Q9dnY1DVDM1eGxyZ2exXYPKEez4K8zC2wp4k/myrS7z2Fnbb2vZOFY2+WYfIQ+bORIF6bh8J9LrA0mNzLp5fxuPY9wm/6Jpd7k+MS58bXSYI80sbJdQt5p5kznGaBPc2LHtndVTBzn2467srUgtlpHnhkiY/dnE5OK1ucUa+t/P67TySZ5rjCedx/t+knm1VgetDvqWAW8PBKRk7icl9MhRPJyLGDFU7aMRm6HD+Zs+Vz2HnH+qwbBQnnoe0+3xm9ftfwKCcJfzI8c8ReXdHymdinuamt0LVvY78T862dn2xWfuJy3LnN0azXCo+d905/tAyTNg+905xOHJPf87jIsxvtc8VJpu2bGeH4+F6PmVOe7/XdEb0ltqeGd/zG22LU3sOozYh3mwaze9ZP4hYZdt+b2nzPXZT1blZ+51oh+/SZXMn2+Kq7LnAZ3nL/eFTGSAYad6ZPOJm2SsxK/Hb1bX09FfYbp5KbexKykju+3Y7xsctx0o18MYrDxHDRlcFsxEfH48j3NnngXS/opJf5M3dJkocIH0/X2D7NSb+XhMdV7f1xhIejVehNW8ietnHe08HMzZF3+3yzi9vd6U48P6LeadsZkjgUhnMfotC7ToNJr407u7tieJgE3nWLzEb8jn2zH0/eRX5nsyo4bpMlseO2z06ewk5rFdin5p7mNx23wBp5o3YxJ5LuLwZjp999cq6czPQLeZtFNSeWoXctgklX+va2Xz1GPK6CfleTfm+vd93M7y/2fI2zghvJNA+8k6ftzMDJ9CnwTlrhcGFmxzIc3kfIa8dB5yFC3rtqFvAMzdyl722WtLpnW7xe4LnlYL8bBd5JMcMCM1+Go3ZwX+Hb7639mSvvWJfddNqcDEdL/3hc3BlkT2Nzd3d+riN93znNiD3NSL/9QGc9fvNwui5wEuP3zrWKnORkhTsnyyDxmXPd+mR8hENX3pU8bIXHozjoTBc44Z1g5rwv8ejxMLlmoT1d3LFeC4spr+TLULgciyAu7vrTYI3zijtDV+Jk+ozsU2VqGq/lpQUAQHcrK3z/rpDItaDpGaRS6jPzTyFcIh2fQZNq3ExpxJRO80ae8PKMpglTZoWpMzhq/XJycvQvWpabuoop5wqnbKl/tC1/aoZMNEOkYss6gAnV2VKBjilsE4UE4ZgJClpCjFYUEKSZEExE1gFcSbyg6TddHSMNCVpQBZmiIOeFKyaURgJT6wCWqTTLGBTVwERxuucfZTqmQjOMtFFGETKmhdbkGMIML6guTOcyBaVlykS0C36krAMgSKOGZRmdugSapnTD9PZTyEwoqi0rQUz8/BZ+t6DMjfNHUlRigSnucevS+moVfwfglGolNBxpqjR8KW3qmH6BeSoT+IKW+gtkqsRmVznnSDMpoGyEgWDFCCUQ5oXOXPKFSR3pCs6G9TKpKlOKYwk15/b6zrxkqoQMAKSyAqhZFgDOUg71uZrcQER1ozrFMjEQRFTXK4mKLQCVEQkqhkbz5YllSj8ANxOv2LAwMfe6uzsqn1xZWlRbAIA0qFhmnADdMKUhE4Sm8OXVRfjSsA4M+zIcv/QCSaY0hBSWHGEDGZ3LlG4JCDpmCqSgDWu/a9/Fa6JRqr+htcu6AX/+1/9Z8P/h9cfh/n2hPmxZxubw66/wE9TnUHvVzxr89tu5IYcop2TRiYHr3rmmFddmALyyASKpAiF1yZWSzoX1hmloWwBzZlnb7mUC/mbe83WBkj0KljJCNcLxVoHqtUwXEEulK9FK8iz5TgpnhaQMsTtoloQsUjTm+7PBzJF/77DOVFoMbCpWUAxtc29uIyY2UAdB16BouqIphFzihWWBucRTlDIUcqosa+w/TtqX//z7PzRNUzSXadJI8urWR+iff/+HdWs7t7PH7rTr3HR7N4PH6fBu8nlyeVRAI0ygpmKaqjpaIcaN26PKZnBrDK5+bEGFUSdHljfoPV457uVRc4XS5nq9LkUPk4F7ebRer+tmih9Z5XcuszRTNDWN3oaa9IeD8eDy6FDhmH4Tu4P7h8Hk8+OD61weHab0vzOq9GOWsiMDw3UmsJkpypILMyJKWtYpHP2N/nrcSY4OC3TMV3J0Dl/hAOyUUmERRl/pt8+P23+0KIl6DmZpQLE1JkgwnQOOKV5Yv8Lhz4xAPXoLP11CrVWD3+BPfwLCKNQm5WrYTjtDb6SKR0SjZgwPCpP2vsmDQhE9g8OfQ6RocQsOW2+BSMPJW5TQmkmgn1KkKRRdqCYrmP1rYaThIxx+v9tNKAuDi4vB3bV1AOv12qxnIUV9vV5bFcd+L67nAThzsw5SiMwF1rLQJiyl2EyApDI00kK/NH4sMv5zowx0XpykVGepgONWe5tY2eez5i6hw1eNPre+/jGfUVa9GSq5CfUq9IvAUmqo/raUbFYRm8ss5Aw/xjrh51YV4UZGqvgvwpgq9chlBIcVq3eGXEaqWSo0uIzKUDRNZVro/8CgUCj1t/AKzDNCy4Cs/ICIyxDxJpZJIkXDdPb8e+drmZJlajIoVbb5M6WpMJ1ZylTDh9aH1l8Ao2qpT1EqmKpUxxUlCZ0zQQmguaZpge5e7G3Y0oaX3tudXxqtRqvRPjP+TZ8MmbakNKv49xLbv3AZfS0ZY550VFnJgrAU6svXGP2+1w5jp76+8MgEoZuGOXxB8z962XPS3DMp6X7x09Vd/7P/1wEY4UfrojjjSESXNSpqRkAR+WhtGXOhmeb04/bKNMvPb8cJ1QhwjFJF9WUt0/P6hxo0P1oXzdLPRShJDpgjpS5rWAqNmKBpbc+D0aPpx4u4vYsStz+W9jTdUyRsBYxc1tYpWi4LH9aQci7Bkykn1kWTsNWe+lxKTdOP//s/cPgzMXPiP//Df3vRrMTWRdNkViRaALFtX4zMPIn2f7lYOJZrAXUXDs3UPjvczvM/Ym8cDIo9AGYpmDcw3jZP5UkoOcPAmVhYXEBd/XBCvZwHL1fPXiiXKvPus8oXyJWEXGawZio23E/Lw3I6/lfNUpRTrCEX5pdJzaeqBrVbWTsHIgvMMFIUDovjHYY+VfC2fEkwwXSDlBtv5/scwpSixfn5zuJWwttiVVQyqhC2iBTUsuQCahODSjm2SfEzp6q0Zr16aNTrb6z/CwAA///+xAo3oRUAAA==")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/10 16:25:54 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/10 16:25:54 [TRACE] EvalReadState: reading state for aws_instance.main
2020/07/10 16:25:54 [TRACE] EvalReadState: no state present for aws_instance.main
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:25:54 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/10 16:25:54 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/10 16:25:54 [DEBUG] aws_instance.main: applying the planned Create change
2020/07/10 16:25:54 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-10T16:25:54.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] setting computed for "root_block_device" from ComputedKeys
2020-07-10T16:25:54.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] setting computed for "ipv6_addresses" from ComputedKeys
2020-07-10T16:25:54.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] setting computed for "network_interface" from ComputedKeys
2020-07-10T16:25:54.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] setting computed for "network_interface" from ComputedKeys
2020-07-10T16:25:54.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] setting computed for "ephemeral_block_device" from ComputedKeys
2020-07-10T16:25:54.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] setting computed for "ebs_block_device" from ComputedKeys
2020-07-10T16:25:54.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] setting computed for "metadata_options" from ComputedKeys
2020-07-10T16:25:54.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] setting computed for "volume_tags" from ComputedKeys
2020-07-10T16:25:54.526+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] setting computed for "security_groups" from ComputedKeys
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] Run configuration: {
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   DisableApiTermination: false,
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   EbsOptimized: false,
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   HibernationOptions: {
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     Configured: false
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   },
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   IamInstanceProfile: {
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     Name: "instance-profile"
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   },
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   ImageId: "ami-00f6a0c18edb19300",
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   InstanceType: "t2.micro",
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   KeyName: "Michael-EU-West2",
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   MaxCount: 1,
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   MinCount: 1,
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Monitoring: {
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     Enabled: false
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   },
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   Placement: {
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     AvailabilityZone: "",
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     GroupName: ""
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   },
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   SecurityGroupIds: ["sg-0d7af5cbbf39093fe","sg-06f7dddb3983ea1eb"],
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   TagSpecifications: [{
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       ResourceType: "instance",
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:       Tags: [{
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:           Key: "Name",
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:           Value: "terraform-docker-registry"
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         }]
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     }],
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:   UserData: "H4sIAAAAAAAA/7xX3XLbOJa+Z1Xe4bTsHXdmR7+O0/FftiRZpqhY9piKRZE9XQ4IQCQsENASoCS6K1XzGvMI+xr7KPMkWyApRW4nd7Pji1R4cH6/8+EcqC+FpkLXP+dLegZJxjVbolQ3E7ah5BxCmQmC0vyyNnbGg97dw+1V1/VrlvmqT2mqmBRn0G603lhvrHp9X+mNtfOdIqHmNK0PBJaEiegMfgmZ3lMogmu60U3MZUbqWIo5i95YY5bQV2EO9nWsdco0fZwzTtWZBVAHXDo9Ayfv6k+sFYXe6SL4LCPqXeuwX8g+OXmvgz7LCHemLccOWn+d8Tj01tFdJJ+crnxyrl0eznrKn7ncsU8Txx5EOJkKNLttYbGI/M5pFiRckNkoJjZfhezdJyfvGr8j0u9xOuxx/9h9doauDCa9JOxsFPJOhDMMYpzw2E82HD9LY6Od4YgHHb4Kn2R0PyWfd9+sd4zsaR5Mei1kP0QPz+PIF9MnVOTMnx3b5djerKg3XThDd3WX9+IwuS992qO239GcXMmI2DF37JM49B6isONX39V5v9cK896azG5lFfeZDEcnju3GxB5ExP6Q9dnY1DVDM1eGxyZ2exXYPKEez4K8zC2wp4k/myrS7z2Fnbb2vZOFY2+WYfIQ+bORIF6bh8J9LrA0mNzLp5fxuPY9wm/6Jpd7k+MS58bXSYI80sbJdQt5p5kznGaBPc2LHtndVTBzn2467srUgtlpHnhkiY/dnE5OK1ucUa+t/P67TySZ5rjCedx/t+knm1VgetDvqWAW8PBKRk7icl9MhRPJyLGDFU7aMRm6HD+Zs+Vz2HnH+qwbBQnnoe0+3xm9ftfwKCcJfzI8c8ReXdHymdinuamt0LVvY78T862dn2xWfuJy3LnN0azXCo+d905/tAyTNg+905xOHJPf87jIsxvtc8VJpu2bGeH4+F6PmVOe7/XdEb0ltqeGd/zG22LU3sOozYh3mwaze9ZP4hYZdt+b2nzPXZT1blZ+51oh+/SZXMn2+Kq7LnAZ3nL/eFTGSAYad6ZPOJm2SsxK/Hb1bX09FfYbp5KbexKykju+3Y7xsctx0o18MYrDxHDRlcFsxEfH48j3NnngXS/opJf5M3dJkocIH0/X2D7NSb+XhMdV7f1xhIejVehNW8ietnHe08HMzZF3+3yzi9vd6U48P6LeadsZkjgUhnMfotC7ToNJr407u7tieJgE3nWLzEb8jn2zH0/eRX5nsyo4bpMlseO2z06ewk5rFdin5p7mNx23wBp5o3YxJ5LuLwZjp999cq6czPQLeZtFNSeWoXctgklX+va2Xz1GPK6CfleTfm+vd93M7y/2fI2zghvJNA+8k6ftzMDJ9CnwTlrhcGFmxzIc3kfIa8dB5yFC3rtqFvAMzdyl722WtLpnW7xe4LnlYL8bBd5JMcMCM1+Go3ZwX+Hb7639mSvvWJfddNqcDEdL/3hc3BlkT2Nzd3d+riN93znNiD3NSL/9QGc9fvNwui5wEuP3zrWKnORkhTsnyyDxmXPd+mR8hENX3pU8bIXHozjoTBc44Z1g5rwv8ejxMLlmoT1d3LFeC4spr+TLULgciyAu7vrTYI3zijtDV+Jk+ozsU2VqGq/lpQUAQHcrK3z/rpDItaDpGaRS6jPzTyFcIh2fQZNq3ExpxJRO80ae8PKMpglTZoWpMzhq/XJycvQvWpabuoop5wqnbKl/tC1/aoZMNEOkYss6gAnV2VKBjilsE4UE4ZgJClpCjFYUEKSZEExE1gFcSbyg6TddHSMNCVpQBZmiIOeFKyaURgJT6wCWqTTLGBTVwERxuucfZTqmQjOMtFFGETKmhdbkGMIML6guTOcyBaVlykS0C36krAMgSKOGZRmdugSapnTD9PZTyEwoqi0rQUz8/BZ+t6DMjfNHUlRigSnucevS+moVfwfglGolNBxpqjR8KW3qmH6BeSoT+IKW+gtkqsRmVznnSDMpoGyEgWDFCCUQ5oXOXPKFSR3pCs6G9TKpKlOKYwk15/b6zrxkqoQMAKSyAqhZFgDOUg71uZrcQER1ozrFMjEQRFTXK4mKLQCVEQkqhkbz5YllSj8ANxOv2LAwMfe6uzsqn1xZWlRbAIA0qFhmnADdMKUhE4Sm8OXVRfjSsA4M+zIcv/QCSaY0hBSWHGEDGZ3LlG4JCDpmCqSgDWu/a9/Fa6JRqr+htcu6AX/+1/9Z8P/h9cfh/n2hPmxZxubw66/wE9TnUHvVzxr89tu5IYcop2TRiYHr3rmmFddmALyyASKpAiF1yZWSzoX1hmloWwBzZlnb7mUC/mbe83WBkj0KljJCNcLxVoHqtUwXEEulK9FK8iz5TgpnhaQMsTtoloQsUjTm+7PBzJF/77DOVFoMbCpWUAxtc29uIyY2UAdB16BouqIphFzihWWBucRTlDIUcqosa+w/TtqX//z7PzRNUzSXadJI8urWR+iff/+HdWs7t7PH7rTr3HR7N4PH6fBu8nlyeVRAI0ygpmKaqjpaIcaN26PKZnBrDK5+bEGFUSdHljfoPV457uVRc4XS5nq9LkUPk4F7ebRer+tmih9Z5XcuszRTNDWN3oaa9IeD8eDy6FDhmH4Tu4P7h8Hk8+OD61weHab0vzOq9GOWsiMDw3UmsJkpypILMyJKWtYpHP2N/nrcSY4OC3TMV3J0Dl/hAOyUUmERRl/pt8+P23+0KIl6DmZpQLE1JkgwnQOOKV5Yv8Lhz4xAPXoLP11CrVWD3+BPfwLCKNQm5WrYTjtDb6SKR0SjZgwPCpP2vsmDQhE9g8OfQ6RocQsOW2+BSMPJW5TQmkmgn1KkKRRdqCYrmP1rYaThIxx+v9tNKAuDi4vB3bV1AOv12qxnIUV9vV5bFcd+L67nAThzsw5SiMwF1rLQJiyl2EyApDI00kK/NH4sMv5zowx0XpykVGepgONWe5tY2eez5i6hw1eNPre+/jGfUVa9GSq5CfUq9IvAUmqo/raUbFYRm8ss5Aw/xjrh51YV4UZGqvgvwpgq9chlBIcVq3eGXEaqWSo0uIzKUDRNZVro/8CgUCj1t/AKzDNCy4Cs/ICIyxDxJpZJIkXDdPb8e+drmZJlajIoVbb5M6WpMJ1ZylTDh9aH1l8Ao2qpT1EqmKpUxxUlCZ0zQQmguaZpge5e7G3Y0oaX3tudXxqtRqvRPjP+TZ8MmbakNKv49xLbv3AZfS0ZY550VFnJgrAU6svXGP2+1w5jp76+8MgEoZuGOXxB8z962XPS3DMp6X7x09Vd/7P/1wEY4UfrojjjSESXNSpqRkAR+WhtGXOhmeb04/bKNMvPb8cJ1QhwjFJF9WUt0/P6hxo0P1oXzdLPRShJDpgjpS5rWAqNmKBpbc+D0aPpx4u4vYsStz+W9jTdUyRsBYxc1tYpWi4LH9aQci7Bkykn1kWTsNWe+lxKTdOP//s/cPgzMXPiP//Df3vRrMTWRdNkViRaALFtX4zMPIn2f7lYOJZrAXUXDs3UPjvczvM/Ym8cDIo9AGYpmDcw3jZP5UkoOcPAmVhYXEBd/XBCvZwHL1fPXiiXKvPus8oXyJWEXGawZio23E/Lw3I6/lfNUpRTrCEX5pdJzaeqBrVbWTsHIgvMMFIUDovjHYY+VfC2fEkwwXSDlBtv5/scwpSixfn5zuJWwttiVVQyqhC2iBTUsuQCahODSjm2SfEzp6q0Zr16aNTrb6z/CwAA///+xAo3oRUAAA=="
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: }
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] Waiting for state to become: [success]
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:54 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RunInstances Details:
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 4634
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=b5d3dce7ed45ab3252e125789dc584be9ab9be6d251038edacf13f29ac2a7a3a
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152554Z
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=RunInstances&ClientToken=18FAFCCA-C83A-41E6-8F08-B334842A9D11&DisableApiTermination=false&EbsOptimized=false&HibernationOptions.Configured=false&IamInstanceProfile.Name=instance-profile&ImageId=ami-00f6a0c18edb19300&InstanceType=t2.micro&KeyName=Michael-EU-West2&MaxCount=1&MinCount=1&Monitoring.Enabled=false&Placement.AvailabilityZone=&Placement.GroupName=&SecurityGroupId.1=sg-0d7af5cbbf39093fe&SecurityGroupId.2=sg-06f7dddb3983ea1eb&TagSpecification.1.ResourceType=instance&TagSpecification.1.Tag.1.Key=Name&TagSpecification.1.Tag.1.Value=terraform-docker-registry&UserData=H4sIAAAAAAAA%2F7xX3XLbOJa%2BZ1Xe4bTsHXdmR7%2BO0%2FFftiRZpqhY9piKRZE9XQ4IQCQsENASoCS6K1XzGvMI%2Bxr7KPMkWyApRW4nd7Pji1R4cH6%2F8%2BEcqC%2BFpkLXP%2BdLegZJxjVbolQ3E7ah5BxCmQmC0vyyNnbGg97dw%2B1V1%2FVrlvmqT2mqmBRn0G603lhvrHp9X%2BmNtfOdIqHmNK0PBJaEiegMfgmZ3lMogmu60U3MZUbqWIo5i95YY5bQV2EO9nWsdco0fZwzTtWZBVAHXDo9Ayfv6k%2BsFYXe6SL4LCPqXeuwX8g%2BOXmvgz7LCHemLccOWn%2Bd8Tj01tFdJJ%2Bcrnxyrl0eznrKn7ncsU8Txx5EOJkKNLttYbGI%2FM5pFiRckNkoJjZfhezdJyfvGr8j0u9xOuxx%2F9h9doauDCa9JOxsFPJOhDMMYpzw2E82HD9LY6Od4YgHHb4Kn2R0PyWfd9%2Bsd4zsaR5Mei1kP0QPz%2BPIF9MnVOTMnx3b5djerKg3XThDd3WX9%2BIwuS992qO239GcXMmI2DF37JM49B6isONX39V5v9cK896azG5lFfeZDEcnju3GxB5ExP6Q9dnY1DVDM1eGxyZ2exXYPKEez4K8zC2wp4k%2FmyrS7z2Fnbb2vZOFY2%2BWYfIQ%2BbORIF6bh8J9LrA0mNzLp5fxuPY9wm%2F6Jpd7k%2BMS58bXSYI80sbJdQt5p5kznGaBPc2LHtndVTBzn2467srUgtlpHnhkiY%2FdnE5OK1ucUa%2Bt%2FP67TySZ5rjCedx%2Ft%2Bknm1VgetDvqWAW8PBKRk7icl9MhRPJyLGDFU7aMRm6HD%2BZs%2BVz2HnH%2BqwbBQnnoe0%2B3xm9ftfwKCcJfzI8c8ReXdHymdinuamt0LVvY78T862dn2xWfuJy3LnN0azXCo%2Bd905%2FtAyTNg%2B905xOHJPf87jIsxvtc8VJpu2bGeH4%2BF6PmVOe7%2FXdEb0ltqeGd%2FzG22LU3sOozYh3mwaze9ZP4hYZdt%2Bb2nzPXZT1blZ%2B51oh%2B%2FSZXMn2%2BKq7LnAZ3nL%2FeFTGSAYad6ZPOJm2SsxK%2FHb1bX09FfYbp5KbexKykju%2B3Y7xsctx0o18MYrDxHDRlcFsxEfH48j3NnngXS%2FopJf5M3dJkocIH0%2FX2D7NSb%2BXhMdV7f1xhIejVehNW8ietnHe08HMzZF3%2B3yzi9vd6U48P6LeadsZkjgUhnMfotC7ToNJr407u7tieJgE3nWLzEb8jn2zH0%2FeRX5nsyo4bpMlseO2z06ewk5rFdin5p7mNx23wBp5o3YxJ5LuLwZjp999cq6czPQLeZtFNSeWoXctgklX%2Bva2Xz1GPK6CfleTfm%2Bvd93M7y%2F2fI2zghvJNA%2B8k6ftzMDJ9CnwTlrhcGFmxzIc3kfIa8dB5yFC3rtqFvAMzdyl722WtLpnW7xe4LnlYL8bBd5JMcMCM1%2BGo3ZwX%2BHb7639mSvvWJfddNqcDEdL%2F3hc3BlkT2Nzd3d%2BriN93znNiD3NSL%2F9QGc9fvNwui5wEuP3zrWKnORkhTsnyyDxmXPd%2BmR8hENX3pU8bIXHozjoTBc44Z1g5rwv8ejxMLlmoT1d3LFeC4spr%2BTLULgciyAu7vrTYI3zijtDV%2BJk%2BozsU2VqGq%2FlpQUAQHcrK3z%2FrpDItaDpGaRS6jPzTyFcIh2fQZNq3ExpxJRO80ae8PKMpglTZoWpMzhq%2FXJycvQvWpabuoop5wqnbKl%2FtC1%2FaoZMNEOkYss6gAnV2VKBjilsE4UE4ZgJClpCjFYUEKSZEExE1gFcSbyg6TddHSMNCVpQBZmiIOeFKyaURgJT6wCWqTTLGBTVwERxuucfZTqmQjOMtFFGETKmhdbkGMIML6guTOcyBaVlykS0C36krAMgSKOGZRmdugSapnTD9PZTyEwoqi0rQUz8%2FBZ%2Bt6DMjfNHUlRigSnucevS%2BmoVfwfglGolNBxpqjR8KW3qmH6BeSoT%2BIKW%2BgtkqsRmVznnSDMpoGyEgWDFCCUQ5oXOXPKFSR3pCs6G9TKpKlOKYwk15%2Fb6zrxkqoQMAKSyAqhZFgDOUg71uZrcQER1ozrFMjEQRFTXK4mKLQCVEQkqhkbz5YllSj8ANxOv2LAwMfe6uzsqn1xZWlRbAIA0qFhmnADdMKUhE4Sm8OXVRfjSsA4M%2BzIcv%2FQCSaY0hBSWHGEDGZ3LlG4JCDpmCqSgDWu%2Fa9%2FFa6JRqr%2Bhtcu6AX%2F%2B1%2F9Z8P%2Fh9cfh%2Fn2hPmxZxubw66%2FwE9TnUHvVzxr89tu5IYcop2TRiYHr3rmmFddmALyyASKpAiF1yZWSzoX1hmloWwBzZlnb7mUC%2Fmbe83WBkj0KljJCNcLxVoHqtUwXEEulK9FK8iz5TgpnhaQMsTtoloQsUjTm%2B7PBzJF%2F77DOVFoMbCpWUAxtc29uIyY2UAdB16BouqIphFzihWWBucRTlDIUcqosa%2Bw%2FTtqX%2F%2Fz7PzRNUzSXadJI8urWR%2Biff%2F%2BHdWs7t7PH7rTr3HR7N4PH6fBu8nlyeVRAI0ygpmKaqjpaIcaN26PKZnBrDK5%2BbEGFUSdHljfoPV457uVRc4XS5nq9LkUPk4F7ebRer%2Btmih9Z5XcuszRTNDWN3oaa9IeD8eDy6FDhmH4Tu4P7h8Hk8%2BOD61weHab0vzOq9GOWsiMDw3UmsJkpypILMyJKWtYpHP2N%2FnrcSY4OC3TMV3J0Dl%2FhAOyUUmERRl%2Fpt8%2BP23%2B0KIl6DmZpQLE1JkgwnQOOKV5Yv8Lhz4xAPXoLP11CrVWD3%2BBPfwLCKNQm5WrYTjtDb6SKR0SjZgwPCpP2vsmDQhE9g8OfQ6RocQsOW2%2BBSMPJW5TQmkmgn1KkKRRdqCYrmP1rYaThIxx%2Bv9tNKAuDi4vB3bV1AOv12qxnIUV9vV5bFcd%2BL67nAThzsw5SiMwF1rLQJiyl2EyApDI00kK%2FNH4sMv5zowx0XpykVGepgONWe5tY2eez5i6hw1eNPre%2B%2FjGfUVa9GSq5CfUq9IvAUmqo%2FraUbFYRm8ss5Aw%2Fxjrh51YV4UZGqvgvwpgq9chlBIcVq3eGXEaqWSo0uIzKUDRNZVro%2F8CgUCj1t%2FAKzDNCy4Cs%2FICIyxDxJpZJIkXDdPb8e%2BdrmZJlajIoVbb5M6WpMJ1ZylTDh9aH1l8Ao2qpT1EqmKpUxxUlCZ0zQQmguaZpge5e7G3Y0oaX3tudXxqtRqvRPjP%2BTZ8MmbakNKv49xLbv3AZfS0ZY550VFnJgrAU6svXGP2%2B1w5jp76%2B8MgEoZuGOXxB8z962XPS3DMp6X7x09Vd%2F7P%2F1wEY4UfrojjjSESXNSpqRkAR%2BWhtGXOhmeb04%2FbKNMvPb8cJ1QhwjFJF9WUt0%2FP6hxo0P1oXzdLPRShJDpgjpS5rWAqNmKBpbc%2BD0aPpx4u4vYsStz%2BW9jTdUyRsBYxc1tYpWi4LH9aQci7Bkykn1kWTsNWe%2BlxKTdOP%2F%2Fs%2FcPgzMXPiP%2F%2FDf3vRrMTWRdNkViRaALFtX4zMPIn2f7lYOJZrAXUXDs3UPjvczvM%2FYm8cDIo9AGYpmDcw3jZP5UkoOcPAmVhYXEBd%2FXBCvZwHL1fPXiiXKvPus8oXyJWEXGawZio23E%2FLw3I6%2FlfNUpRTrCEX5pdJzaeqBrVbWTsHIgvMMFIUDovjHYY%2BVfC2fEkwwXSDlBtv5%2FscwpSixfn5zuJWwttiVVQyqhC2iBTUsuQCahODSjm2SfEzp6q0Zr16aNTrb6z%2FCwAA%2F%2F%2F%2BxAo3oRUAAA%3D%3D&Version=2016-11-15
2020-07-10T16:25:54.527+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:55.084+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:55 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RunInstances Details:
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 400 Bad Request
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:54 GMT
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:55 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <Response><Errors><Error><Code>InvalidParameterValue</Code><Message>Value (instance-profile) for parameter iamInstanceProfile.name is invalid. Invalid IAM Instance Profile name</Message></Error></Errors><RequestID>624703ae-05a2-4bec-9a13-e8775d0205f6</RequestID></Response>
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:55 [DEBUG] [aws-sdk-go] DEBUG: Validate Response ec2/RunInstances failed, attempt 0/25, error InvalidParameterValue: Value (instance-profile) for parameter iamInstanceProfile.name is invalid. Invalid IAM Instance Profile name
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 	status code: 400, request id: 624703ae-05a2-4bec-9a13-e8775d0205f6
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:55 [DEBUG] Invalid IAM Instance Profile referenced, retrying...
2020-07-10T16:25:55.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:55 [TRACE] Waiting 500ms before next try
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:55 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RunInstances Details:
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 4634
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=2cebd1ee0f46978d88b91c8b3cfc4ccc3a15284ab3e931cc0c2e3ada8794f47c
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152555Z
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=RunInstances&ClientToken=1D7C28C7-FD75-40F8-8311-2101CAE9CBDB&DisableApiTermination=false&EbsOptimized=false&HibernationOptions.Configured=false&IamInstanceProfile.Name=instance-profile&ImageId=ami-00f6a0c18edb19300&InstanceType=t2.micro&KeyName=Michael-EU-West2&MaxCount=1&MinCount=1&Monitoring.Enabled=false&Placement.AvailabilityZone=&Placement.GroupName=&SecurityGroupId.1=sg-0d7af5cbbf39093fe&SecurityGroupId.2=sg-06f7dddb3983ea1eb&TagSpecification.1.ResourceType=instance&TagSpecification.1.Tag.1.Key=Name&TagSpecification.1.Tag.1.Value=terraform-docker-registry&UserData=H4sIAAAAAAAA%2F7xX3XLbOJa%2BZ1Xe4bTsHXdmR7%2BO0%2FFftiRZpqhY9piKRZE9XQ4IQCQsENASoCS6K1XzGvMI%2Bxr7KPMkWyApRW4nd7Pji1R4cH6%2F8%2BEcqC%2BFpkLXP%2BdLegZJxjVbolQ3E7ah5BxCmQmC0vyyNnbGg97dw%2B1V1%2FVrlvmqT2mqmBRn0G603lhvrHp9X%2BmNtfOdIqHmNK0PBJaEiegMfgmZ3lMogmu60U3MZUbqWIo5i95YY5bQV2EO9nWsdco0fZwzTtWZBVAHXDo9Ayfv6k%2BsFYXe6SL4LCPqXeuwX8g%2BOXmvgz7LCHemLccOWn%2Bd8Tj01tFdJJ%2Bcrnxyrl0eznrKn7ncsU8Txx5EOJkKNLttYbGI%2FM5pFiRckNkoJjZfhezdJyfvGr8j0u9xOuxx%2F9h9doauDCa9JOxsFPJOhDMMYpzw2E82HD9LY6Od4YgHHb4Kn2R0PyWfd9%2Bsd4zsaR5Mei1kP0QPz%2BPIF9MnVOTMnx3b5djerKg3XThDd3WX9%2BIwuS992qO239GcXMmI2DF37JM49B6isONX39V5v9cK896azG5lFfeZDEcnju3GxB5ExP6Q9dnY1DVDM1eGxyZ2exXYPKEez4K8zC2wp4k%2FmyrS7z2Fnbb2vZOFY2%2BWYfIQ%2BbORIF6bh8J9LrA0mNzLp5fxuPY9wm%2F6Jpd7k%2BMS58bXSYI80sbJdQt5p5kznGaBPc2LHtndVTBzn2467srUgtlpHnhkiY%2FdnE5OK1ucUa%2Bt%2FP67TySZ5rjCedx%2Ft%2Bknm1VgetDvqWAW8PBKRk7icl9MhRPJyLGDFU7aMRm6HD%2BZs%2BVz2HnH%2BqwbBQnnoe0%2B3xm9ftfwKCcJfzI8c8ReXdHymdinuamt0LVvY78T862dn2xWfuJy3LnN0azXCo%2Bd905%2FtAyTNg%2B905xOHJPf87jIsxvtc8VJpu2bGeH4%2BF6PmVOe7%2FXdEb0ltqeGd%2FzG22LU3sOozYh3mwaze9ZP4hYZdt%2Bb2nzPXZT1blZ%2B51oh%2B%2FSZXMn2%2BKq7LnAZ3nL%2FeFTGSAYad6ZPOJm2SsxK%2FHb1bX09FfYbp5KbexKykju%2B3Y7xsctx0o18MYrDxHDRlcFsxEfH48j3NnngXS%2FopJf5M3dJkocIH0%2FX2D7NSb%2BXhMdV7f1xhIejVehNW8ietnHe08HMzZF3%2B3yzi9vd6U48P6LeadsZkjgUhnMfotC7ToNJr407u7tieJgE3nWLzEb8jn2zH0%2FeRX5nsyo4bpMlseO2z06ewk5rFdin5p7mNx23wBp5o3YxJ5LuLwZjp999cq6czPQLeZtFNSeWoXctgklX%2Bva2Xz1GPK6CfleTfm%2Bvd93M7y%2F2fI2zghvJNA%2B8k6ftzMDJ9CnwTlrhcGFmxzIc3kfIa8dB5yFC3rtqFvAMzdyl722WtLpnW7xe4LnlYL8bBd5JMcMCM1%2BGo3ZwX%2BHb7639mSvvWJfddNqcDEdL%2F3hc3BlkT2Nzd3d%2BriN93znNiD3NSL%2F9QGc9fvNwui5wEuP3zrWKnORkhTsnyyDxmXPd%2BmR8hENX3pU8bIXHozjoTBc44Z1g5rwv8ejxMLlmoT1d3LFeC4spr%2BTLULgciyAu7vrTYI3zijtDV%2BJk%2BozsU2VqGq%2FlpQUAQHcrK3z%2FrpDItaDpGaRS6jPzTyFcIh2fQZNq3ExpxJRO80ae8PKMpglTZoWpMzhq%2FXJycvQvWpabuoop5wqnbKl%2FtC1%2FaoZMNEOkYss6gAnV2VKBjilsE4UE4ZgJClpCjFYUEKSZEExE1gFcSbyg6TddHSMNCVpQBZmiIOeFKyaURgJT6wCWqTTLGBTVwERxuucfZTqmQjOMtFFGETKmhdbkGMIML6guTOcyBaVlykS0C36krAMgSKOGZRmdugSapnTD9PZTyEwoqi0rQUz8%2FBZ%2Bt6DMjfNHUlRigSnucevS%2BmoVfwfglGolNBxpqjR8KW3qmH6BeSoT%2BIKW%2BgtkqsRmVznnSDMpoGyEgWDFCCUQ5oXOXPKFSR3pCs6G9TKpKlOKYwk15%2Fb6zrxkqoQMAKSyAqhZFgDOUg71uZrcQER1ozrFMjEQRFTXK4mKLQCVEQkqhkbz5YllSj8ANxOv2LAwMfe6uzsqn1xZWlRbAIA0qFhmnADdMKUhE4Sm8OXVRfjSsA4M%2BzIcv%2FQCSaY0hBSWHGEDGZ3LlG4JCDpmCqSgDWu%2Fa9%2FFa6JRqr%2Bhtcu6AX%2F%2B1%2F9Z8P%2Fh9cfh%2Fn2hPmxZxubw66%2FwE9TnUHvVzxr89tu5IYcop2TRiYHr3rmmFddmALyyASKpAiF1yZWSzoX1hmloWwBzZlnb7mUC%2Fmbe83WBkj0KljJCNcLxVoHqtUwXEEulK9FK8iz5TgpnhaQMsTtoloQsUjTm%2B7PBzJF%2F77DOVFoMbCpWUAxtc29uIyY2UAdB16BouqIphFzihWWBucRTlDIUcqosa%2Bw%2FTtqX%2F%2Fz7PzRNUzSXadJI8urWR%2Biff%2F%2BHdWs7t7PH7rTr3HR7N4PH6fBu8nlyeVRAI0ygpmKaqjpaIcaN26PKZnBrDK5%2BbEGFUSdHljfoPV457uVRc4XS5nq9LkUPk4F7ebRer%2Btmih9Z5XcuszRTNDWN3oaa9IeD8eDy6FDhmH4Tu4P7h8Hk8%2BOD61weHab0vzOq9GOWsiMDw3UmsJkpypILMyJKWtYpHP2N%2FnrcSY4OC3TMV3J0Dl%2FhAOyUUmERRl%2Fpt8%2BP23%2B0KIl6DmZpQLE1JkgwnQOOKV5Yv8Lhz4xAPXoLP11CrVWD3%2BBPfwLCKNQm5WrYTjtDb6SKR0SjZgwPCpP2vsmDQhE9g8OfQ6RocQsOW2%2BBSMPJW5TQmkmgn1KkKRRdqCYrmP1rYaThIxx%2Bv9tNKAuDi4vB3bV1AOv12qxnIUV9vV5bFcd%2BL67nAThzsw5SiMwF1rLQJiyl2EyApDI00kK%2FNH4sMv5zowx0XpykVGepgONWe5tY2eez5i6hw1eNPre%2B%2FjGfUVa9GSq5CfUq9IvAUmqo%2FraUbFYRm8ss5Aw%2Fxjrh51YV4UZGqvgvwpgq9chlBIcVq3eGXEaqWSo0uIzKUDRNZVro%2F8CgUCj1t%2FAKzDNCy4Cs%2FICIyxDxJpZJIkXDdPb8e%2BdrmZJlajIoVbb5M6WpMJ1ZylTDh9aH1l8Ao2qpT1EqmKpUxxUlCZ0zQQmguaZpge5e7G3Y0oaX3tudXxqtRqvRPjP%2BTZ8MmbakNKv49xLbv3AZfS0ZY550VFnJgrAU6svXGP2%2B1w5jp76%2B8MgEoZuGOXxB8z962XPS3DMp6X7x09Vd%2F7P%2F1wEY4UfrojjjSESXNSpqRkAR%2BWhtGXOhmeb04%2FbKNMvPb8cJ1QhwjFJF9WUt0%2FP6hxo0P1oXzdLPRShJDpgjpS5rWAqNmKBpbc%2BD0aPpx4u4vYsStz%2BW9jTdUyRsBYxc1tYpWi4LH9aQci7Bkykn1kWTsNWe%2BlxKTdOP%2F%2Fs%2FcPgzMXPiP%2F%2FDf3vRrMTWRdNkViRaALFtX4zMPIn2f7lYOJZrAXUXDs3UPjvczvM%2FYm8cDIo9AGYpmDcw3jZP5UkoOcPAmVhYXEBd%2FXBCvZwHL1fPXiiXKvPus8oXyJWEXGawZio23E%2FLw3I6%2FlfNUpRTrCEX5pdJzaeqBrVbWTsHIgvMMFIUDovjHYY%2BVfC2fEkwwXSDlBtv5%2FscwpSixfn5zuJWwttiVVQyqhC2iBTUsuQCahODSjm2SfEzp6q0Zr16aNTrb6z%2FCwAA%2F%2F%2F%2BxAo3oRUAAA%3D%3D&Version=2016-11-15
2020-07-10T16:25:55.588+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:56 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RunInstances Details:
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 400 Bad Request
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:55 GMT
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:56 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <Response><Errors><Error><Code>InvalidParameterValue</Code><Message>Value (instance-profile) for parameter iamInstanceProfile.name is invalid. Invalid IAM Instance Profile name</Message></Error></Errors><RequestID>a0503e0a-8d6b-402f-aa4c-c4208dd4e884</RequestID></Response>
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:56 [DEBUG] [aws-sdk-go] DEBUG: Validate Response ec2/RunInstances failed, attempt 0/25, error InvalidParameterValue: Value (instance-profile) for parameter iamInstanceProfile.name is invalid. Invalid IAM Instance Profile name
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 	status code: 400, request id: a0503e0a-8d6b-402f-aa4c-c4208dd4e884
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:56 [DEBUG] Invalid IAM Instance Profile referenced, retrying...
2020-07-10T16:25:56.015+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:56 [TRACE] Waiting 1s before next try
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:57 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RunInstances Details:
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 4634
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=5c6b65933f5d619939f40c385170ef46bd79a9e2fcd8d0f2da171f8e04eaa7ed
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152557Z
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=RunInstances&ClientToken=E0500047-647A-47B9-9552-A917A802257E&DisableApiTermination=false&EbsOptimized=false&HibernationOptions.Configured=false&IamInstanceProfile.Name=instance-profile&ImageId=ami-00f6a0c18edb19300&InstanceType=t2.micro&KeyName=Michael-EU-West2&MaxCount=1&MinCount=1&Monitoring.Enabled=false&Placement.AvailabilityZone=&Placement.GroupName=&SecurityGroupId.1=sg-0d7af5cbbf39093fe&SecurityGroupId.2=sg-06f7dddb3983ea1eb&TagSpecification.1.ResourceType=instance&TagSpecification.1.Tag.1.Key=Name&TagSpecification.1.Tag.1.Value=terraform-docker-registry&UserData=H4sIAAAAAAAA%2F7xX3XLbOJa%2BZ1Xe4bTsHXdmR7%2BO0%2FFftiRZpqhY9piKRZE9XQ4IQCQsENASoCS6K1XzGvMI%2Bxr7KPMkWyApRW4nd7Pji1R4cH6%2F8%2BEcqC%2BFpkLXP%2BdLegZJxjVbolQ3E7ah5BxCmQmC0vyyNnbGg97dw%2B1V1%2FVrlvmqT2mqmBRn0G603lhvrHp9X%2BmNtfOdIqHmNK0PBJaEiegMfgmZ3lMogmu60U3MZUbqWIo5i95YY5bQV2EO9nWsdco0fZwzTtWZBVAHXDo9Ayfv6k%2BsFYXe6SL4LCPqXeuwX8g%2BOXmvgz7LCHemLccOWn%2Bd8Tj01tFdJJ%2Bcrnxyrl0eznrKn7ncsU8Txx5EOJkKNLttYbGI%2FM5pFiRckNkoJjZfhezdJyfvGr8j0u9xOuxx%2F9h9doauDCa9JOxsFPJOhDMMYpzw2E82HD9LY6Od4YgHHb4Kn2R0PyWfd9%2Bsd4zsaR5Mei1kP0QPz%2BPIF9MnVOTMnx3b5djerKg3XThDd3WX9%2BIwuS992qO239GcXMmI2DF37JM49B6isONX39V5v9cK896azG5lFfeZDEcnju3GxB5ExP6Q9dnY1DVDM1eGxyZ2exXYPKEez4K8zC2wp4k%2FmyrS7z2Fnbb2vZOFY2%2BWYfIQ%2BbORIF6bh8J9LrA0mNzLp5fxuPY9wm%2F6Jpd7k%2BMS58bXSYI80sbJdQt5p5kznGaBPc2LHtndVTBzn2467srUgtlpHnhkiY%2FdnE5OK1ucUa%2Bt%2FP67TySZ5rjCedx%2Ft%2Bknm1VgetDvqWAW8PBKRk7icl9MhRPJyLGDFU7aMRm6HD%2BZs%2BVz2HnH%2BqwbBQnnoe0%2B3xm9ftfwKCcJfzI8c8ReXdHymdinuamt0LVvY78T862dn2xWfuJy3LnN0azXCo%2Bd905%2FtAyTNg%2B905xOHJPf87jIsxvtc8VJpu2bGeH4%2BF6PmVOe7%2FXdEb0ltqeGd%2FzG22LU3sOozYh3mwaze9ZP4hYZdt%2Bb2nzPXZT1blZ%2B51oh%2B%2FSZXMn2%2BKq7LnAZ3nL%2FeFTGSAYad6ZPOJm2SsxK%2FHb1bX09FfYbp5KbexKykju%2B3Y7xsctx0o18MYrDxHDRlcFsxEfH48j3NnngXS%2FopJf5M3dJkocIH0%2FX2D7NSb%2BXhMdV7f1xhIejVehNW8ietnHe08HMzZF3%2B3yzi9vd6U48P6LeadsZkjgUhnMfotC7ToNJr407u7tieJgE3nWLzEb8jn2zH0%2FeRX5nsyo4bpMlseO2z06ewk5rFdin5p7mNx23wBp5o3YxJ5LuLwZjp999cq6czPQLeZtFNSeWoXctgklX%2Bva2Xz1GPK6CfleTfm%2Bvd93M7y%2F2fI2zghvJNA%2B8k6ftzMDJ9CnwTlrhcGFmxzIc3kfIa8dB5yFC3rtqFvAMzdyl722WtLpnW7xe4LnlYL8bBd5JMcMCM1%2BGo3ZwX%2BHb7639mSvvWJfddNqcDEdL%2F3hc3BlkT2Nzd3d%2BriN93znNiD3NSL%2F9QGc9fvNwui5wEuP3zrWKnORkhTsnyyDxmXPd%2BmR8hENX3pU8bIXHozjoTBc44Z1g5rwv8ejxMLlmoT1d3LFeC4spr%2BTLULgciyAu7vrTYI3zijtDV%2BJk%2BozsU2VqGq%2FlpQUAQHcrK3z%2FrpDItaDpGaRS6jPzTyFcIh2fQZNq3ExpxJRO80ae8PKMpglTZoWpMzhq%2FXJycvQvWpabuoop5wqnbKl%2FtC1%2FaoZMNEOkYss6gAnV2VKBjilsE4UE4ZgJClpCjFYUEKSZEExE1gFcSbyg6TddHSMNCVpQBZmiIOeFKyaURgJT6wCWqTTLGBTVwERxuucfZTqmQjOMtFFGETKmhdbkGMIML6guTOcyBaVlykS0C36krAMgSKOGZRmdugSapnTD9PZTyEwoqi0rQUz8%2FBZ%2Bt6DMjfNHUlRigSnucevS%2BmoVfwfglGolNBxpqjR8KW3qmH6BeSoT%2BIKW%2BgtkqsRmVznnSDMpoGyEgWDFCCUQ5oXOXPKFSR3pCs6G9TKpKlOKYwk15%2Fb6zrxkqoQMAKSyAqhZFgDOUg71uZrcQER1ozrFMjEQRFTXK4mKLQCVEQkqhkbz5YllSj8ANxOv2LAwMfe6uzsqn1xZWlRbAIA0qFhmnADdMKUhE4Sm8OXVRfjSsA4M%2BzIcv%2FQCSaY0hBSWHGEDGZ3LlG4JCDpmCqSgDWu%2Fa9%2FFa6JRqr%2Bhtcu6AX%2F%2B1%2F9Z8P%2Fh9cfh%2Fn2hPmxZxubw66%2FwE9TnUHvVzxr89tu5IYcop2TRiYHr3rmmFddmALyyASKpAiF1yZWSzoX1hmloWwBzZlnb7mUC%2Fmbe83WBkj0KljJCNcLxVoHqtUwXEEulK9FK8iz5TgpnhaQMsTtoloQsUjTm%2B7PBzJF%2F77DOVFoMbCpWUAxtc29uIyY2UAdB16BouqIphFzihWWBucRTlDIUcqosa%2Bw%2FTtqX%2F%2Fz7PzRNUzSXadJI8urWR%2Biff%2F%2BHdWs7t7PH7rTr3HR7N4PH6fBu8nlyeVRAI0ygpmKaqjpaIcaN26PKZnBrDK5%2BbEGFUSdHljfoPV457uVRc4XS5nq9LkUPk4F7ebRer%2Btmih9Z5XcuszRTNDWN3oaa9IeD8eDy6FDhmH4Tu4P7h8Hk8%2BOD61weHab0vzOq9GOWsiMDw3UmsJkpypILMyJKWtYpHP2N%2FnrcSY4OC3TMV3J0Dl%2FhAOyUUmERRl%2Fpt8%2BP23%2B0KIl6DmZpQLE1JkgwnQOOKV5Yv8Lhz4xAPXoLP11CrVWD3%2BBPfwLCKNQm5WrYTjtDb6SKR0SjZgwPCpP2vsmDQhE9g8OfQ6RocQsOW2%2BBSMPJW5TQmkmgn1KkKRRdqCYrmP1rYaThIxx%2Bv9tNKAuDi4vB3bV1AOv12qxnIUV9vV5bFcd%2BL67nAThzsw5SiMwF1rLQJiyl2EyApDI00kK%2FNH4sMv5zowx0XpykVGepgONWe5tY2eez5i6hw1eNPre%2B%2FjGfUVa9GSq5CfUq9IvAUmqo%2FraUbFYRm8ss5Aw%2Fxjrh51YV4UZGqvgvwpgq9chlBIcVq3eGXEaqWSo0uIzKUDRNZVro%2F8CgUCj1t%2FAKzDNCy4Cs%2FICIyxDxJpZJIkXDdPb8e%2BdrmZJlajIoVbb5M6WpMJ1ZylTDh9aH1l8Ao2qpT1EqmKpUxxUlCZ0zQQmguaZpge5e7G3Y0oaX3tudXxqtRqvRPjP%2BTZ8MmbakNKv49xLbv3AZfS0ZY550VFnJgrAU6svXGP2%2B1w5jp76%2B8MgEoZuGOXxB8z962XPS3DMp6X7x09Vd%2F7P%2F1wEY4UfrojjjSESXNSpqRkAR%2BWhtGXOhmeb04%2FbKNMvPb8cJ1QhwjFJF9WUt0%2FP6hxo0P1oXzdLPRShJDpgjpS5rWAqNmKBpbc%2BD0aPpx4u4vYsStz%2BW9jTdUyRsBYxc1tYpWi4LH9aQci7Bkykn1kWTsNWe%2BlxKTdOP%2F%2Fs%2FcPgzMXPiP%2F%2FDf3vRrMTWRdNkViRaALFtX4zMPIn2f7lYOJZrAXUXDs3UPjvczvM%2FYm8cDIo9AGYpmDcw3jZP5UkoOcPAmVhYXEBd%2FXBCvZwHL1fPXiiXKvPus8oXyJWEXGawZio23E%2FLw3I6%2FlfNUpRTrCEX5pdJzaeqBrVbWTsHIgvMMFIUDovjHYY%2BVfC2fEkwwXSDlBtv5%2FscwpSixfn5zuJWwttiVVQyqhC2iBTUsuQCahODSjm2SfEzp6q0Zr16aNTrb6z%2FCwAA%2F%2F%2F%2BxAo3oRUAAA%3D%3D&Version=2016-11-15
2020-07-10T16:25:57.021+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:57 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RunInstances Details:
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 400 Bad Request
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:57 GMT
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:57 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <Response><Errors><Error><Code>InvalidParameterValue</Code><Message>Value (instance-profile) for parameter iamInstanceProfile.name is invalid. Invalid IAM Instance Profile name</Message></Error></Errors><RequestID>83828ca1-e4e6-43e0-8c07-f19673918d62</RequestID></Response>
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:57 [DEBUG] [aws-sdk-go] DEBUG: Validate Response ec2/RunInstances failed, attempt 0/25, error InvalidParameterValue: Value (instance-profile) for parameter iamInstanceProfile.name is invalid. Invalid IAM Instance Profile name
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 	status code: 400, request id: 83828ca1-e4e6-43e0-8c07-f19673918d62
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:57 [DEBUG] Invalid IAM Instance Profile referenced, retrying...
2020-07-10T16:25:57.503+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:57 [TRACE] Waiting 2s before next try
2020/07/10 16:25:58 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_instance.main"
2020/07/10 16:25:58 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "output.public-ip"
2020/07/10 16:25:59 [TRACE] dag/walk: vertex "output.public-ip" is waiting for "aws_instance.main"
2020/07/10 16:25:59 [TRACE] dag/walk: vertex "root" is waiting for "provider.aws (close)"
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:59 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RunInstances Details:
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 4634
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=c00a19091888882268c09989511e02e4d1fb144d81bf18dc025a29fb9175c9eb
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152559Z
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=RunInstances&ClientToken=CFE69599-1248-4683-8057-752DC54187B2&DisableApiTermination=false&EbsOptimized=false&HibernationOptions.Configured=false&IamInstanceProfile.Name=instance-profile&ImageId=ami-00f6a0c18edb19300&InstanceType=t2.micro&KeyName=Michael-EU-West2&MaxCount=1&MinCount=1&Monitoring.Enabled=false&Placement.AvailabilityZone=&Placement.GroupName=&SecurityGroupId.1=sg-0d7af5cbbf39093fe&SecurityGroupId.2=sg-06f7dddb3983ea1eb&TagSpecification.1.ResourceType=instance&TagSpecification.1.Tag.1.Key=Name&TagSpecification.1.Tag.1.Value=terraform-docker-registry&UserData=H4sIAAAAAAAA%2F7xX3XLbOJa%2BZ1Xe4bTsHXdmR7%2BO0%2FFftiRZpqhY9piKRZE9XQ4IQCQsENASoCS6K1XzGvMI%2Bxr7KPMkWyApRW4nd7Pji1R4cH6%2F8%2BEcqC%2BFpkLXP%2BdLegZJxjVbolQ3E7ah5BxCmQmC0vyyNnbGg97dw%2B1V1%2FVrlvmqT2mqmBRn0G603lhvrHp9X%2BmNtfOdIqHmNK0PBJaEiegMfgmZ3lMogmu60U3MZUbqWIo5i95YY5bQV2EO9nWsdco0fZwzTtWZBVAHXDo9Ayfv6k%2BsFYXe6SL4LCPqXeuwX8g%2BOXmvgz7LCHemLccOWn%2Bd8Tj01tFdJJ%2Bcrnxyrl0eznrKn7ncsU8Txx5EOJkKNLttYbGI%2FM5pFiRckNkoJjZfhezdJyfvGr8j0u9xOuxx%2F9h9doauDCa9JOxsFPJOhDMMYpzw2E82HD9LY6Od4YgHHb4Kn2R0PyWfd9%2Bsd4zsaR5Mei1kP0QPz%2BPIF9MnVOTMnx3b5djerKg3XThDd3WX9%2BIwuS992qO239GcXMmI2DF37JM49B6isONX39V5v9cK896azG5lFfeZDEcnju3GxB5ExP6Q9dnY1DVDM1eGxyZ2exXYPKEez4K8zC2wp4k%2FmyrS7z2Fnbb2vZOFY2%2BWYfIQ%2BbORIF6bh8J9LrA0mNzLp5fxuPY9wm%2F6Jpd7k%2BMS58bXSYI80sbJdQt5p5kznGaBPc2LHtndVTBzn2467srUgtlpHnhkiY%2FdnE5OK1ucUa%2Bt%2FP67TySZ5rjCedx%2Ft%2Bknm1VgetDvqWAW8PBKRk7icl9MhRPJyLGDFU7aMRm6HD%2BZs%2BVz2HnH%2BqwbBQnnoe0%2B3xm9ftfwKCcJfzI8c8ReXdHymdinuamt0LVvY78T862dn2xWfuJy3LnN0azXCo%2Bd905%2FtAyTNg%2B905xOHJPf87jIsxvtc8VJpu2bGeH4%2BF6PmVOe7%2FXdEb0ltqeGd%2FzG22LU3sOozYh3mwaze9ZP4hYZdt%2Bb2nzPXZT1blZ%2B51oh%2B%2FSZXMn2%2BKq7LnAZ3nL%2FeFTGSAYad6ZPOJm2SsxK%2FHb1bX09FfYbp5KbexKykju%2B3Y7xsctx0o18MYrDxHDRlcFsxEfH48j3NnngXS%2FopJf5M3dJkocIH0%2FX2D7NSb%2BXhMdV7f1xhIejVehNW8ietnHe08HMzZF3%2B3yzi9vd6U48P6LeadsZkjgUhnMfotC7ToNJr407u7tieJgE3nWLzEb8jn2zH0%2FeRX5nsyo4bpMlseO2z06ewk5rFdin5p7mNx23wBp5o3YxJ5LuLwZjp999cq6czPQLeZtFNSeWoXctgklX%2Bva2Xz1GPK6CfleTfm%2Bvd93M7y%2F2fI2zghvJNA%2B8k6ftzMDJ9CnwTlrhcGFmxzIc3kfIa8dB5yFC3rtqFvAMzdyl722WtLpnW7xe4LnlYL8bBd5JMcMCM1%2BGo3ZwX%2BHb7639mSvvWJfddNqcDEdL%2F3hc3BlkT2Nzd3d%2BriN93znNiD3NSL%2F9QGc9fvNwui5wEuP3zrWKnORkhTsnyyDxmXPd%2BmR8hENX3pU8bIXHozjoTBc44Z1g5rwv8ejxMLlmoT1d3LFeC4spr%2BTLULgciyAu7vrTYI3zijtDV%2BJk%2BozsU2VqGq%2FlpQUAQHcrK3z%2FrpDItaDpGaRS6jPzTyFcIh2fQZNq3ExpxJRO80ae8PKMpglTZoWpMzhq%2FXJycvQvWpabuoop5wqnbKl%2FtC1%2FaoZMNEOkYss6gAnV2VKBjilsE4UE4ZgJClpCjFYUEKSZEExE1gFcSbyg6TddHSMNCVpQBZmiIOeFKyaURgJT6wCWqTTLGBTVwERxuucfZTqmQjOMtFFGETKmhdbkGMIML6guTOcyBaVlykS0C36krAMgSKOGZRmdugSapnTD9PZTyEwoqi0rQUz8%2FBZ%2Bt6DMjfNHUlRigSnucevS%2BmoVfwfglGolNBxpqjR8KW3qmH6BeSoT%2BIKW%2BgtkqsRmVznnSDMpoGyEgWDFCCUQ5oXOXPKFSR3pCs6G9TKpKlOKYwk15%2Fb6zrxkqoQMAKSyAqhZFgDOUg71uZrcQER1ozrFMjEQRFTXK4mKLQCVEQkqhkbz5YllSj8ANxOv2LAwMfe6uzsqn1xZWlRbAIA0qFhmnADdMKUhE4Sm8OXVRfjSsA4M%2BzIcv%2FQCSaY0hBSWHGEDGZ3LlG4JCDpmCqSgDWu%2Fa9%2FFa6JRqr%2Bhtcu6AX%2F%2B1%2F9Z8P%2Fh9cfh%2Fn2hPmxZxubw66%2FwE9TnUHvVzxr89tu5IYcop2TRiYHr3rmmFddmALyyASKpAiF1yZWSzoX1hmloWwBzZlnb7mUC%2Fmbe83WBkj0KljJCNcLxVoHqtUwXEEulK9FK8iz5TgpnhaQMsTtoloQsUjTm%2B7PBzJF%2F77DOVFoMbCpWUAxtc29uIyY2UAdB16BouqIphFzihWWBucRTlDIUcqosa%2Bw%2FTtqX%2F%2Fz7PzRNUzSXadJI8urWR%2Biff%2F%2BHdWs7t7PH7rTr3HR7N4PH6fBu8nlyeVRAI0ygpmKaqjpaIcaN26PKZnBrDK5%2BbEGFUSdHljfoPV457uVRc4XS5nq9LkUPk4F7ebRer%2Btmih9Z5XcuszRTNDWN3oaa9IeD8eDy6FDhmH4Tu4P7h8Hk8%2BOD61weHab0vzOq9GOWsiMDw3UmsJkpypILMyJKWtYpHP2N%2FnrcSY4OC3TMV3J0Dl%2FhAOyUUmERRl%2Fpt8%2BP23%2B0KIl6DmZpQLE1JkgwnQOOKV5Yv8Lhz4xAPXoLP11CrVWD3%2BBPfwLCKNQm5WrYTjtDb6SKR0SjZgwPCpP2vsmDQhE9g8OfQ6RocQsOW2%2BBSMPJW5TQmkmgn1KkKRRdqCYrmP1rYaThIxx%2Bv9tNKAuDi4vB3bV1AOv12qxnIUV9vV5bFcd%2BL67nAThzsw5SiMwF1rLQJiyl2EyApDI00kK%2FNH4sMv5zowx0XpykVGepgONWe5tY2eez5i6hw1eNPre%2B%2FjGfUVa9GSq5CfUq9IvAUmqo%2FraUbFYRm8ss5Aw%2Fxjrh51YV4UZGqvgvwpgq9chlBIcVq3eGXEaqWSo0uIzKUDRNZVro%2F8CgUCj1t%2FAKzDNCy4Cs%2FICIyxDxJpZJIkXDdPb8e%2BdrmZJlajIoVbb5M6WpMJ1ZylTDh9aH1l8Ao2qpT1EqmKpUxxUlCZ0zQQmguaZpge5e7G3Y0oaX3tudXxqtRqvRPjP%2BTZ8MmbakNKv49xLbv3AZfS0ZY550VFnJgrAU6svXGP2%2B1w5jp76%2B8MgEoZuGOXxB8z962XPS3DMp6X7x09Vd%2F7P%2F1wEY4UfrojjjSESXNSpqRkAR%2BWhtGXOhmeb04%2FbKNMvPb8cJ1QhwjFJF9WUt0%2FP6hxo0P1oXzdLPRShJDpgjpS5rWAqNmKBpbc%2BD0aPpx4u4vYsStz%2BW9jTdUyRsBYxc1tYpWi4LH9aQci7Bkykn1kWTsNWe%2BlxKTdOP%2F%2Fs%2FcPgzMXPiP%2F%2FDf3vRrMTWRdNkViRaALFtX4zMPIn2f7lYOJZrAXUXDs3UPjvczvM%2FYm8cDIo9AGYpmDcw3jZP5UkoOcPAmVhYXEBd%2FXBCvZwHL1fPXiiXKvPus8oXyJWEXGawZio23E%2FLw3I6%2FlfNUpRTrCEX5pdJzaeqBrVbWTsHIgvMMFIUDovjHYY%2BVfC2fEkwwXSDlBtv5%2FscwpSixfn5zuJWwttiVVQyqhC2iBTUsuQCahODSjm2SfEzp6q0Zr16aNTrb6z%2FCwAA%2F%2F%2F%2BxAo3oRUAAA%3D%3D&Version=2016-11-15
2020-07-10T16:25:59.507+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:59 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RunInstances Details:
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 400 Bad Request
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:25:59 GMT
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:59 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <Response><Errors><Error><Code>InvalidParameterValue</Code><Message>Value (instance-profile) for parameter iamInstanceProfile.name is invalid. Invalid IAM Instance Profile name</Message></Error></Errors><RequestID>aaf5cc34-5440-43b5-b36f-f1f55d8f777f</RequestID></Response>
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:59 [DEBUG] [aws-sdk-go] DEBUG: Validate Response ec2/RunInstances failed, attempt 0/25, error InvalidParameterValue: Value (instance-profile) for parameter iamInstanceProfile.name is invalid. Invalid IAM Instance Profile name
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 	status code: 400, request id: aaf5cc34-5440-43b5-b36f-f1f55d8f777f
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:59 [DEBUG] Invalid IAM Instance Profile referenced, retrying...
2020-07-10T16:25:59.973+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:25:59 [TRACE] Waiting 4s before next try
2020/07/10 16:26:03 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_instance.main"
2020/07/10 16:26:03 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "output.public-ip"
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:03 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RunInstances Details:
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 4634
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=ff6c0493955eef2877982f3bf5e9c2e619ec3a980831bdb747dd43e8d1dfb160
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152603Z
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=RunInstances&ClientToken=C0CD3C88-48E6-4538-9F77-5C52107A5832&DisableApiTermination=false&EbsOptimized=false&HibernationOptions.Configured=false&IamInstanceProfile.Name=instance-profile&ImageId=ami-00f6a0c18edb19300&InstanceType=t2.micro&KeyName=Michael-EU-West2&MaxCount=1&MinCount=1&Monitoring.Enabled=false&Placement.AvailabilityZone=&Placement.GroupName=&SecurityGroupId.1=sg-0d7af5cbbf39093fe&SecurityGroupId.2=sg-06f7dddb3983ea1eb&TagSpecification.1.ResourceType=instance&TagSpecification.1.Tag.1.Key=Name&TagSpecification.1.Tag.1.Value=terraform-docker-registry&UserData=H4sIAAAAAAAA%2F7xX3XLbOJa%2BZ1Xe4bTsHXdmR7%2BO0%2FFftiRZpqhY9piKRZE9XQ4IQCQsENASoCS6K1XzGvMI%2Bxr7KPMkWyApRW4nd7Pji1R4cH6%2F8%2BEcqC%2BFpkLXP%2BdLegZJxjVbolQ3E7ah5BxCmQmC0vyyNnbGg97dw%2B1V1%2FVrlvmqT2mqmBRn0G603lhvrHp9X%2BmNtfOdIqHmNK0PBJaEiegMfgmZ3lMogmu60U3MZUbqWIo5i95YY5bQV2EO9nWsdco0fZwzTtWZBVAHXDo9Ayfv6k%2BsFYXe6SL4LCPqXeuwX8g%2BOXmvgz7LCHemLccOWn%2Bd8Tj01tFdJJ%2Bcrnxyrl0eznrKn7ncsU8Txx5EOJkKNLttYbGI%2FM5pFiRckNkoJjZfhezdJyfvGr8j0u9xOuxx%2F9h9doauDCa9JOxsFPJOhDMMYpzw2E82HD9LY6Od4YgHHb4Kn2R0PyWfd9%2Bsd4zsaR5Mei1kP0QPz%2BPIF9MnVOTMnx3b5djerKg3XThDd3WX9%2BIwuS992qO239GcXMmI2DF37JM49B6isONX39V5v9cK896azG5lFfeZDEcnju3GxB5ExP6Q9dnY1DVDM1eGxyZ2exXYPKEez4K8zC2wp4k%2FmyrS7z2Fnbb2vZOFY2%2BWYfIQ%2BbORIF6bh8J9LrA0mNzLp5fxuPY9wm%2F6Jpd7k%2BMS58bXSYI80sbJdQt5p5kznGaBPc2LHtndVTBzn2467srUgtlpHnhkiY%2FdnE5OK1ucUa%2Bt%2FP67TySZ5rjCedx%2Ft%2Bknm1VgetDvqWAW8PBKRk7icl9MhRPJyLGDFU7aMRm6HD%2BZs%2BVz2HnH%2BqwbBQnnoe0%2B3xm9ftfwKCcJfzI8c8ReXdHymdinuamt0LVvY78T862dn2xWfuJy3LnN0azXCo%2Bd905%2FtAyTNg%2B905xOHJPf87jIsxvtc8VJpu2bGeH4%2BF6PmVOe7%2FXdEb0ltqeGd%2FzG22LU3sOozYh3mwaze9ZP4hYZdt%2Bb2nzPXZT1blZ%2B51oh%2B%2FSZXMn2%2BKq7LnAZ3nL%2FeFTGSAYad6ZPOJm2SsxK%2FHb1bX09FfYbp5KbexKykju%2B3Y7xsctx0o18MYrDxHDRlcFsxEfH48j3NnngXS%2FopJf5M3dJkocIH0%2FX2D7NSb%2BXhMdV7f1xhIejVehNW8ietnHe08HMzZF3%2B3yzi9vd6U48P6LeadsZkjgUhnMfotC7ToNJr407u7tieJgE3nWLzEb8jn2zH0%2FeRX5nsyo4bpMlseO2z06ewk5rFdin5p7mNx23wBp5o3YxJ5LuLwZjp999cq6czPQLeZtFNSeWoXctgklX%2Bva2Xz1GPK6CfleTfm%2Bvd93M7y%2F2fI2zghvJNA%2B8k6ftzMDJ9CnwTlrhcGFmxzIc3kfIa8dB5yFC3rtqFvAMzdyl722WtLpnW7xe4LnlYL8bBd5JMcMCM1%2BGo3ZwX%2BHb7639mSvvWJfddNqcDEdL%2F3hc3BlkT2Nzd3d%2BriN93znNiD3NSL%2F9QGc9fvNwui5wEuP3zrWKnORkhTsnyyDxmXPd%2BmR8hENX3pU8bIXHozjoTBc44Z1g5rwv8ejxMLlmoT1d3LFeC4spr%2BTLULgciyAu7vrTYI3zijtDV%2BJk%2BozsU2VqGq%2FlpQUAQHcrK3z%2FrpDItaDpGaRS6jPzTyFcIh2fQZNq3ExpxJRO80ae8PKMpglTZoWpMzhq%2FXJycvQvWpabuoop5wqnbKl%2FtC1%2FaoZMNEOkYss6gAnV2VKBjilsE4UE4ZgJClpCjFYUEKSZEExE1gFcSbyg6TddHSMNCVpQBZmiIOeFKyaURgJT6wCWqTTLGBTVwERxuucfZTqmQjOMtFFGETKmhdbkGMIML6guTOcyBaVlykS0C36krAMgSKOGZRmdugSapnTD9PZTyEwoqi0rQUz8%2FBZ%2Bt6DMjfNHUlRigSnucevS%2BmoVfwfglGolNBxpqjR8KW3qmH6BeSoT%2BIKW%2BgtkqsRmVznnSDMpoGyEgWDFCCUQ5oXOXPKFSR3pCs6G9TKpKlOKYwk15%2Fb6zrxkqoQMAKSyAqhZFgDOUg71uZrcQER1ozrFMjEQRFTXK4mKLQCVEQkqhkbz5YllSj8ANxOv2LAwMfe6uzsqn1xZWlRbAIA0qFhmnADdMKUhE4Sm8OXVRfjSsA4M%2BzIcv%2FQCSaY0hBSWHGEDGZ3LlG4JCDpmCqSgDWu%2Fa9%2FFa6JRqr%2Bhtcu6AX%2F%2B1%2F9Z8P%2Fh9cfh%2Fn2hPmxZxubw66%2FwE9TnUHvVzxr89tu5IYcop2TRiYHr3rmmFddmALyyASKpAiF1yZWSzoX1hmloWwBzZlnb7mUC%2Fmbe83WBkj0KljJCNcLxVoHqtUwXEEulK9FK8iz5TgpnhaQMsTtoloQsUjTm%2B7PBzJF%2F77DOVFoMbCpWUAxtc29uIyY2UAdB16BouqIphFzihWWBucRTlDIUcqosa%2Bw%2FTtqX%2F%2Fz7PzRNUzSXadJI8urWR%2Biff%2F%2BHdWs7t7PH7rTr3HR7N4PH6fBu8nlyeVRAI0ygpmKaqjpaIcaN26PKZnBrDK5%2BbEGFUSdHljfoPV457uVRc4XS5nq9LkUPk4F7ebRer%2Btmih9Z5XcuszRTNDWN3oaa9IeD8eDy6FDhmH4Tu4P7h8Hk8%2BOD61weHab0vzOq9GOWsiMDw3UmsJkpypILMyJKWtYpHP2N%2FnrcSY4OC3TMV3J0Dl%2FhAOyUUmERRl%2Fpt8%2BP23%2B0KIl6DmZpQLE1JkgwnQOOKV5Yv8Lhz4xAPXoLP11CrVWD3%2BBPfwLCKNQm5WrYTjtDb6SKR0SjZgwPCpP2vsmDQhE9g8OfQ6RocQsOW2%2BBSMPJW5TQmkmgn1KkKRRdqCYrmP1rYaThIxx%2Bv9tNKAuDi4vB3bV1AOv12qxnIUV9vV5bFcd%2BL67nAThzsw5SiMwF1rLQJiyl2EyApDI00kK%2FNH4sMv5zowx0XpykVGepgONWe5tY2eez5i6hw1eNPre%2B%2FjGfUVa9GSq5CfUq9IvAUmqo%2FraUbFYRm8ss5Aw%2Fxjrh51YV4UZGqvgvwpgq9chlBIcVq3eGXEaqWSo0uIzKUDRNZVro%2F8CgUCj1t%2FAKzDNCy4Cs%2FICIyxDxJpZJIkXDdPb8e%2BdrmZJlajIoVbb5M6WpMJ1ZylTDh9aH1l8Ao2qpT1EqmKpUxxUlCZ0zQQmguaZpge5e7G3Y0oaX3tudXxqtRqvRPjP%2BTZ8MmbakNKv49xLbv3AZfS0ZY550VFnJgrAU6svXGP2%2B1w5jp76%2B8MgEoZuGOXxB8z962XPS3DMp6X7x09Vd%2F7P%2F1wEY4UfrojjjSESXNSpqRkAR%2BWhtGXOhmeb04%2FbKNMvPb8cJ1QhwjFJF9WUt0%2FP6hxo0P1oXzdLPRShJDpgjpS5rWAqNmKBpbc%2BD0aPpx4u4vYsStz%2BW9jTdUyRsBYxc1tYpWi4LH9aQci7Bkykn1kWTsNWe%2BlxKTdOP%2F%2Fs%2FcPgzMXPiP%2F%2FDf3vRrMTWRdNkViRaALFtX4zMPIn2f7lYOJZrAXUXDs3UPjvczvM%2FYm8cDIo9AGYpmDcw3jZP5UkoOcPAmVhYXEBd%2FXBCvZwHL1fPXiiXKvPus8oXyJWEXGawZio23E%2FLw3I6%2FlfNUpRTrCEX5pdJzaeqBrVbWTsHIgvMMFIUDovjHYY%2BVfC2fEkwwXSDlBtv5%2FscwpSixfn5zuJWwttiVVQyqhC2iBTUsuQCahODSjm2SfEzp6q0Zr16aNTrb6z%2FCwAA%2F%2F%2F%2BxAo3oRUAAA%3D%3D&Version=2016-11-15
2020-07-10T16:26:03.979+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020/07/10 16:26:04 [TRACE] dag/walk: vertex "output.public-ip" is waiting for "aws_instance.main"
2020/07/10 16:26:04 [TRACE] dag/walk: vertex "root" is waiting for "provider.aws (close)"
2020-07-10T16:26:05.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:05 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RunInstances Details:
2020-07-10T16:26:05.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:26:05.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:26:05.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:26:05.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:26:05.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:26:05.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:26:04 GMT
2020-07-10T16:26:05.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:26:05.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Vary: accept-encoding
2020-07-10T16:26:05.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: b0d7ecda-94d8-43ce-9749-0b304aea6812
2020-07-10T16:26:05.276+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:05 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <RunInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>b0d7ecda-94d8-43ce-9749-0b304aea6812</requestId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <reservationId>r-0c2da86222111ae1b</reservationId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <ownerId>904806826062</ownerId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <groupSet/>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <instancesSet>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <instanceId>i-0ea88f58e265b731f</instanceId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <imageId>ami-00f6a0c18edb19300</imageId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <instanceState>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <code>0</code>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <name>pending</name>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </instanceState>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <dnsName></dnsName>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <reason></reason>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <keyName>Michael-EU-West2</keyName>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <amiLaunchIndex>0</amiLaunchIndex>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <productCodes/>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <instanceType>t2.micro</instanceType>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <launchTime>2020-07-10T15:26:05.000Z</launchTime>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <placement>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <availabilityZone>eu-west-2a</availabilityZone>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <groupName></groupName>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <tenancy>default</tenancy>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </placement>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <monitoring>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <state>disabled</state>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </monitoring>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <subnetId>subnet-81e4c2fa</subnetId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <sourceDestCheck>true</sourceDestCheck>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupSet>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groupName>allow-ssh-and-egress</groupName>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groupName>allow-registry-ingress</groupName>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </groupSet>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <stateReason>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <code>pending</code>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <message>pending</message>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </stateReason>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <architecture>x86_64</architecture>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <blockDeviceMapping/>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <virtualizationType>hvm</virtualizationType>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <clientToken>C0CD3C88-48E6-4538-9F77-5C52107A5832</clientToken>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <tagSet>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <key>Name</key>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <value>terraform-docker-registry</value>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </tagSet>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hypervisor>xen</hypervisor>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <networkInterfaceSet>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <networkInterfaceId>eni-00256118c55496b4b</networkInterfaceId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <subnetId>subnet-81e4c2fa</subnetId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <description></description>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ownerId>904806826062</ownerId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <status>in-use</status>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <macAddress>06:66:85:5b:2a:c8</macAddress>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <sourceDestCheck>true</sourceDestCheck>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groupSet>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupName>allow-ssh-and-egress</groupName>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupName>allow-registry-ingress</groupName>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </groupSet>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <attachment>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <attachmentId>eni-attach-0fbb181f13ee2021c</attachmentId>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deviceIndex>0</deviceIndex>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <status>attaching</status>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <attachTime>2020-07-10T15:26:05.000Z</attachTime>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </attachment>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <privateIpAddressesSet>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <primary>true</primary>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </privateIpAddressesSet>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipv6AddressesSet/>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <interfaceType>interface</interfaceType>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </networkInterfaceSet>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <iamInstanceProfile>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <arn>arn:aws:iam::904806826062:instance-profile/instance-profile</arn>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <id>AIPA5FKVQQBHP5UHK555Z</id>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </iamInstanceProfile>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ebsOptimized>false</ebsOptimized>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <cpuOptions>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <coreCount>1</coreCount>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <threadsPerCore>1</threadsPerCore>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </cpuOptions>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <capacityReservationSpecification>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <capacityReservationPreference>open</capacityReservationPreference>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </capacityReservationSpecification>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <hibernationOptions>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <configured>false</configured>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </hibernationOptions>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <enclaveOptions>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <enabled>false</enabled>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </enclaveOptions>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <metadataOptions>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <state>pending</state>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <httpTokens>optional</httpTokens>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <httpPutResponseHopLimit>1</httpPutResponseHopLimit>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <httpEndpoint>enabled</httpEndpoint>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </metadataOptions>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </instancesSet>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </RunInstancesResponse>
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:05 [INFO] Instance ID: i-0ea88f58e265b731f
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:05 [DEBUG] Waiting for instance (i-0ea88f58e265b731f) to become running
2020-07-10T16:26:05.277+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:05 [DEBUG] Waiting for state to become: [running]
2020/07/10 16:26:08 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_instance.main"
2020/07/10 16:26:08 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "output.public-ip"
2020/07/10 16:26:09 [TRACE] dag/walk: vertex "output.public-ip" is waiting for "aws_instance.main"
2020/07/10 16:26:09 [TRACE] dag/walk: vertex "root" is waiting for "provider.aws (close)"
2020/07/10 16:26:13 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_instance.main"
2020/07/10 16:26:13 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "output.public-ip"
2020/07/10 16:26:14 [TRACE] dag/walk: vertex "output.public-ip" is waiting for "aws_instance.main"
2020/07/10 16:26:14 [TRACE] dag/walk: vertex "root" is waiting for "provider.aws (close)"
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:15 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 76
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=2d483742962402e3a6c91535d8413fc50a7ea5166c90761d86b0c5c35bbaec29
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152615Z
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeInstances&InstanceId.1=i-0ea88f58e265b731f&Version=2016-11-15
2020-07-10T16:26:15.282+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:15 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:26:15 GMT
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Vary: accept-encoding
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: d505d234-3a09-49e2-8244-943b7770945e
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:15 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>d505d234-3a09-49e2-8244-943b7770945e</requestId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <reservationSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <reservationId>r-0c2da86222111ae1b</reservationId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ownerId>904806826062</ownerId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupSet/>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <instancesSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceId>i-0ea88f58e265b731f</instanceId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <imageId>ami-00f6a0c18edb19300</imageId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceState>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <code>0</code>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <name>pending</name>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </instanceState>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <dnsName>ec2-3-8-172-77.eu-west-2.compute.amazonaws.com</dnsName>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <reason/>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <keyName>Michael-EU-West2</keyName>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <amiLaunchIndex>0</amiLaunchIndex>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <productCodes/>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceType>t2.micro</instanceType>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <launchTime>2020-07-10T15:26:05.000Z</launchTime>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <placement>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <availabilityZone>eu-west-2a</availabilityZone>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <groupName/>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <tenancy>default</tenancy>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </placement>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <monitoring>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <state>disabled</state>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </monitoring>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <subnetId>subnet-81e4c2fa</subnetId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipAddress>3.8.172.77</ipAddress>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <sourceDestCheck>true</sourceDestCheck>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groupSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupName>allow-ssh-and-egress</groupName>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupName>allow-registry-ingress</groupName>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </groupSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <architecture>x86_64</architecture>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <blockDeviceMapping>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <deviceName>/dev/sda1</deviceName>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <ebs>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <volumeId>vol-05f454abf525de63b</volumeId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <status>attaching</status>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <attachTime>2020-07-10T15:26:05.000Z</attachTime>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </ebs>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </blockDeviceMapping>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualizationType>hvm</virtualizationType>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <clientToken>C0CD3C88-48E6-4538-9F77-5C52107A5832</clientToken>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <tagSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <key>Name</key>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <value>terraform-docker-registry</value>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </tagSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <hypervisor>xen</hypervisor>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <networkInterfaceSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <networkInterfaceId>eni-00256118c55496b4b</networkInterfaceId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <subnetId>subnet-81e4c2fa</subnetId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <description/>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <ownerId>904806826062</ownerId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <status>in-use</status>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <macAddress>06:66:85:5b:2a:c8</macAddress>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <sourceDestCheck>true</sourceDestCheck>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupName>allow-ssh-and-egress</groupName>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 </item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupName>allow-registry-ingress</groupName>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 </item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </groupSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <attachment>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <attachmentId>eni-attach-0fbb181f13ee2021c</attachmentId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <deviceIndex>0</deviceIndex>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <status>attaching</status>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <attachTime>2020-07-10T15:26:05.000Z</attachTime>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </attachment>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <association>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <publicIp>3.8.172.77</publicIp>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <publicDnsName>ec2-3-8-172-77.eu-west-2.compute.amazonaws.com</publicDnsName>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <ipOwnerId>amazon</ipOwnerId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </association>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateIpAddressesSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <primary>true</primary>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <association>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <publicIp>3.8.172.77</publicIp>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <publicDnsName>ec2-3-8-172-77.eu-west-2.compute.amazonaws.com</publicDnsName>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <ipOwnerId>amazon</ipOwnerId>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     </association>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 </item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </privateIpAddressesSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <ipv6AddressesSet/>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <interfaceType>interface</interfaceType>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </networkInterfaceSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <iamInstanceProfile>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <arn>arn:aws:iam::904806826062:instance-profile/instance-profile</arn>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <id>AIPA5FKVQQBHP5UHK555Z</id>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </iamInstanceProfile>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebsOptimized>false</ebsOptimized>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <enaSupport>true</enaSupport>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <cpuOptions>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <coreCount>1</coreCount>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <threadsPerCore>1</threadsPerCore>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </cpuOptions>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <capacityReservationSpecification>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <capacityReservationPreference>open</capacityReservationPreference>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </capacityReservationSpecification>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <hibernationOptions>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <configured>false</configured>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </hibernationOptions>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <enclaveOptions>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <enabled>false</enabled>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </enclaveOptions>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <metadataOptions>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <state>pending</state>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <httpTokens>optional</httpTokens>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <httpPutResponseHopLimit>1</httpPutResponseHopLimit>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <httpEndpoint>enabled</httpEndpoint>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </metadataOptions>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </instancesSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </reservationSet>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeInstancesResponse>
2020-07-10T16:26:15.568+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:15 [TRACE] Waiting 3s before next try
2020/07/10 16:26:18 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_instance.main"
2020/07/10 16:26:18 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "output.public-ip"
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:18 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 76
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=e8066ee230bb8db6ca2510f5261a70216595dc9fa12ef64c160a2983ddfe6b6a
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152618Z
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeInstances&InstanceId.1=i-0ea88f58e265b731f&Version=2016-11-15
2020-07-10T16:26:18.573+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:18 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:26:18 GMT
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Vary: accept-encoding
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 6927427e-58e7-45d3-8235-5e589d9f44b3
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:18 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>6927427e-58e7-45d3-8235-5e589d9f44b3</requestId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <reservationSet>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <reservationId>r-0c2da86222111ae1b</reservationId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ownerId>904806826062</ownerId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupSet/>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <instancesSet>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceId>i-0ea88f58e265b731f</instanceId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <imageId>ami-00f6a0c18edb19300</imageId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceState>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <code>0</code>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <name>pending</name>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </instanceState>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <dnsName>ec2-3-8-172-77.eu-west-2.compute.amazonaws.com</dnsName>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <reason/>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <keyName>Michael-EU-West2</keyName>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <amiLaunchIndex>0</amiLaunchIndex>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <productCodes/>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceType>t2.micro</instanceType>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <launchTime>2020-07-10T15:26:05.000Z</launchTime>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <placement>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <availabilityZone>eu-west-2a</availabilityZone>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <groupName/>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <tenancy>default</tenancy>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </placement>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <monitoring>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <state>disabled</state>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </monitoring>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <subnetId>subnet-81e4c2fa</subnetId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipAddress>3.8.172.77</ipAddress>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <sourceDestCheck>true</sourceDestCheck>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groupSet>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupName>allow-ssh-and-egress</groupName>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupName>allow-registry-ingress</groupName>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </groupSet>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <architecture>x86_64</architecture>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <blockDeviceMapping>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <deviceName>/dev/sda1</deviceName>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <ebs>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <volumeId>vol-05f454abf525de63b</volumeId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <status>attaching</status>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <attachTime>2020-07-10T15:26:05.000Z</attachTime>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </ebs>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </blockDeviceMapping>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualizationType>hvm</virtualizationType>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <clientToken>C0CD3C88-48E6-4538-9F77-5C52107A5832</clientToken>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <tagSet>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <key>Name</key>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <value>terraform-docker-registry</value>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </tagSet>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <hypervisor>xen</hypervisor>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <networkInterfaceSet>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <networkInterfaceId>eni-00256118c55496b4b</networkInterfaceId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <subnetId>subnet-81e4c2fa</subnetId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <description/>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <ownerId>904806826062</ownerId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <status>in-use</status>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <macAddress>06:66:85:5b:2a:c8</macAddress>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <sourceDestCheck>true</sourceDestCheck>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupSet>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupName>allow-ssh-and-egress</groupName>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 </item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <item>
2020-07-10T16:26:18.794+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupName>allow-registry-ingress</groupName>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 </item>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </groupSet>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <attachment>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <attachmentId>eni-attach-0fbb181f13ee2021c</attachmentId>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <deviceIndex>0</deviceIndex>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <status>attaching</status>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <attachTime>2020-07-10T15:26:05.000Z</attachTime>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </attachment>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <association>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <publicIp>3.8.172.77</publicIp>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <publicDnsName>ec2-3-8-172-77.eu-west-2.compute.amazonaws.com</publicDnsName>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <ipOwnerId>amazon</ipOwnerId>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </association>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateIpAddressesSet>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <item>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <primary>true</primary>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <association>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <publicIp>3.8.172.77</publicIp>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <publicDnsName>ec2-3-8-172-77.eu-west-2.compute.amazonaws.com</publicDnsName>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <ipOwnerId>amazon</ipOwnerId>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     </association>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 </item>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </privateIpAddressesSet>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <ipv6AddressesSet/>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <interfaceType>interface</interfaceType>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </networkInterfaceSet>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <iamInstanceProfile>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <arn>arn:aws:iam::904806826062:instance-profile/instance-profile</arn>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <id>AIPA5FKVQQBHP5UHK555Z</id>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </iamInstanceProfile>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebsOptimized>false</ebsOptimized>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <enaSupport>true</enaSupport>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <cpuOptions>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <coreCount>1</coreCount>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <threadsPerCore>1</threadsPerCore>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </cpuOptions>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <capacityReservationSpecification>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <capacityReservationPreference>open</capacityReservationPreference>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </capacityReservationSpecification>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <hibernationOptions>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <configured>false</configured>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </hibernationOptions>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <enclaveOptions>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <enabled>false</enabled>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </enclaveOptions>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <metadataOptions>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <state>pending</state>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <httpTokens>optional</httpTokens>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <httpPutResponseHopLimit>1</httpPutResponseHopLimit>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <httpEndpoint>enabled</httpEndpoint>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </metadataOptions>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </instancesSet>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </reservationSet>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeInstancesResponse>
2020-07-10T16:26:18.795+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:18 [TRACE] Waiting 6s before next try
2020/07/10 16:26:19 [TRACE] dag/walk: vertex "output.public-ip" is waiting for "aws_instance.main"
2020/07/10 16:26:19 [TRACE] dag/walk: vertex "root" is waiting for "provider.aws (close)"
2020/07/10 16:26:23 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_instance.main"
2020/07/10 16:26:23 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "output.public-ip"
2020/07/10 16:26:24 [TRACE] dag/walk: vertex "output.public-ip" is waiting for "aws_instance.main"
2020/07/10 16:26:24 [TRACE] dag/walk: vertex "root" is waiting for "provider.aws (close)"
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:24 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 76
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=f2e305cf055fa2c1fb595dc6f0ce73a48a31bfd92ac6c666d1e67045da5c636f
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152624Z
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeInstances&InstanceId.1=i-0ea88f58e265b731f&Version=2016-11-15
2020-07-10T16:26:24.798+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:25 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:26:24 GMT
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Vary: accept-encoding
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 07913245-df8b-4e7e-9d0c-ca6cf777b328
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:25 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>07913245-df8b-4e7e-9d0c-ca6cf777b328</requestId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <reservationSet>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <reservationId>r-0c2da86222111ae1b</reservationId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ownerId>904806826062</ownerId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupSet/>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <instancesSet>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceId>i-0ea88f58e265b731f</instanceId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <imageId>ami-00f6a0c18edb19300</imageId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceState>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <code>16</code>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <name>running</name>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </instanceState>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <dnsName>ec2-3-8-172-77.eu-west-2.compute.amazonaws.com</dnsName>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <reason/>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <keyName>Michael-EU-West2</keyName>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <amiLaunchIndex>0</amiLaunchIndex>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <productCodes/>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceType>t2.micro</instanceType>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <launchTime>2020-07-10T15:26:05.000Z</launchTime>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <placement>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <availabilityZone>eu-west-2a</availabilityZone>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <groupName/>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <tenancy>default</tenancy>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </placement>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <monitoring>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <state>disabled</state>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </monitoring>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <subnetId>subnet-81e4c2fa</subnetId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipAddress>3.8.172.77</ipAddress>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <sourceDestCheck>true</sourceDestCheck>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groupSet>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupName>allow-ssh-and-egress</groupName>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupName>allow-registry-ingress</groupName>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </groupSet>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <architecture>x86_64</architecture>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <blockDeviceMapping>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <deviceName>/dev/sda1</deviceName>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <ebs>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <volumeId>vol-05f454abf525de63b</volumeId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <status>attached</status>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <attachTime>2020-07-10T15:26:05.000Z</attachTime>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </ebs>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </blockDeviceMapping>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualizationType>hvm</virtualizationType>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <clientToken>C0CD3C88-48E6-4538-9F77-5C52107A5832</clientToken>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <tagSet>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <key>Name</key>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <value>terraform-docker-registry</value>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </tagSet>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <hypervisor>xen</hypervisor>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <networkInterfaceSet>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <networkInterfaceId>eni-00256118c55496b4b</networkInterfaceId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <subnetId>subnet-81e4c2fa</subnetId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <description/>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <ownerId>904806826062</ownerId>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <status>in-use</status>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <macAddress>06:66:85:5b:2a:c8</macAddress>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <sourceDestCheck>true</sourceDestCheck>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupSet>
2020-07-10T16:26:25.085+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <item>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupName>allow-ssh-and-egress</groupName>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 </item>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <item>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupName>allow-registry-ingress</groupName>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 </item>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </groupSet>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <attachment>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <attachmentId>eni-attach-0fbb181f13ee2021c</attachmentId>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <deviceIndex>0</deviceIndex>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <status>attached</status>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <attachTime>2020-07-10T15:26:05.000Z</attachTime>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </attachment>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <association>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <publicIp>3.8.172.77</publicIp>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <publicDnsName>ec2-3-8-172-77.eu-west-2.compute.amazonaws.com</publicDnsName>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <ipOwnerId>amazon</ipOwnerId>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </association>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateIpAddressesSet>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <item>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <primary>true</primary>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <association>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <publicIp>3.8.172.77</publicIp>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <publicDnsName>ec2-3-8-172-77.eu-west-2.compute.amazonaws.com</publicDnsName>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <ipOwnerId>amazon</ipOwnerId>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     </association>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 </item>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </privateIpAddressesSet>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <ipv6AddressesSet/>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <interfaceType>interface</interfaceType>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </networkInterfaceSet>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <iamInstanceProfile>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <arn>arn:aws:iam::904806826062:instance-profile/instance-profile</arn>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <id>AIPA5FKVQQBHP5UHK555Z</id>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </iamInstanceProfile>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebsOptimized>false</ebsOptimized>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <enaSupport>true</enaSupport>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <cpuOptions>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <coreCount>1</coreCount>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <threadsPerCore>1</threadsPerCore>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </cpuOptions>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <capacityReservationSpecification>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <capacityReservationPreference>open</capacityReservationPreference>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </capacityReservationSpecification>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <hibernationOptions>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <configured>false</configured>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </hibernationOptions>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <enclaveOptions>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <enabled>false</enabled>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </enclaveOptions>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <metadataOptions>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <state>applied</state>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <httpTokens>optional</httpTokens>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <httpPutResponseHopLimit>1</httpPutResponseHopLimit>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <httpEndpoint>enabled</httpEndpoint>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </metadataOptions>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </instancesSet>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </reservationSet>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeInstancesResponse>
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:25 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 76
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=45e3c25053094b4cff65b72e0ebc260c50fbf39c0e3573b137025d4d1f60f747
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152625Z
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeInstances&InstanceId.1=i-0ea88f58e265b731f&Version=2016-11-15
2020-07-10T16:26:25.086+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:25 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:26:24 GMT
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Vary: accept-encoding
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: d2de8e11-0cff-4f86-acd9-52805f61555e
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:25 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>d2de8e11-0cff-4f86-acd9-52805f61555e</requestId>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <reservationSet>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <reservationId>r-0c2da86222111ae1b</reservationId>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ownerId>904806826062</ownerId>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <groupSet/>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <instancesSet>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceId>i-0ea88f58e265b731f</instanceId>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <imageId>ami-00f6a0c18edb19300</imageId>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceState>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <code>16</code>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <name>running</name>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </instanceState>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <dnsName>ec2-3-8-172-77.eu-west-2.compute.amazonaws.com</dnsName>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <reason/>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <keyName>Michael-EU-West2</keyName>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <amiLaunchIndex>0</amiLaunchIndex>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <productCodes/>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceType>t2.micro</instanceType>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <launchTime>2020-07-10T15:26:05.000Z</launchTime>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <placement>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <availabilityZone>eu-west-2a</availabilityZone>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <groupName/>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <tenancy>default</tenancy>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </placement>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <monitoring>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <state>disabled</state>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </monitoring>
2020-07-10T16:26:25.326+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <subnetId>subnet-81e4c2fa</subnetId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ipAddress>3.8.172.77</ipAddress>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <sourceDestCheck>true</sourceDestCheck>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <groupSet>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupName>allow-ssh-and-egress</groupName>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupName>allow-registry-ingress</groupName>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </groupSet>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <architecture>x86_64</architecture>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <rootDeviceType>ebs</rootDeviceType>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <rootDeviceName>/dev/sda1</rootDeviceName>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <blockDeviceMapping>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <deviceName>/dev/sda1</deviceName>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <ebs>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <volumeId>vol-05f454abf525de63b</volumeId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <status>attached</status>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <attachTime>2020-07-10T15:26:05.000Z</attachTime>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </ebs>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </blockDeviceMapping>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <virtualizationType>hvm</virtualizationType>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <clientToken>C0CD3C88-48E6-4538-9F77-5C52107A5832</clientToken>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <tagSet>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <key>Name</key>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <value>terraform-docker-registry</value>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </tagSet>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <hypervisor>xen</hypervisor>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <networkInterfaceSet>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <networkInterfaceId>eni-00256118c55496b4b</networkInterfaceId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <subnetId>subnet-81e4c2fa</subnetId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <description/>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <ownerId>904806826062</ownerId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <status>in-use</status>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <macAddress>06:66:85:5b:2a:c8</macAddress>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <sourceDestCheck>true</sourceDestCheck>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <groupSet>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupId>sg-06f7dddb3983ea1eb</groupId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupName>allow-ssh-and-egress</groupName>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 </item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupId>sg-0d7af5cbbf39093fe</groupId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <groupName>allow-registry-ingress</groupName>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 </item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </groupSet>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <attachment>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <attachmentId>eni-attach-0fbb181f13ee2021c</attachmentId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <deviceIndex>0</deviceIndex>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <status>attached</status>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <attachTime>2020-07-10T15:26:05.000Z</attachTime>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </attachment>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <association>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <publicIp>3.8.172.77</publicIp>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <publicDnsName>ec2-3-8-172-77.eu-west-2.compute.amazonaws.com</publicDnsName>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <ipOwnerId>amazon</ipOwnerId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </association>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <privateIpAddressesSet>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 <item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <privateIpAddress>172.31.2.40</privateIpAddress>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <privateDnsName>ip-172-31-2-40.eu-west-2.compute.internal</privateDnsName>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <primary>true</primary>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <association>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <publicIp>3.8.172.77</publicIp>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <publicDnsName>ec2-3-8-172-77.eu-west-2.compute.amazonaws.com</publicDnsName>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     <ipOwnerId>amazon</ipOwnerId>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                     </association>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                                 </item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             </privateIpAddressesSet>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <ipv6AddressesSet/>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                             <interfaceType>interface</interfaceType>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         </item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </networkInterfaceSet>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <iamInstanceProfile>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <arn>arn:aws:iam::904806826062:instance-profile/instance-profile</arn>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <id>AIPA5FKVQQBHP5UHK555Z</id>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </iamInstanceProfile>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <ebsOptimized>false</ebsOptimized>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <enaSupport>true</enaSupport>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <cpuOptions>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <coreCount>1</coreCount>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <threadsPerCore>1</threadsPerCore>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </cpuOptions>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <capacityReservationSpecification>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <capacityReservationPreference>open</capacityReservationPreference>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </capacityReservationSpecification>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <hibernationOptions>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <configured>false</configured>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </hibernationOptions>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <enclaveOptions>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <enabled>false</enabled>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </enclaveOptions>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <metadataOptions>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <state>applied</state>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <httpTokens>optional</httpTokens>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <httpPutResponseHopLimit>1</httpPutResponseHopLimit>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <httpEndpoint>enabled</httpEndpoint>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </metadataOptions>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </instancesSet>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </reservationSet>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeInstancesResponse>
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:25 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeVolumes Details:
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 115
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=c175f996c53a21a643f611340a0f8b40315ec997342ed3599456faba63021803
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152625Z
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeVolumes&Filter.1.Name=attachment.instance-id&Filter.1.Value.1=i-0ea88f58e265b731f&Version=2016-11-15
2020-07-10T16:26:25.327+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:25.626+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:25 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeVolumes Details:
2020-07-10T16:26:25.626+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:26:25.626+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:26:25.626+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:26:25.626+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 1142
2020-07-10T16:26:25.626+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:26:25.626+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:26:25 GMT
2020-07-10T16:26:25.626+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:26:25.626+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: f789c8a7-8e14-4d09-baf8-b59bd0f870a7
2020-07-10T16:26:25.626+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:25.626+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:25 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeVolumesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>f789c8a7-8e14-4d09-baf8-b59bd0f870a7</requestId>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <volumeSet>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <volumeId>vol-05f454abf525de63b</volumeId>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <size>8</size>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <snapshotId>snap-06f847eaf12ac49b1</snapshotId>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <availabilityZone>eu-west-2a</availabilityZone>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <status>in-use</status>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <createTime>2020-07-10T15:26:05.820Z</createTime>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <attachmentSet>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <volumeId>vol-05f454abf525de63b</volumeId>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceId>i-0ea88f58e265b731f</instanceId>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <device>/dev/sda1</device>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <status>attached</status>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <attachTime>2020-07-10T15:26:05.000Z</attachTime>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </attachmentSet>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <volumeType>gp2</volumeType>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <iops>100</iops>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <encrypted>false</encrypted>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </volumeSet>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeVolumesResponse>
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:25 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeTags Details:
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 103
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=562ed4102a768bef364f83bf9f9df4d0e65385dfe0753f9bc2a4553e1c0fe0ab
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152625Z
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeTags&Filter.1.Name=resource-id&Filter.1.Value.1=vol-05f454abf525de63b&Version=2016-11-15
2020-07-10T16:26:25.627+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:25 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeTags Details:
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 212
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:26:25 GMT
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 7de51cbc-a1db-46b9-b483-8b0295c287d0
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:25 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeTagsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>7de51cbc-a1db-46b9-b483-8b0295c287d0</requestId>
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <tagSet/>
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeTagsResponse>
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:25 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeVpcs Details:
2020-07-10T16:26:25.923+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:26:25.924+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:26:25.924+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:26:25.924+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:26:25.924+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 59
2020-07-10T16:26:25.924+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=5bc874e25641d53d56860a26492908148a8ce0b57ce22e319019c6dd8b91d9eb
2020-07-10T16:26:25.924+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:26:25.924+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152625Z
2020-07-10T16:26:25.924+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:26:25.924+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:26:25.924+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:25.924+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeVpcs&Version=2016-11-15&VpcId.1=vpc-b31026da
2020-07-10T16:26:25.924+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:26 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeVpcs Details:
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 1132
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:26:25 GMT
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 3a41f841-3fdc-4eb1-a1e2-f1e3aa1c5d79
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:26 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeVpcsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>3a41f841-3fdc-4eb1-a1e2-f1e3aa1c5d79</requestId>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <vpcSet>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <vpcId>vpc-b31026da</vpcId>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <ownerId>904806826062</ownerId>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <state>available</state>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <cidrBlock>172.31.0.0/16</cidrBlock>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <cidrBlockAssociationSet>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <cidrBlock>172.31.0.0/16</cidrBlock>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <associationId>vpc-cidr-assoc-9af1ccf3</associationId>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <cidrBlockState>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                         <state>associated</state>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     </cidrBlockState>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </cidrBlockAssociationSet>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <dhcpOptionsId>dopt-ac2520c5</dhcpOptionsId>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <tagSet>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <key>Name</key>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <value>default-dev</value>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </tagSet>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <instanceTenancy>default</instanceTenancy>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <isDefault>true</isDefault>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </vpcSet>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeVpcsResponse>
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:26 [DEBUG] Setting Security Group IDs: []string{"sg-06f7dddb3983ea1eb", "sg-0d7af5cbbf39093fe"}
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:26 [DEBUG] Setting Security Group Names: []string{"allow-ssh-and-egress", "allow-registry-ingress"}
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:26 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeVolumes Details:
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:26:26.210+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:26:26.211+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:26:26.211+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 74
2020-07-10T16:26:26.211+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=a478420c64a68cf7c0bbdceddeaeeb3fbf45df2177c6551b3b00c2e640ec4d18
2020-07-10T16:26:26.211+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:26:26.211+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152626Z
2020-07-10T16:26:26.211+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:26:26.211+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:26:26.211+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:26.211+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeVolumes&Version=2016-11-15&VolumeId.1=vol-05f454abf525de63b
2020-07-10T16:26:26.211+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:26 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeVolumes Details:
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 1142
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:26:26 GMT
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: ef397ad8-c4c1-4e89-a39c-6e0fdff71fd4
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:26 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeVolumesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>ef397ad8-c4c1-4e89-a39c-6e0fdff71fd4</requestId>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <volumeSet>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <volumeId>vol-05f454abf525de63b</volumeId>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <size>8</size>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <snapshotId>snap-06f847eaf12ac49b1</snapshotId>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <availabilityZone>eu-west-2a</availabilityZone>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <status>in-use</status>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <createTime>2020-07-10T15:26:05.820Z</createTime>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <attachmentSet>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 <item>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <volumeId>vol-05f454abf525de63b</volumeId>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <instanceId>i-0ea88f58e265b731f</instanceId>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <device>/dev/sda1</device>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <status>attached</status>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <attachTime>2020-07-10T15:26:05.000Z</attachTime>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                     <deleteOnTermination>true</deleteOnTermination>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:                 </item>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             </attachmentSet>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <volumeType>gp2</volumeType>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <iops>100</iops>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <encrypted>false</encrypted>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </volumeSet>
2020-07-10T16:26:26.478+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeVolumesResponse>
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:26 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstanceAttribute Details:
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 114
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=1650a87118690bb8e135527b9c47c5b63ee196dd5cad28ccde559adea204b7d2
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152626Z
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeInstanceAttribute&Attribute=disableApiTermination&InstanceId=i-0ea88f58e265b731f&Version=2016-11-15
2020-07-10T16:26:26.479+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:26 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstanceAttribute Details:
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 359
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:26:26 GMT
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 052accee-509c-45e6-9351-d55a2a66003e
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:26 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeInstanceAttributeResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>052accee-509c-45e6-9351-d55a2a66003e</requestId>
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <instanceId>i-0ea88f58e265b731f</instanceId>
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <disableApiTermination>
2020-07-10T16:26:26.770+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <value>false</value>
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </disableApiTermination>
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeInstanceAttributeResponse>
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:26 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstanceAttribute Details:
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 101
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=90b8572a578fb44fba5bf95d97cea558985c69b72d475ea770ef8e4bfa9c0b61
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152626Z
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeInstanceAttribute&Attribute=userData&InstanceId=i-0ea88f58e265b731f&Version=2016-11-15
2020-07-10T16:26:26.771+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:27 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstanceAttribute Details:
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:26:26 GMT
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Vary: accept-encoding
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: cae21e92-0582-4e7c-9c36-071bdae78985
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:27 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeInstanceAttributeResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>cae21e92-0582-4e7c-9c36-071bdae78985</requestId>
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <instanceId>i-0ea88f58e265b731f</instanceId>
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <userData>
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <value>H4sIAAAAAAAA/7xX3XLbOJa+Z1Xe4bTsHXdmR7+O0/FftiRZpqhY9piKRZE9XQ4IQCQsENASoCS6K1XzGvMI+xr7KPMkWyApRW4nd7Pji1R4cH6/8+EcqC+FpkLXP+dLegZJxjVbolQ3E7ah5BxCmQmC0vyyNnbGg97dw+1V1/VrlvmqT2mqmBRn0G603lhvrHp9X+mNtfOdIqHmNK0PBJaEiegMfgmZ3lMogmu60U3MZUbqWIo5i95YY5bQV2EO9nWsdco0fZwzTtWZBVAHXDo9Ayfv6k+sFYXe6SL4LCPqXeuwX8g+OXmvgz7LCHemLccOWn+d8Tj01tFdJJ+crnxyrl0eznrKn7ncsU8Txx5EOJkKNLttYbGI/M5pFiRckNkoJjZfhezdJyfvGr8j0u9xOuxx/9h9doauDCa9JOxsFPJOhDMMYpzw2E82HD9LY6Od4YgHHb4Kn2R0PyWfd9+sd4zsaR5Mei1kP0QPz+PIF9MnVOTMnx3b5djerKg3XThDd3WX9+IwuS992qO239GcXMmI2DF37JM49B6isONX39V5v9cK896azG5lFfeZDEcnju3GxB5ExP6Q9dnY1DVDM1eGxyZ2exXYPKEez4K8zC2wp4k/myrS7z2Fnbb2vZOFY2+WYfIQ+bORIF6bh8J9LrA0mNzLp5fxuPY9wm/6Jpd7k+MS58bXSYI80sbJdQt5p5kznGaBPc2LHtndVTBzn2467srUgtlpHnhkiY/dnE5OK1ucUa+t/P67TySZ5rjCedx/t+knm1VgetDvqWAW8PBKRk7icl9MhRPJyLGDFU7aMRm6HD+Zs+Vz2HnH+qwbBQnnoe0+3xm9ftfwKCcJfzI8c8ReXdHymdinuamt0LVvY78T862dn2xWfuJy3LnN0azXCo+d905/tAyTNg+905xOHJPf87jIsxvtc8VJpu2bGeH4+F6PmVOe7/XdEb0ltqeGd/zG22LU3sOozYh3mwaze9ZP4hYZdt+b2nzPXZT1blZ+51oh+/SZXMn2+Kq7LnAZ3nL/eFTGSAYad6ZPOJm2SsxK/Hb1bX09FfYbp5KbexKykju+3Y7xsctx0o18MYrDxHDRlcFsxEfH48j3NnngXS/opJf5M3dJkocIH0/X2D7NSb+XhMdV7f1xhIejVehNW8ietnHe08HMzZF3+3yzi9vd6U48P6LeadsZkjgUhnMfotC7ToNJr407u7tieJgE3nWLzEb8jn2zH0/eRX5nsyo4bpMlseO2z06ewk5rFdin5p7mNx23wBp5o3YxJ5LuLwZjp999cq6czPQLeZtFNSeWoXctgklX+va2Xz1GPK6CfleTfm+vd93M7y/2fI2zghvJNA+8k6ftzMDJ9CnwTlrhcGFmxzIc3kfIa8dB5yFC3rtqFvAMzdyl722WtLpnW7xe4LnlYL8bBd5JMcMCM1+Go3ZwX+Hb7639mSvvWJfddNqcDEdL/3hc3BlkT2Nzd3d+riN93znNiD3NSL/9QGc9fvNwui5wEuP3zrWKnORkhTsnyyDxmXPd+mR8hENX3pU8bIXHozjoTBc44Z1g5rwv8ejxMLlmoT1d3LFeC4spr+TLULgciyAu7vrTYI3zijtDV+Jk+ozsU2VqGq/lpQUAQHcrK3z/rpDItaDpGaRS6jPzTyFcIh2fQZNq3ExpxJRO80ae8PKMpglTZoWpMzhq/XJycvQvWpabuoop5wqnbKl/tC1/aoZMNEOkYss6gAnV2VKBjilsE4UE4ZgJClpCjFYUEKSZEExE1gFcSbyg6TddHSMNCVpQBZmiIOeFKyaURgJT6wCWqTTLGBTVwERxuucfZTqmQjOMtFFGETKmhdbkGMIML6guTOcyBaVlykS0C36krAMgSKOGZRmdugSapnTD9PZTyEwoqi0rQUz8/BZ+t6DMjfNHUlRigSnucevS+moVfwfglGolNBxpqjR8KW3qmH6BeSoT+IKW+gtkqsRmVznnSDMpoGyEgWDFCCUQ5oXOXPKFSR3pCs6G9TKpKlOKYwk15/b6zrxkqoQMAKSyAqhZFgDOUg71uZrcQER1ozrFMjEQRFTXK4mKLQCVEQkqhkbz5YllSj8ANxOv2LAwMfe6uzsqn1xZWlRbAIA0qFhmnADdMKUhE4Sm8OXVRfjSsA4M+zIcv/QCSaY0hBSWHGEDGZ3LlG4JCDpmCqSgDWu/a9/Fa6JRqr+htcu6AX/+1/9Z8P/h9cfh/n2hPmxZxubw66/wE9TnUHvVzxr89tu5IYcop2TRiYHr3rmmFddmALyyASKpAiF1yZWSzoX1hmloWwBzZlnb7mUC/mbe83WBkj0KljJCNcLxVoHqtUwXEEulK9FK8iz5TgpnhaQMsTtoloQsUjTm+7PBzJF/77DOVFoMbCpWUAxtc29uIyY2UAdB16BouqIphFzihWWBucRTlDIUcqosa+w/TtqX//z7PzRNUzSXadJI8urWR+iff/+HdWs7t7PH7rTr3HR7N4PH6fBu8nlyeVRAI0ygpmKaqjpaIcaN26PKZnBrDK5+bEGFUSdHljfoPV457uVRc4XS5nq9LkUPk4F7ebRer+tmih9Z5XcuszRTNDWN3oaa9IeD8eDy6FDhmH4Tu4P7h8Hk8+OD61weHab0vzOq9GOWsiMDw3UmsJkpypILMyJKWtYpHP2N/nrcSY4OC3TMV3J0Dl/hAOyUUmERRl/pt8+P23+0KIl6DmZpQLE1JkgwnQOOKV5Yv8Lhz4xAPXoLP11CrVWD3+BPfwLCKNQm5WrYTjtDb6SKR0SjZgwPCpP2vsmDQhE9g8OfQ6RocQsOW2+BSMPJW5TQmkmgn1KkKRRdqCYrmP1rYaThIxx+v9tNKAuDi4vB3bV1AOv12qxnIUV9vV5bFcd+L67nAThzsw5SiMwF1rLQJiyl2EyApDI00kK/NH4sMv5zowx0XpykVGepgONWe5tY2eez5i6hw1eNPre+/jGfUVa9GSq5CfUq9IvAUmqo/raUbFYRm8ss5Aw/xjrh51YV4UZGqvgvwpgq9chlBIcVq3eGXEaqWSo0uIzKUDRNZVro/8CgUCj1t/AKzDNCy4Cs/ICIyxDxJpZJIkXDdPb8e+drmZJlajIoVbb5M6WpMJ1ZylTDh9aH1l8Ao2qpT1EqmKpUxxUlCZ0zQQmguaZpge5e7G3Y0oaX3tudXxqtRqvRPjP+TZ8MmbakNKv49xLbv3AZfS0ZY550VFnJgrAU6svXGP2+1w5jp76+8MgEoZuGOXxB8z962XPS3DMp6X7x09Vd/7P/1wEY4UfrojjjSESXNSpqRkAR+WhtGXOhmeb04/bKNMvPb8cJ1QhwjFJF9WUt0/P6hxo0P1oXzdLPRShJDpgjpS5rWAqNmKBpbc+D0aPpx4u4vYsStz+W9jTdUyRsBYxc1tYpWi4LH9aQci7Bkykn1kWTsNWe+lxKTdOP//s/cPgzMXPiP//Df3vRrMTWRdNkViRaALFtX4zMPIn2f7lYOJZrAXUXDs3UPjvczvM/Ym8cDIo9AGYpmDcw3jZP5UkoOcPAmVhYXEBd/XBCvZwHL1fPXiiXKvPus8oXyJWEXGawZio23E/Lw3I6/lfNUpRTrCEX5pdJzaeqBrVbWTsHIgvMMFIUDovjHYY+VfC2fEkwwXSDlBtv5/scwpSixfn5zuJWwttiVVQyqhC2iBTUsuQCahODSjm2SfEzp6q0Zr16aNTrb6z/CwAA///+xAo3oRUAAA==</value>
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </userData>
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeInstanceAttributeResponse>
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:27 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstanceCreditSpecifications Details:
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ REQUEST POST-SIGN ]-----------------------------
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: POST / HTTP/1.1
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Host: ec2.eu-west-2.amazonaws.com
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: User-Agent: aws-sdk-go/1.32.12 (go1.13.7; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.12.23 (+https://www.terraform.io)
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Length: 95
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Authorization: AWS4-HMAC-SHA256 Credential=ASIA5FKVQQBHFVKQE3YR/20200710/eu-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date;x-amz-security-token, Signature=721fb7d76f38824268770408aca6991320c03a4f048a016f5e6fa2fccec39100
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Date: 20200710T152627Z
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amz-Security-Token: FwoGZXIvYXdzEJn//////////wEaDDxNTqUHSzgIrnETZyK7AQm3Wt1YAtEb3ZEa9PioMIOer1kpeViRX0Xfxsj8vegMa6rZ9bOqa5tiko/NDr8WK9Y8zwxcIiuluabyQZbZ/9dc9u1q0z3hDyKZSD+/zzrkMffpOO9AG63dKr14o/CwfNFmpmh9k7C/AMbNyXJ/GoHc8hC1qP4PmiAuqqgyIZ/51j3XKH+gav03LPZis8XaG0GXrkX1CQBtvsCh6z25Bs7jZ4im2nB4jxrN4O9UKRgZWlorpty+JTWClRko/pCi+AUyLc3TjZWBZVkCYCTtRsNBBV4DEK4spWSsBCzrHJ+6WsRJN6iheHI9SsQDtJyxcg==
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Accept-Encoding: gzip
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Action=DescribeInstanceCreditSpecifications&InstanceId.1=i-0ea88f58e265b731f&Version=2016-11-15
2020-07-10T16:26:27.031+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:27 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstanceCreditSpecifications Details:
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: ---[ RESPONSE ]--------------------------------------
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: HTTP/1.1 200 OK
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Connection: close
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Transfer-Encoding: chunked
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Content-Type: text/xml;charset=UTF-8
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Date: Fri, 10 Jul 2020 15:26:26 GMT
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Server: AmazonEC2
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: Vary: accept-encoding
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: X-Amzn-Requestid: 5be77baf-8ac9-48c4-9cd4-5329168aa32d
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: -----------------------------------------------------
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: 2020/07/10 16:26:27 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: <DescribeInstanceCreditSpecificationsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <requestId>5be77baf-8ac9-48c4-9cd4-5329168aa32d</requestId>
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     <instanceCreditSpecificationSet>
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         <item>
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <cpuCredits>standard</cpuCredits>
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:             <instanceId>i-0ea88f58e265b731f</instanceId>
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:         </item>
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4:     </instanceCreditSpecificationSet>
2020-07-10T16:26:27.283+0100 [DEBUG] plugin.terraform-provider-aws_v2.69.0_x4: </DescribeInstanceCreditSpecificationsResponse>
2020/07/10 16:26:27 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ebs_optimized: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:26:27 [TRACE] EvalWriteState: recording 4 dependencies for aws_instance.main
2020/07/10 16:26:27 [TRACE] EvalWriteState: writing current state object for aws_instance.main
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/10 16:26:27 [TRACE] EvalWriteState: recording 4 dependencies for aws_instance.main
2020/07/10 16:26:27 [TRACE] EvalWriteState: writing current state object for aws_instance.main
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/07/10 16:26:27 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2020/07/10 16:26:27 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 181
2020/07/10 16:26:27 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/10 16:26:27 [TRACE] [walkApply] Exiting eval tree: aws_instance.main
2020/07/10 16:26:27 [TRACE] vertex "aws_instance.main": visit complete
2020/07/10 16:26:27 [TRACE] dag/walk: visiting "provider.aws (close)"
2020/07/10 16:26:27 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/10 16:26:27 [TRACE] vertex "provider.aws (close)": evaluating
2020/07/10 16:26:27 [TRACE] [walkApply] Entering eval tree: provider.aws (close)
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/10 16:26:27 [TRACE] GRPCProvider: Close
2020/07/10 16:26:27 [TRACE] dag/walk: visiting "output.public-ip"
2020/07/10 16:26:27 [TRACE] vertex "output.public-ip": starting visit (*terraform.NodeApplyableOutput)
2020/07/10 16:26:27 [TRACE] vertex "output.public-ip": evaluating
2020/07/10 16:26:27 [TRACE] [walkApply] Entering eval tree: output.public-ip
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2020/07/10 16:26:27 [TRACE] EvalWriteOutput: Saving value for output.public-ip in state
2020/07/10 16:26:27 [TRACE] EvalWriteOutput: Saving Create change for output.public-ip in changeset
2020/07/10 16:26:27 [TRACE] [walkApply] Exiting eval tree: output.public-ip
2020/07/10 16:26:27 [TRACE] vertex "output.public-ip": visit complete
2020/07/10 16:26:27 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/10 16:26:27 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/10 16:26:27 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/10 16:26:27 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/10 16:26:27 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/10 16:26:27 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/10 16:26:27 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-10T16:26:27.304+0100 [DEBUG] plugin: plugin process exited: path=/Users/michaelugbechie/workspace/sample-docker-registry-aws/.terraform/plugins/darwin_amd64/terraform-provider-aws_v2.69.0_x4 pid=4156
2020-07-10T16:26:27.304+0100 [DEBUG] plugin: plugin exited
2020/07/10 16:26:27 [TRACE] [walkApply] Exiting eval tree: provider.aws (close)
2020/07/10 16:26:27 [TRACE] vertex "provider.aws (close)": visit complete
2020/07/10 16:26:27 [TRACE] dag/walk: visiting "root"
2020/07/10 16:26:27 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/10 16:26:27 [TRACE] vertex "root": visit complete
2020/07/10 16:26:27 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2020/07/10 16:26:27 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 182
2020/07/10 16:26:27 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/10 16:26:27 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/10 16:26:27 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020/07/10 16:37:29 [INFO] Terraform version: 0.12.23  
2020/07/10 16:37:29 [INFO] Go runtime version: go1.12.13
2020/07/10 16:37:29 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 16:37:29 [INFO] CLI command args: []string{"apply"}
2020/07/10 16:37:29 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 16:37:29 [INFO] backend/local: starting Apply operation
2020-07-10T16:37:30.276+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:37:30.331+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:37:30.330+0100
2020-07-10T16:37:30.453+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:37:30.488+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:37:30.487+0100
2020/07/10 16:37:30 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T16:37:30.576+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:37:30.611+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:37:30.611+0100
2020-07-10T16:37:30.636+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:37:30.694+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:37:30.694+0100
2020/07/10 16:37:30 [INFO] backend/local: apply calling Refresh
2020/07/10 16:37:30 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T16:37:30.876+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:37:30.905+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:37:30.905+0100
2020-07-10T16:37:30.930+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:37:30.984+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:37:30.984+0100
2020/07/10 16:37:37 [INFO] backend/local: apply calling Plan
2020/07/10 16:37:37 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T16:37:37.882+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:37:37.920+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:37:37.920+0100
2020-07-10T16:37:37.947+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:37:38.004+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:37:38.004+0100
2020/07/10 16:37:40 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
gVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
2020/07/10 16:37:40 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 16:37:40 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 16:37:40 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
2020/07/10 16:37:40 [INFO] backend/local: apply calling Apply
2020/07/10 16:37:40 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T16:37:40.702+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:37:40.740+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:37:40.739+0100
2020-07-10T16:37:40.765+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T16:37:40.823+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T16:37:40.823+0100
2020/07/10 17:16:36 [INFO] Terraform version: 0.12.23  
2020/07/10 17:16:36 [INFO] Go runtime version: go1.12.13
2020/07/10 17:16:36 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 17:16:36 [INFO] CLI command args: []string{"apply"}
2020/07/10 17:16:36 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 17:16:36 [INFO] backend/local: starting Apply operation
2020-07-10T17:16:37.420+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:16:37.480+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:16:37.480+0100
2020-07-10T17:16:37.614+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:16:37.645+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:16:37.645+0100
2020/07/10 17:16:37 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T17:16:37.736+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:16:37.790+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:16:37.790+0100
2020-07-10T17:16:37.816+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:16:37.853+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:16:37.853+0100
2020/07/10 17:16:37 [INFO] backend/local: apply calling Refresh
2020/07/10 17:16:37 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T17:16:38.001+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:16:38.032+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:16:38.031+0100
2020-07-10T17:16:38.057+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:16:38.115+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:16:38.114+0100
2020/07/10 17:16:46 [INFO] backend/local: apply calling Plan
2020/07/10 17:16:46 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T17:16:46.558+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:16:46.595+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:16:46.595+0100
2020-07-10T17:16:46.622+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:16:46.679+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:16:46.679+0100
2020/07/10 17:16:49 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 17:16:49 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
ValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
2020/07/10 17:16:49 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:16:49 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
e5dCnCt6WTwkmmG6QcuPtdJ9DmFK0OD/fSdxKeFusiopGFcIWkYJallxAbWKyUo5tUnzWVZHWrFcPjXr9jfW/AQAA//+LmilMkRYAAA==") nor prior value cty.StringVal("dd6dd3fbc7a6371b12c66660e27bdccda24faa51")
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:16:54 [INFO] backend/local: apply calling Apply
2020/07/10 17:16:54 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 17:16:54 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 17:16:54 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 17:16:54 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 17:16:54 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 17:16:54 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 17:16:54 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 17:16:54 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 17:16:54 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 17:16:54 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 17:16:54 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 17:16:54 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020-07-10T17:16:54.369+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:16:54.411+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:16:54.411+0100
2020-07-10T17:16:54.438+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:16:54.497+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:16:54.497+0100
2020/07/10 17:17:27 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
LpqErfbY51Jqmn78n/+Gwx/NexD+9B/+24tmRbYumsazwtEiEdvyxcjMk2j/S83CsVwLqLtwaKb22eF2nv8290bBoNgDYJaCefPjbfFUnoSSMwyciYXFBdTVdyfUy3nwcvXsmXKpMg8/q3yCXEnIZQZrpmKD/bS8LKfjf9YsRTnFGnJhvsRqPlU1qN3K2jkQWeQMI0XhsLje5dCnCt6WTwkmmG6QcuPtdJ9DmFK0OD/fSdxKeFusiopGFcIWkYJallxAbWKyUo5tUnzWVZHWrFcPjXr9jfW/AQAA//+LmilMkRYAAA==")
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 17:17:45 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ebs_optimized: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2020/07/10 17:21:55 [INFO] Terraform version: 0.12.23  
2020/07/10 17:21:55 [INFO] Go runtime version: go1.12.13
2020/07/10 17:21:55 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 17:21:55 [INFO] CLI command args: []string{"apply"}
2020/07/10 17:21:55 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 17:21:55 [INFO] backend/local: starting Apply operation
2020-07-10T17:21:55.902+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:21:55.958+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:21:55.957+0100
2020-07-10T17:21:56.089+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:21:56.120+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:21:56.120+0100
2020/07/10 17:21:56 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T17:21:56.199+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:21:56.229+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:21:56.229+0100
2020-07-10T17:21:56.253+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:21:56.312+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:21:56.311+0100
2020/07/10 17:21:56 [INFO] backend/local: apply calling Refresh
2020/07/10 17:21:56 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T17:21:56.494+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:21:56.524+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:21:56.524+0100
2020-07-10T17:21:56.548+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:21:56.606+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:21:56.606+0100
2020/07/10 17:22:04 [INFO] backend/local: apply calling Plan
2020/07/10 17:22:04 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T17:22:04.516+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:22:04.554+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:22:04.554+0100
2020-07-10T17:22:04.581+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:22:04.639+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:22:04.639+0100
2020/07/10 17:22:07 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 17:22:07 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
ValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
2020/07/10 17:22:07 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:22:07 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
YKQqHxfEOQ58qeFs+JZhgukHKjbfzfQ5hStHi/HxncSvhbbEqKhlVCFtECmpZcgG1iUGlHNuk+JlX3bRmvXpo1OtvrP8NAAD//xU3G/ehFgAA") nor prior value cty.StringVal("f96b4c8d3ab21a9311fc17f00c508b5fa23d5f27")
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:22:09 [INFO] backend/local: apply calling Apply
2020/07/10 17:22:09 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 17:22:09 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 17:22:09 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 17:22:09 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 17:22:09 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 17:22:09 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 17:22:09 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 17:22:09 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 17:22:09 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 17:22:09 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 17:22:09 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 17:22:09 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020-07-10T17:22:09.613+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:22:09.656+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:22:09.656+0100
2020-07-10T17:22:09.684+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:22:09.742+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:22:09.741+0100
2020/07/10 17:22:32 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
TMmx9vi6fyJJScYeBMLCwuoK6+O6FezoOXq2cvlEuVefhZ5RPkSkIuM1gzFRvup+VhOR3/s2YpyinWkAvzy6zmU1WD2q2snQORBWYYKQqHxfEOQ58qeFs+JZhgukHKjbfzfQ5hStHi/HxncSvhbbEqKhlVCFtECmpZcgG1iUGlHNuk+JlX3bRmvXpo1OtvrP8NAAD//xU3G/ehFgAA")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 17:23:01 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .monitoring: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2020/07/10 17:31:46 [INFO] Terraform version: 0.12.23  
2020/07/10 17:31:46 [INFO] Go runtime version: go1.12.13
2020/07/10 17:31:46 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 17:31:46 [INFO] CLI command args: []string{"apply"}
2020/07/10 17:31:46 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 17:31:46 [INFO] backend/local: starting Apply operation
2020-07-10T17:31:46.843+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:31:46.904+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:31:46.903+0100
2020-07-10T17:31:47.040+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:31:47.071+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:31:47.071+0100
2020/07/10 17:31:47 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T17:31:47.157+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:31:47.187+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:31:47.187+0100
2020-07-10T17:31:47.212+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:31:47.268+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:31:47.268+0100
2020/07/10 17:31:47 [INFO] backend/local: apply calling Refresh
2020/07/10 17:31:47 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T17:31:47.455+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:31:47.487+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:31:47.487+0100
2020-07-10T17:31:47.511+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:31:47.568+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:31:47.568+0100
2020/07/10 17:31:54 [INFO] backend/local: apply calling Plan
2020/07/10 17:31:54 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T17:31:54.925+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:31:54.960+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:31:54.960+0100
2020-07-10T17:31:54.984+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:31:55.044+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:31:55.043+0100
2020/07/10 17:31:57 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
ValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
2020/07/10 17:31:57 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 17:31:57 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:31:57 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
2mk9VDWq3snYORBY5w0hROCyudzn0qYK35VOCCaYbpNx4O93nEKYULc7PdxK3Et4Wq6KiUYWwRaSgliUXUJuYrJRjmxQfgFWkNevVQ6Nef2P9bwAAAP//t5c6Z7sWAAA=") nor prior value cty.StringVal("f563ccd4225e12248453210eded9db1d05019211")
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:32:00 [INFO] backend/local: apply calling Apply
2020/07/10 17:32:00 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 17:32:00 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 17:32:00 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 17:32:00 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 17:32:00 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 17:32:00 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 17:32:00 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 17:32:00 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 17:32:00 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 17:32:00 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 17:32:00 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 17:32:00 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020-07-10T17:32:00.444+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:32:00.484+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:32:00.484+0100
2020-07-10T17:32:00.513+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:32:00.571+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:32:00.571+0100
2020/07/10 17:32:33 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
jvczvPf5t4oGBR7AMxSMF8DeFs8lSeh5AwDZ2JhcQF19d0J9XIevFw9e6ZcqszDzyqfIFcScpnBmqnYYD8tL8vp+J81S1FOsYZcmG+2mk9VDWq3snYORBY5w0hROCyudzn0qYK35VOCCaYbpNx4O93nEKYULc7PdxK3Et4Wq6KiUYWwRaSgliUXUJuYrJRjmxQfgFWkNevVQ6Nef2P9bwAAAP//t5c6Z7sWAAA=")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 17:32:57 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ebs_optimized: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2020/07/10 17:41:12 [INFO] Terraform version: 0.12.23  
2020/07/10 17:41:12 [INFO] Go runtime version: go1.12.13
2020/07/10 17:41:12 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 17:41:12 [INFO] CLI command args: []string{"apply"}
2020/07/10 17:41:12 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 17:41:12 [INFO] backend/local: starting Apply operation
2020-07-10T17:41:12.528+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:41:12.587+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:41:12.586+0100
2020-07-10T17:41:12.719+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:41:12.751+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:41:12.750+0100
2020/07/10 17:41:12 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T17:41:12.827+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:41:12.857+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:41:12.857+0100
2020-07-10T17:41:12.881+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:41:12.938+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:41:12.938+0100
2020/07/10 17:41:13 [INFO] backend/local: apply calling Refresh
2020/07/10 17:41:13 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T17:41:13.123+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:41:13.152+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:41:13.152+0100
2020-07-10T17:41:13.178+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:41:13.237+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:41:13.236+0100
2020/07/10 17:41:20 [INFO] backend/local: apply calling Plan
2020/07/10 17:41:20 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T17:41:20.680+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:41:20.720+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:41:20.720+0100
2020-07-10T17:41:20.746+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:41:20.805+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:41:20.805+0100
2020/07/10 17:41:23 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
ValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
2020/07/10 17:41:23 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 17:41:23 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:41:23 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
G+2l5WHbH/6xZinKKNeTCfOnVfKpqULuVtXMgssAMI0XhsDjeYehTBW/LpwQTTDdIOfF2ts8hTClanJ/vNG4lvC1GRbVHFcIWkYJallxAbWJQKds2KT4bq5vWrFcPjXr9jfW/AQAA//8iL0rN8RYAAA==") nor prior value cty.StringVal("3676b2e036dd59e30bdf546b8b4bf66f42451314")
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:41:26 [INFO] backend/local: apply calling Apply
2020/07/10 17:41:26 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 17:41:26 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 17:41:26 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 17:41:26 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 17:41:26 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 17:41:26 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 17:41:26 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 17:41:26 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 17:41:26 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 17:41:26 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 17:41:26 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 17:41:26 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020-07-10T17:41:26.656+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:41:26.698+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:41:26.698+0100
2020-07-10T17:41:26.727+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:41:26.785+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:41:26.785+0100
2020/07/10 17:42:00 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
OZp+vIjbOy9x+2OpT9M9QcJWwMhlbZ2i5bKwYQ0p5xI8mXJiXTQJW+2Jz6XUNP34P/8Nhz+atyX86T/8txfNatu6aJrIikALILbpi5HpJ9H+l6CFY7kWUHfh0HTts8NtP/8t9sbAoJgDYIaC+YbA2+SpPAklZxg4EwuLC6ir73aol/3g5ejZc+VSZR5+VvkEuZKQywzWTMWG+2l5WHbH/6xZinKKNeTCfOnVfKpqULuVtXMgssAMI0XhsDjeYehTBW/LpwQTTDdIOfF2ts8hTClanJ/vNG4lvC1GRbVHFcIWkYJallxAbWJQKds2KT4bq5vWrFcPjXr9jfW/AQAA//8iL0rN8RYAAA==")
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
35aSzcpjc5mFnOHHWCf83Ko83MhIFf8ijKlSj1xGcFixeqfIZaSapUCDy6h0RdNUpoX8dxQKgVJ+C6/APCO0dMjKBURchog3sUwSKRoms+e/d76WKVmmJoJSZBs/U5oKk5mlTDV8aH1o/Rkwqqb6FKWCqUp0XFGS0DkTlACaa5oW6O753rotdXhpvd35qdFqtBrtM2Pf5MmQaUtKM4t/LbH9M5fR15Ix5olMlZUsCEuhvnyN0a976TB66usLi0wQummYwxc0/62VPSPNPZWS7hc/XN31P/t/GYDZ/GhdFGccieiyRkXNbFBEPlpbxlxopjn9uC2ZZrn8dpxQjQDHKFVUX9YyPa9/qEHzo3XRLO1chJLkgDlS6rKGpdCICZrW9iwYOZp+vIjbOy9x+2OpT9M9QcJWwMhlbZ2i5bKwYQ0p5xI8mXJiXTQJW+2Jz6XUNP34P/8Nhz+atyX86T/8txfNatu6aJrIikALILbpi5HpJ9H+l6CFY7kWUHfh0HTts8NtP/8t9sbAoJgDYIaC+YbA2+SpPAklZxg4EwuLC6ir73aol/3g5ejZc+VSZR5+VvkEuZKQywzWTMWG+2l5WHbH/6xZinKKNeTCfOnVfKpqULuVtXMgssAMI0XhsDjeYehTBW/LpwQTTDdIOfF2ts8hTClanJ/vNG4lvC1GRbVHFcIWkYJallxAbWJQKds2KT4bq5vWrFcPjXr9jfW/AQAA//8iL0rN8RYAAA=="
2020/07/10 17:42:24 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ebs_optimized: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2020/07/10 17:48:55 [INFO] Terraform version: 0.12.23  
2020/07/10 17:48:55 [INFO] Go runtime version: go1.12.13
2020/07/10 17:48:55 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 17:48:55 [INFO] CLI command args: []string{"apply"}
2020/07/10 17:48:55 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 17:48:55 [INFO] backend/local: starting Apply operation
2020-07-10T17:48:56.090+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:48:56.152+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:48:56.151+0100
2020-07-10T17:48:56.290+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:48:56.321+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:48:56.321+0100
2020/07/10 17:48:56 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T17:48:56.408+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:48:56.438+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:48:56.438+0100
2020-07-10T17:48:56.463+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:48:56.521+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:48:56.521+0100
2020/07/10 17:48:56 [INFO] backend/local: apply calling Refresh
2020/07/10 17:48:56 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T17:48:56.705+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:48:56.735+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:48:56.735+0100
2020-07-10T17:48:56.760+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:48:56.818+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:48:56.817+0100
2020/07/10 17:49:05 [INFO] backend/local: apply calling Plan
2020/07/10 17:49:05 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T17:49:05.531+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:49:05.563+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:49:05.563+0100
2020-07-10T17:49:05.587+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:49:05.645+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:49:05.645+0100
2020/07/10 17:49:08 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
ValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
2020/07/10 17:49:08 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 17:49:08 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:49:08 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
8LLvj/69ZinKKNeTCfNzVfKpqULuVtXMgssAMI0XhsDjeYehTBW/LpwQTTDdIOfF2ts8hTClanJ/vNG4lvC1GRbVHFcIWkYJallxAbWJQKds2Kb4Uq5vWrFcPjXr9jfU/AQAA//+83RSG5BYAAA==") nor prior value cty.StringVal("27dd1456a152b0ef93e16cdb41b827e379ee0891")
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:49:10 [INFO] backend/local: apply calling Apply
2020/07/10 17:49:10 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 17:49:10 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 17:49:10 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 17:49:10 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 17:49:10 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 17:49:10 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 17:49:10 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 17:49:10 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 17:49:10 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 17:49:10 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 17:49:10 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 17:49:10 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020-07-10T17:49:10.932+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:49:10.973+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:49:10.973+0100
2020-07-10T17:49:11.003+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:49:11.062+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:49:11.062+0100
2020/07/10 17:49:44 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2j/48/CsVwLqLtwaLr22eG2n/8We2NgUMwBMEPBfDbgbfJUnoSSMwyciYXFBdTVdzvUy37wcvTsuXKpMg8/q3yCXEnIZQZrpmLD/bQ8LLvj/69ZinKKNeTCfNzVfKpqULuVtXMgssAMI0XhsDjeYehTBW/LpwQTTDdIOfF2ts8hTClanJ/vNG4lvC1GRbVHFcIWkYJallxAbWJQKds2Kb4Uq5vWrFcPjXr9jfU/AQAA//+83RSG5BYAAA==")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 17:50:07 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .disable_api_termination: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2020/07/10 17:53:33 [INFO] Terraform version: 0.12.23  
2020/07/10 17:53:33 [INFO] Go runtime version: go1.12.13
2020/07/10 17:53:33 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 17:53:33 [INFO] CLI command args: []string{"apply"}
2020/07/10 17:53:33 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 17:53:33 [INFO] backend/local: starting Apply operation
2020-07-10T17:53:33.890+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:53:33.952+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:53:33.952+0100
2020-07-10T17:53:34.081+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:53:34.111+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:53:34.111+0100
2020/07/10 17:53:34 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T17:53:34.191+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:53:34.222+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:53:34.222+0100
2020-07-10T17:53:34.246+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:53:34.301+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:53:34.301+0100
2020/07/10 17:53:34 [INFO] backend/local: apply calling Refresh
2020/07/10 17:53:34 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T17:53:34.486+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:53:34.515+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:53:34.515+0100
2020-07-10T17:53:34.539+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:53:34.596+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:53:34.596+0100
2020/07/10 17:53:42 [INFO] backend/local: apply calling Plan
2020/07/10 17:53:42 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T17:53:42.408+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:53:42.448+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:53:42.448+0100
2020-07-10T17:53:42.473+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:53:42.530+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:53:42.530+0100
2020/07/10 17:53:45 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
2020/07/10 17:53:45 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 17:53:45 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:53:45 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:53:45 [INFO] backend/local: apply calling Apply
2020/07/10 17:53:45 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T17:53:45.262+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:53:45.298+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:53:45.298+0100
2020-07-10T17:53:45.324+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:53:45.382+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:53:45.382+0100
2020/07/10 17:54:10 [INFO] Terraform version: 0.12.23  
2020/07/10 17:54:10 [INFO] Go runtime version: go1.12.13
2020/07/10 17:54:10 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "destroy"}
2020/07/10 17:54:10 [INFO] CLI command args: []string{"destroy"}
2020/07/10 17:54:10 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 17:54:10 [INFO] backend/local: starting Apply operation
2020-07-10T17:54:10.669+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:54:10.723+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:54:10.722+0100
2020-07-10T17:54:10.849+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:54:10.880+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:54:10.880+0100
2020/07/10 17:54:10 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T17:54:10.960+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:54:10.991+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:54:10.991+0100
2020-07-10T17:54:11.017+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:54:11.077+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:54:11.077+0100
2020/07/10 17:54:11 [INFO] backend/local: apply calling Refresh
2020/07/10 17:54:11 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T17:54:11.259+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:54:11.288+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:54:11.288+0100
2020-07-10T17:54:11.312+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:54:11.369+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:54:11.369+0100
2020/07/10 17:54:18 [INFO] backend/local: apply calling Plan
2020/07/10 17:54:18 [INFO] terraform: building graph: GraphTypePlanDestroy
2020-07-10T17:54:18.418+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:54:18.486+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:54:18.486+0100
2020-07-10T17:54:18.514+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:54:18.547+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:54:18.547+0100
2020/07/10 17:54:21 [INFO] backend/local: apply calling Apply
2020/07/10 17:54:21 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node data.aws_ami.ubuntu (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node aws_iam_instance_profile.main (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node aws_instance.main (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-registry-ingress (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 17:54:21 DestroyEdgeTransformer: pruning unused resource node data.template_cloudinit_config.init (prepare state)
2020-07-10T17:54:21.559+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:54:21.592+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:54:21.591+0100
2020-07-10T17:54:21.618+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:54:21.670+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:54:21.670+0100
2020/07/10 17:55:28 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 3c0143d1-d466-4716-8ae0-2fde0b250363
2020/07/10 17:55:28 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 3c0143d1-d466-4716-8ae0-2fde0b250363
2020/07/10 17:55:28 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 3c0143d1-d466-4716-8ae0-2fde0b250363
2020/07/10 17:58:07 [INFO] Terraform version: 0.12.23  
2020/07/10 17:58:07 [INFO] Go runtime version: go1.12.13
2020/07/10 17:58:07 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 17:58:07 [INFO] CLI command args: []string{"apply"}
2020/07/10 17:58:07 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 17:58:07 [INFO] backend/local: starting Apply operation
2020-07-10T17:58:07.881+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:58:07.940+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:58:07.940+0100
2020-07-10T17:58:08.064+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:58:08.094+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:58:08.094+0100
2020/07/10 17:58:08 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T17:58:08.170+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:58:08.200+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:58:08.200+0100
2020-07-10T17:58:08.224+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:58:08.280+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:58:08.280+0100
2020/07/10 17:58:08 [INFO] backend/local: apply calling Refresh
2020/07/10 17:58:08 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T17:58:08.458+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:58:08.488+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:58:08.488+0100
2020-07-10T17:58:08.512+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:58:08.573+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:58:08.572+0100
2020/07/10 17:58:12 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 17:58:12 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 17:58:12 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 17:58:13 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})})
"-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 17:58:13 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
_port":cty.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 17:58:13 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
5p1rlnLiSkMsM1kzFhvtpeVh2x3+vWYpyijXkwnyL1nyqalC7lbVzILLADCNF4bA43mHoUwVvypcPE0w3SDmgd7bPIUwpWpyf7zRuJbwpJlu1RxXCFpGCWpZcQG1iUCnbNik+bKub1qxX76J6/QfrfwIAAP//wTQpcJMXAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 17:58:13 [INFO] backend/local: apply calling Plan
2020/07/10 17:58:13 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T17:58:13.284+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:58:13.322+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:58:13.321+0100
2020-07-10T17:58:13.347+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:58:13.403+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:58:13.403+0100
2020/07/10 17:58:15 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 17:58:15 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 17:58:15 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
scription":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})})
2020/07/10 17:58:15 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
ngVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 17:58:15 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 17:58:15 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
5p1rlnLiSkMsM1kzFhvtpeVh2x3+vWYpyijXkwnyL1nyqalC7lbVzILLADCNF4bA43mHoUwVvypcPE0w3SDmgd7bPIUwpWpyf7zRuJbwpJlu1RxXCFpGCWpZcQG1iUCnbNik+bKub1qxX76J6/QfrfwIAAP//wTQpcJMXAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 17:58:19 [INFO] backend/local: apply calling Apply
2020/07/10 17:58:19 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T17:58:19.452+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:58:19.493+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:58:19.493+0100
2020-07-10T17:58:19.522+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:58:19.580+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:58:19.580+0100
2020/07/10 17:58:22 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 17:58:22 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 17:58:22 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
llVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
2020/07/10 17:58:22 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 17:58:22 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 17:58:22 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error putting S3 policy: NoSuchBucket: The specified bucket does not exist
	status code: 404, request id: 6CF5610681AEC10C, host id: WcegrLp2ffExzgaoGRQ9aLBgVQbD8FumNAx33ZBIurFQdew7pQd+cSWfoJAcTfNarS8giMad3J0=
2020/07/10 17:58:22 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error putting S3 policy: NoSuchBucket: The specified bucket does not exist
	status code: 404, request id: 6CF5610681AEC10C, host id: WcegrLp2ffExzgaoGRQ9aLBgVQbD8FumNAx33ZBIurFQdew7pQd+cSWfoJAcTfNarS8giMad3J0=
2020/07/10 17:58:25 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
5p1rlnLiSkMsM1kzFhvtpeVh2x3+vWYpyijXkwnyL1nyqalC7lbVzILLADCNF4bA43mHoUwVvypcPE0w3SDmgd7bPIUwpWpyf7zRuJbwpJlu1RxXCFpGCWpZcQG1iUCnbNik+bKub1qxX76J6/QfrfwIAAP//wTQpcJMXAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 17:59:00 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ebs_optimized: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2020/07/10 17:59:25 [INFO] Terraform version: 0.12.23  
2020/07/10 17:59:25 [INFO] Go runtime version: go1.12.13
2020/07/10 17:59:25 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 17:59:25 [INFO] CLI command args: []string{"apply"}
2020/07/10 17:59:25 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 17:59:25 [INFO] backend/local: starting Apply operation
2020-07-10T17:59:26.191+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:59:26.247+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:59:26.247+0100
2020-07-10T17:59:26.373+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:59:26.402+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:59:26.402+0100
2020/07/10 17:59:26 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T17:59:26.479+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:59:26.509+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:59:26.509+0100
2020-07-10T17:59:26.533+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:59:26.590+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:59:26.590+0100
2020/07/10 17:59:26 [INFO] backend/local: apply calling Refresh
2020/07/10 17:59:26 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T17:59:26.771+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:59:26.801+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:59:26.801+0100
2020-07-10T17:59:26.826+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:59:26.889+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:59:26.889+0100
2020/07/10 17:59:38 [INFO] backend/local: apply calling Plan
2020/07/10 17:59:38 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T17:59:38.567+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:59:38.606+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:59:38.606+0100
2020-07-10T17:59:38.633+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:59:38.691+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:59:38.691+0100
2020/07/10 17:59:41 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
ValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
2020/07/10 17:59:41 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 17:59:41 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:59:41 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
2020/07/10 17:59:43 [INFO] backend/local: apply calling Apply
2020/07/10 17:59:43 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T17:59:43.827+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:59:43.868+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:59:43.868+0100
2020-07-10T17:59:43.898+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T17:59:43.956+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T17:59:43.956+0100
2020/07/10 18:04:18 [INFO] Terraform version: 0.12.23  
2020/07/10 18:04:18 [INFO] Go runtime version: go1.12.13
2020/07/10 18:04:18 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 18:04:18 [INFO] CLI command args: []string{"apply"}
2020/07/10 18:04:18 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 18:04:18 [INFO] backend/local: starting Apply operation
2020-07-10T18:04:19.597+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:04:19.658+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:04:19.658+0100
2020-07-10T18:04:19.786+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:04:19.818+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:04:19.818+0100
2020/07/10 18:04:19 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T18:04:19.899+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:04:19.929+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:04:19.928+0100
2020-07-10T18:04:19.953+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:04:20.011+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:04:20.010+0100
2020/07/10 18:04:20 [INFO] backend/local: apply calling Refresh
2020/07/10 18:04:20 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T18:04:20.191+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:04:20.220+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:04:20.220+0100
2020-07-10T18:04:20.245+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:04:20.302+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:04:20.301+0100
2020/07/10 18:04:26 [ERROR] <root>: eval: *terraform.EvalRefresh, err: rpc error: code = Unavailable desc = transport is closing
2020/07/10 18:04:26 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2020/07/10 18:04:26 [ERROR] <root>: eval: *terraform.EvalRefresh, err: rpc error: code = Unavailable desc = transport is closing
2020/07/10 18:04:26 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2020/07/10 18:20:47 [INFO] Terraform version: 0.12.23  
2020/07/10 18:20:47 [INFO] Go runtime version: go1.12.13
2020/07/10 18:20:47 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 18:20:47 [INFO] CLI command args: []string{"apply"}
2020/07/10 18:20:47 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 18:20:47 [INFO] backend/local: starting Apply operation
2020-07-10T18:20:47.852+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:20:47.913+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:20:47.913+0100
2020-07-10T18:20:48.048+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:20:48.079+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:20:48.079+0100
2020/07/10 18:20:48 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T18:20:48.170+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:20:48.201+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:20:48.201+0100
2020-07-10T18:20:48.225+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:20:48.281+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:20:48.281+0100
2020/07/10 18:20:48 [INFO] backend/local: apply calling Refresh
2020/07/10 18:20:48 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T18:20:48.460+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:20:48.489+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:20:48.489+0100
2020-07-10T18:20:48.513+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:20:48.572+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:20:48.571+0100
2020/07/10 18:20:55 [INFO] backend/local: apply calling Plan
2020/07/10 18:20:55 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T18:20:55.912+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:20:55.950+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:20:55.950+0100
2020-07-10T18:20:55.976+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:20:56.034+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:20:56.033+0100
2020/07/10 18:20:58 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 18:20:58 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
ValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
2020/07/10 18:20:58 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 18:20:58 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
GxY2pcnk8P9hPScQ+kXd2x/OD/YT9R8ZS/ZAl/MDAcJVJoouBpornRhnzOoODP7OfDzvxQdmNzVd8cAofYQ+shDGJKGdf8LdPD9ufS5RZcArl484s6//cB3iWJsUjnMklFA9x07BuipFVB8lWm6W5fEIh+J4b/5rcgKIqx1hynQOJmAkG+mwWlJsG/Abfu+b3/b37/b37/b37/b37r3vvfn/u/r9+7n6+F9XrL9D/BAAA//9Qwv2fJCAAAA==") nor prior value cty.StringVal("f2fc6adf7bd891ca65be545de8796fbf3886dd55")
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
2020/07/10 18:21:02 [INFO] backend/local: apply calling Apply
2020/07/10 18:21:02 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 18:21:02 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 18:21:02 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 18:21:02 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 18:21:02 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 18:21:02 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 18:21:02 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 18:21:02 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 18:21:02 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 18:21:02 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 18:21:02 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 18:21:02 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020-07-10T18:21:02.292+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:21:02.334+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:21:02.334+0100
2020-07-10T18:21:02.362+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:21:02.421+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:21:02.421+0100
2020/07/10 18:21:36 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2ghgxhHaRC+T8GcEUK8XS8k2BUsaZRqTaMPA9Eolc4hUqivSUoks/ooLJwWlNLE9aJYJWbhoxLfPjo9FhUxwwk1XThEq+s353/7yV82SBM9UEjfivNrOQ/y3v/wVfb0nnx8UdovKa5rmntbxEnNh1B6grzXqr0iwYjbQA1SNjfODzUZWksxMOT9YrVZ18/o6QOV3rrLE7KAGxY2pcnk8P9hPScQ+kXd2x/OD/YT9R8ZS/ZAl/MDAcJVJoouBpornRhnzOoODP7OfDzvxQdmNzVd8cAofYQ+shDGJKGdf8LdPD9ufS5RZcArl484s6//cB3iWJsUjnMklFA9x07BuipFVB8lWm6W5fEIh+J4b/5rcgKIqx1hynQOJmAkG+mwWlJsG/Abfu+b3/b37/b37/b37/b37r3vvfn/u/r9+7n6+F9XrL9D/BAAA//9Qwv2fJCAAAA==")
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 18:21:59 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .disable_api_termination: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2020/07/10 18:23:04 [INFO] Terraform version: 0.12.23  
2020/07/10 18:23:04 [INFO] Go runtime version: go1.12.13
2020/07/10 18:23:04 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 18:23:04 [INFO] CLI command args: []string{"apply"}
2020/07/10 18:23:04 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 18:23:04 [INFO] backend/local: starting Apply operation
2020-07-10T18:23:04.843+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:23:04.898+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:23:04.898+0100
2020-07-10T18:23:05.026+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:23:05.054+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:23:05.054+0100
2020/07/10 18:23:05 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T18:23:05.134+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:23:05.162+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:23:05.162+0100
2020-07-10T18:23:05.187+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:23:05.243+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:23:05.243+0100
2020/07/10 18:23:05 [INFO] backend/local: apply calling Refresh
2020/07/10 18:23:05 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T18:23:05.431+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:23:05.461+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:23:05.460+0100
2020-07-10T18:23:05.485+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:23:05.541+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:23:05.541+0100
2020/07/10 18:23:14 [INFO] backend/local: apply calling Plan
2020/07/10 18:23:14 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T18:23:14.277+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:23:14.316+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:23:14.316+0100
2020-07-10T18:23:14.343+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:23:14.398+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:23:14.397+0100
2020/07/10 18:23:17 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
ValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
2020/07/10 18:23:17 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 18:23:17 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 18:23:17 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
Ss4MaFDeqyuXx/GBf4Zh+Od7ZHc8P9lP6HxlV+iFL2YGB4SoTWBcDTRbPjTLmdQoHf6Q/H3aSg7Ibm6/k4BQ+wx7YKaXCIoy+oG+fHra/5iiz4BTKx51Z1v+xj/JMpcXDnIolFI9z07BuipFVB0FXm6W5fEJZ8D03/jm5AUVVjpFgOgccUxMM66tZUG4a8C/43jW/7+/d7+/d7+/d7+/df9579/tz9//1c/frvahef2X9TwAAAP//KZrXUzggAAA=") nor prior value cty.StringVal("4174062409f9682398685f4ff9b08f30e356a504")
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
2020/07/10 18:23:19 [INFO] backend/local: apply calling Apply
2020/07/10 18:23:19 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 18:23:19 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 18:23:19 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 18:23:19 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 18:23:19 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 18:23:19 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 18:23:19 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 18:23:19 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 18:23:19 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 18:23:19 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 18:23:19 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 18:23:19 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020-07-10T18:23:19.324+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:23:19.367+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:23:19.367+0100
2020-07-10T18:23:19.395+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:23:19.454+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:23:19.454+0100
2020/07/10 18:23:52 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
Ss4MaFDeqyuXx/GBf4Zh+Od7ZHc8P9lP6HxlV+iFL2YGB4SoTWBcDTRbPjTLmdQoHf6Q/H3aSg7Ibm6/k4BQ+wx7YKaXCIoy+oG+fHra/5iiz4BTKx51Z1v+xj/JMpcXDnIolFI9z07BuipFVB0FXm6W5fEJZ8D03/jm5AUVVjpFgOgccUxMM66tZUG4a8C/43jW/7+/d7+/d7+/d7+/df9579/tz9//1c/frvahef2X9TwAAAP//KZrXUzggAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 18:24:17 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .monitoring: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2020/07/10 18:31:38 [INFO] Terraform version: 0.12.23  
2020/07/10 18:31:38 [INFO] Go runtime version: go1.12.13
2020/07/10 18:31:38 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 18:31:38 [INFO] CLI command args: []string{"apply"}
2020/07/10 18:31:38 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 18:31:38 [INFO] backend/local: starting Apply operation
2020-07-10T18:31:39.391+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:31:39.453+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:31:39.453+0100
2020-07-10T18:31:39.589+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:31:39.620+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:31:39.620+0100
2020/07/10 18:31:39 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T18:31:39.710+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:31:39.767+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:31:39.767+0100
2020-07-10T18:31:39.793+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:31:39.825+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:31:39.825+0100
2020/07/10 18:31:39 [INFO] backend/local: apply calling Refresh
2020/07/10 18:31:39 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T18:31:39.968+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:31:39.998+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:31:39.998+0100
2020-07-10T18:31:40.023+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:31:40.080+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:31:40.080+0100
2020/07/10 18:31:47 [INFO] backend/local: apply calling Plan
2020/07/10 18:31:47 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T18:31:47.587+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:31:47.627+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:31:47.627+0100
2020-07-10T18:31:47.655+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:31:47.712+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:31:47.712+0100
2020/07/10 18:31:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
2020/07/10 18:31:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 18:31:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 18:31:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
cwifYAythTCLK2Qv+9ulh+0uJMgtOodytzKz8j92KszQpNmMml1Bsx6Zg3RT9qA6SrTYza7nBIPiWG/+c3IDiVY6x5DoHEjETDPRFLyjHCPgXXDfN79u6+W3d/LZufls3/3nr5v+3bfPzsln2iQsFucpgxdPI5P5m3yyq47/XUMoEIxpyCVxCzWNpDWo3qnYKVBWYEZwy2C/IWww9lsIr+N/sshuJGwWvis5WnbEUE0SVZOivrbtfzkX1+nfofwIAAP//BIM1S7kfAAA=") nor prior value cty.StringVal("0b058af798f1c8446cc0b8f8566d79fc5653072c")
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
2020/07/10 18:31:52 [INFO] backend/local: apply calling Apply
2020/07/10 18:31:52 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 18:31:52 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 18:31:52 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 18:31:52 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 18:31:52 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 18:31:52 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 18:31:52 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 18:31:52 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 18:31:52 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 18:31:52 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 18:31:52 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 18:31:52 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020-07-10T18:31:52.984+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:31:53.028+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:31:53.028+0100
2020-07-10T18:31:53.055+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:31:53.113+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:31:53.112+0100
2020/07/10 18:32:27 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
VLyQCU64KYopQkW9Of/Ln/6sWZLgmUriRpxXw3GI//KnP6Ovl8Tzg8Ju8fKapramdbzEXBi1B+hrdfIrEqwozfQAVVX7/GAzEJVHpqSfH6xWq7pZiQ5Q+Z2rLDEjoEFxY6qc3c4P9lMSsc/HO6Pb+cF+wv4jY6l+yBJ+YGC4yiTRRT9RxbRfxrzO4OCP7KfDTnxQVmPzFR+cwifYAythTCLK2Qv+9ulh+0uJMgtOodytzKz8j92KszQpNmMml1Bsx6Zg3RT9qA6SrTYza7nBIPiWG/+c3IDiVY6x5DoHEjETDPRFLyjHCPgXXDfN79u6+W3d/LZufls3/3nr5v+3bfPzsln2iQsFucpgxdPI5P5m3yyq47/XUMoEIxpyCVxCzWNpDWo3qnYKVBWYEZwy2C/IWww9lsIr+N/sshuJGwWvis5WnbEUE0SVZOivrbtfzkX1+nfofwIAAP//BIM1S7kfAAA=")
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 18:32:50 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .monitoring: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2020/07/10 18:38:15 [INFO] Terraform version: 0.12.23  
2020/07/10 18:38:15 [INFO] Go runtime version: go1.12.13
2020/07/10 18:38:15 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 18:38:15 [INFO] CLI command args: []string{"apply"}
2020/07/10 18:38:15 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 18:38:15 [INFO] backend/local: starting Apply operation
2020-07-10T18:38:16.371+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:38:16.425+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:38:16.424+0100
2020-07-10T18:38:16.563+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:38:16.598+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:38:16.598+0100
2020/07/10 18:38:16 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T18:38:16.677+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:38:16.708+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:38:16.708+0100
2020-07-10T18:38:16.733+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:38:16.790+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:38:16.790+0100
2020/07/10 18:38:16 [INFO] backend/local: apply calling Refresh
2020/07/10 18:38:16 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T18:38:16.974+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:38:17.006+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:38:17.006+0100
2020-07-10T18:38:17.031+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:38:17.088+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:38:17.088+0100
2020/07/10 18:38:24 [INFO] backend/local: apply calling Plan
2020/07/10 18:38:24 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T18:38:24.293+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:38:24.332+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:38:24.332+0100
2020-07-10T18:38:24.359+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:38:24.415+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:38:24.415+0100
2020/07/10 18:38:27 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 18:38:27 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
2020/07/10 18:38:27 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 18:38:27 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
BZbG2wOww89GMN8lTeRJKzjBwJuYWF1BX351Qz+fB8025Y8qlynwfWOWeuJCQywxWTMWm9tPyspyO/16zFOUUa8gFMAE1n6oa1G5k7RSILDDDSFHYL663GPpUwevyxckE0w1SLuit7lMIU4rmp6dbiRsJr4vNVtGoQtgiUlDLknOojQ0q5dgmxV9Pqkhr1ot3Ub3+yvqfAAAA//8FUrNE+BkAAA==") nor prior value cty.StringVal("e1f0a5db0783672410c0317ae5a7e92d50e4f3f9")
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
2020/07/10 18:38:30 [INFO] backend/local: apply calling Apply
2020/07/10 18:38:30 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 18:38:30 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 18:38:30 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 18:38:30 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 18:38:30 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 18:38:30 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 18:38:30 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 18:38:30 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 18:38:30 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 18:38:30 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 18:38:30 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 18:38:30 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020-07-10T18:38:30.254+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:38:30.295+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:38:30.294+0100
2020-07-10T18:38:30.324+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T18:38:30.381+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T18:38:30.381+0100
2020/07/10 18:39:03 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
h0WAPKuQRPppxYZ03CljvsMyk1Td//93/B/o/mqwP+8G/+67NmRbbOmsazwtECiE36YmTmSbT7BxELx3IloO7CvlkyJ/ub9fM19kbBZbG2wOww89GMN8lTeRJKzjBwJuYWF1BX351Qz+fB8025Y8qlynwfWOWeuJCQywxWTMWm9tPyspyO/16zFOUUa8gFMAE1n6oa1G5k7RSILDDDSFHYL663GPpUwevyxckE0w1SLuit7lMIU4rmp6dbiRsJr4vNVtGoQtgiUlDLknOojQ0q5dgmxV9Pqkhr1ot3Ub3+yvqfAAAA//8FUrNE+BkAAA==")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 18:39:32 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .disable_api_termination: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2020/07/10 19:42:34 [INFO] Terraform version: 0.12.23  
2020/07/10 19:42:34 [INFO] Go runtime version: go1.12.13
2020/07/10 19:42:34 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 19:42:34 [INFO] CLI command args: []string{"apply"}
2020/07/10 19:42:34 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 19:42:34 [INFO] backend/local: starting Apply operation
2020-07-10T19:42:35.446+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T19:42:35.507+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T19:42:35.506+0100
2020-07-10T19:42:35.642+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T19:42:35.674+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T19:42:35.674+0100
2020/07/10 19:42:35 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T19:42:35.762+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T19:42:35.816+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T19:42:35.815+0100
2020-07-10T19:42:35.842+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T19:42:35.875+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T19:42:35.875+0100
2020/07/10 19:42:36 [INFO] backend/local: apply calling Refresh
2020/07/10 19:42:36 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T19:42:36.023+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T19:42:36.054+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T19:42:36.053+0100
2020-07-10T19:42:36.078+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T19:42:36.136+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T19:42:36.136+0100
2020/07/10 19:42:54 [INFO] backend/local: apply calling Plan
2020/07/10 19:42:54 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T19:42:54.184+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T19:42:54.225+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T19:42:54.225+0100
2020-07-10T19:42:54.252+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T19:42:54.308+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T19:42:54.308+0100
2020/07/10 19:42:58 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
2020/07/10 19:42:58 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
llVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 19:42:58 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 19:42:58 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
Cy2JrgVlh5psZb5Kn8iSUnGHgTMwtLqCu/t6A2v/Wotwx5VJlPg+sck1cSMhlBiumYlP7aXlZDsd/r1mKcoo15AKYgJpPVQ1qN7J2CkQWmGGkKOwX11sMfargdfngZILpBin381b3KYQpRfPT063EjYTXxWKraFQhbBEpqGXJOdTGBpVyapPijydVpDXrxbOoXn9l/U8AAAD//ytXfzX3GQAA") nor prior value cty.StringVal("5d77f3c239537e1a3f925781d639779f43fb7f2f")
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
2020/07/10 19:43:43 [INFO] backend/local: apply calling Apply
2020/07/10 19:43:43 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 19:43:43 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 19:43:43 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 19:43:43 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 19:43:43 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 19:43:43 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 19:43:43 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 19:43:43 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 19:43:43 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 19:43:43 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 19:43:43 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 19:43:43 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020-07-10T19:43:43.114+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T19:43:43.156+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T19:43:43.156+0100
2020-07-10T19:43:43.185+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T19:43:43.243+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T19:43:43.242+0100
2020/07/10 19:44:18 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
HosAaUcwmeTDmxzpqELXfYZ1Jqmr7/7/+C/R/NRwf84d/812fNimydNY1nhaMFEJv0xciMk2j37yEWjuVKQN2FfbNjTvY32+dr7I2Cy2JrgVlh5psZb5Kn8iSUnGHgTMwtLqCu/t6A2v/Wotwx5VJlPg+sck1cSMhlBiumYlP7aXlZDsd/r1mKcoo15AKYgJpPVQ1qN7J2CkQWmGGkKOwX11sMfargdfngZILpBin381b3KYQpRfPT063EjYTXxWKraFQhbBEpqGXJOdTGBpVyapPijydVpDXrxbOoXn9l/U8AAAD//ytXfzX3GQAA")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 19:44:42 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ebs_optimized: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2020/07/10 20:06:08 [INFO] Terraform version: 0.12.23  
2020/07/10 20:06:08 [INFO] Go runtime version: go1.12.13
2020/07/10 20:06:08 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 20:06:08 [INFO] CLI command args: []string{"apply"}
2020/07/10 20:06:08 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 20:06:08 [INFO] backend/local: starting Apply operation
2020-07-10T20:06:09.011+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:06:09.075+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:06:09.075+0100
2020-07-10T20:06:09.207+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:06:09.236+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:06:09.236+0100
2020/07/10 20:06:09 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T20:06:09.320+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:06:09.350+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:06:09.350+0100
2020-07-10T20:06:09.374+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:06:09.437+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:06:09.437+0100
2020/07/10 20:06:09 [INFO] backend/local: apply calling Refresh
2020/07/10 20:06:09 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T20:06:09.624+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:06:09.653+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:06:09.653+0100
2020-07-10T20:06:09.678+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:06:09.739+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:06:09.738+0100
2020/07/10 20:06:16 [INFO] backend/local: apply calling Plan
2020/07/10 20:06:16 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T20:06:16.793+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:06:16.832+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:06:16.832+0100
2020-07-10T20:06:16.859+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:06:16.918+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:06:16.918+0100
2020/07/10 20:06:19 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})})
2020/07/10 20:06:19 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
 "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
2020/07/10 20:06:19 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 20:06:19 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
2020/07/10 20:06:19 [INFO] backend/local: apply calling Apply
2020/07/10 20:06:19 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T20:06:19.592+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:06:19.627+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:06:19.627+0100
2020-07-10T20:06:19.652+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:06:19.710+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:06:19.710+0100
2020/07/10 20:10:39 [INFO] Terraform version: 0.12.23  
2020/07/10 20:10:39 [INFO] Go runtime version: go1.12.13
2020/07/10 20:10:39 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "destroy"}
2020/07/10 20:10:39 [INFO] CLI command args: []string{"destroy"}
2020/07/10 20:10:39 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 20:10:39 [INFO] backend/local: starting Apply operation
2020-07-10T20:10:39.862+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:10:39.917+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:10:39.917+0100
2020-07-10T20:10:40.048+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:10:40.081+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:10:40.081+0100
2020/07/10 20:10:40 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T20:10:40.161+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:10:40.191+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:10:40.191+0100
2020-07-10T20:10:40.214+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:10:40.271+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:10:40.270+0100
2020/07/10 20:10:40 [INFO] backend/local: apply calling Refresh
2020/07/10 20:10:40 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T20:10:40.456+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:10:40.487+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:10:40.487+0100
2020-07-10T20:10:40.511+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:10:40.568+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:10:40.567+0100
2020/07/10 20:10:52 [INFO] backend/local: apply calling Plan
2020/07/10 20:10:52 [INFO] terraform: building graph: GraphTypePlanDestroy
2020-07-10T20:10:52.296+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:10:52.335+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:10:52.334+0100
2020-07-10T20:10:52.362+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:10:52.421+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:10:52.420+0100
2020/07/10 20:10:55 [INFO] backend/local: apply calling Apply
2020/07/10 20:10:55 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node aws_instance.main (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-registry-ingress (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node aws_iam_instance_profile.main (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node data.aws_ami.ubuntu (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 20:10:55 DestroyEdgeTransformer: pruning unused resource node data.template_cloudinit_config.init (prepare state)
2020-07-10T20:10:55.752+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:10:55.791+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:10:55.791+0100
2020-07-10T20:10:55.819+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:10:55.871+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:10:55.871+0100
2020/07/10 20:11:00 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: error deleting S3 Bucket (pipeline-docker-registry-bucket): OperationAborted: A conflicting conditional operation is currently in progress against this resource. Please try again.
	status code: 409, request id: 26A87484D34C832F, host id: GwDfktqEFDroSwaraksNl9boQrmeOHOMbxkyOv8LE+MBeOoy982cHqfHQnpScBgNWJ7WROMObvc=
2020/07/10 20:11:00 [ERROR] <root>: eval: *terraform.EvalSequence, err: error deleting S3 Bucket (pipeline-docker-registry-bucket): OperationAborted: A conflicting conditional operation is currently in progress against this resource. Please try again.
	status code: 409, request id: 26A87484D34C832F, host id: GwDfktqEFDroSwaraksNl9boQrmeOHOMbxkyOv8LE+MBeOoy982cHqfHQnpScBgNWJ7WROMObvc=
2020/07/10 20:11:00 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: error deleting S3 Bucket (pipeline-docker-registry-bucket): OperationAborted: A conflicting conditional operation is currently in progress against this resource. Please try again.
	status code: 409, request id: 26A87484D34C832F, host id: GwDfktqEFDroSwaraksNl9boQrmeOHOMbxkyOv8LE+MBeOoy982cHqfHQnpScBgNWJ7WROMObvc=
2020/07/10 20:12:02 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 8fdd36e9-148e-45b4-99a7-fb84eb2a1263
2020/07/10 20:12:02 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 8fdd36e9-148e-45b4-99a7-fb84eb2a1263
2020/07/10 20:12:02 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 8fdd36e9-148e-45b4-99a7-fb84eb2a1263
2020/07/10 20:14:55 [INFO] Terraform version: 0.12.23  
2020/07/10 20:14:55 [INFO] Go runtime version: go1.12.13
2020/07/10 20:14:55 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 20:14:55 [INFO] CLI command args: []string{"apply"}
2020/07/10 20:14:55 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 20:14:55 [INFO] backend/local: starting Apply operation
2020-07-10T20:14:55.733+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:14:55.792+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:14:55.792+0100
2020-07-10T20:14:55.921+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:14:55.953+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:14:55.952+0100
2020/07/10 20:14:56 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T20:14:56.032+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:14:56.063+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:14:56.063+0100
2020-07-10T20:14:56.087+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:14:56.144+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:14:56.143+0100
2020/07/10 20:14:56 [INFO] backend/local: apply calling Refresh
2020/07/10 20:14:56 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T20:14:56.327+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:14:56.358+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:14:56.357+0100
2020-07-10T20:14:56.381+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:14:56.440+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:14:56.440+0100
2020/07/10 20:15:00 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 20:15:01 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 20:15:06 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 20:15:06 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
ty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 20:15:06 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
5Cphnetd60/AkbV22+CUsFUxTqqKpLQGROUAJppmhbo7tjemC1leKm93fmp0Wq0Gu0To9/kyRTTpibNi+3XEts/chl9LivGfChSZSVzwlKoL15i9OtOOoyc+vxMIxOErhvm8lmVf61lR0lzR6Qs97MfLm77H/0/XYIhvrfOijuORHReo6JmCBSR99amYs4005y+37RMszx+uU6oRoBjlCqqz2uZntXf1aD53jprlnrOQklywBwpdV7DUmjEBE1rOxoMH03fn8XtrZW4/b6Up+kOI2FLYOS8tkrRYlHosAaUcwmeTDmxzpqELXfYZ1Jqmr7/7/+C/R/NRwf84d/812fNimydNY1nhaMFEJv0xciMk2j37yEWjuVKQN2FfbNjTvY32+dr7I2Cy2JrgVlh5psZb5Kn8iSUnGHgTMwtLqCu/t6A2v/Wotwx5VJlPg+sck1cSMhlBiumYlP7aXlZDsd/r1mKcoo15AKYgJpPVQ1qN7J2CkQWmGGkKOwX11sMfargdfngZILpBin381b3KYQpRfPT063EjYTXxWKraFQhbBEpqGXJOdTGBpVyapPijydVpDXrxbOoXn9l/U8AAAD//ytXfzX3GQAA")
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 20:15:06 [INFO] backend/local: apply calling Plan
2020/07/10 20:15:06 [INFO] terraform: building graph: GraphTypePlan
3_bucket.encrypted - *terraform.NodePlannableResource
    aws_s3_bucket_policy.main - *terraform.NodePlannableResource
  provider.template - *terraform.NodeApplyableProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
    data.template_cloudinit_config.init - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.template (close) - *terraform.graphNodeCloseProvider
  var.ansible_pem_key - *terraform.NodeRootVariable
  var.bucket - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020-07-10T20:15:06.572+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:15:06.610+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:15:06.609+0100
2020-07-10T20:15:06.638+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:15:06.698+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:15:06.698+0100
2020/07/10 20:15:09 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 20:15:09 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 20:15:09 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 20:15:09 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
2020/07/10 20:15:09 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 20:15:09 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
VzwlKoL15i9OtOOoyc+vxMIxOErhvm8lmVf61lR0lzR6Qs97MfLm77H/0/XYIhvrfOijuORHReo6JmCBSR99amYs4005y+37RMszx+uU6oRoBjlCqqz2uZntXf1aD53jprlnrOQklywBwpdV7DUmjEBE1rOxoMH03fn8XtrZW4/b6Up+kOI2FLYOS8tkrRYlHosAaUcwmeTDmxzpqELXfYZ1Jqmr7/7/+C/R/NRwf84d/812fNimydNY1nhaMFEJv0xciMk2j37yEWjuVKQN2FfbNjTvY32+dr7I2Cy2JrgVlh5psZb5Kn8iSUnGHgTMwtLqCu/t6A2v/Wotwx5VJlPg+sck1cSMhlBiumYlP7aXlZDsd/r1mKcoo15AKYgJpPVQ1qN7J2CkQWmGGkKOwX11sMfargdfngZILpBin381b3KYQpRfPT063EjYTXxWKraFQhbBEpqGXJOdTGBpVyapPijydVpDXrxbOoXn9l/U8AAAD//ytXfzX3GQAA")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 20:15:11 [INFO] backend/local: apply calling Apply
2020/07/10 20:15:11 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T20:15:11.739+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:15:11.781+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:15:11.780+0100
2020-07-10T20:15:11.809+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:15:11.868+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:15:11.867+0100
2020/07/10 20:15:14 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 20:15:14 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 20:15:14 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 20:15:14 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
2020/07/10 20:15:17 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
05y+37RMszx+uU6oRoBjlCqqz2uZntXf1aD53jprlnrOQklywBwpdV7DUmjEBE1rOxoMH03fn8XtrZW4/b6Up+kOI2FLYOS8tkrRYlHosAaUcwmeTDmxzpqELXfYZ1Jqmr7/7/+C/R/NRwf84d/812fNimydNY1nhaMFEJv0xciMk2j37yEWjuVKQN2FfbNjTvY32+dr7I2Cy2JrgVlh5psZb5Kn8iSUnGHgTMwtLqCu/t6A2v/Wotwx5VJlPg+sck1cSMhlBiumYlP7aXlZDsd/r1mKcoo15AKYgJpPVQ1qN7J2CkQWmGGkKOwX11sMfargdfngZILpBin381b3KYQpRfPT063EjYTXxWKraFQhbBEpqGXJOdTGBpVyapPijydVpDXrxbOoXn9l/U8AAAD//ytXfzX3GQAA")
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 20:15:50 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ebs_optimized: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2020/07/10 20:39:34 [INFO] Terraform version: 0.12.23  
2020/07/10 20:39:34 [INFO] Go runtime version: go1.12.13
2020/07/10 20:39:34 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "destroy"}
2020/07/10 20:39:34 [INFO] CLI command args: []string{"destroy"}
2020/07/10 20:39:34 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 20:39:34 [INFO] backend/local: starting Apply operation
2020-07-10T20:39:34.737+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:39:34.804+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:39:34.804+0100
2020-07-10T20:39:34.942+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:39:34.972+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:39:34.972+0100
2020/07/10 20:39:35 [INFO] Terraform version: 0.12.23  
2020/07/10 20:39:35 [INFO] Go runtime version: go1.12.13
2020/07/10 20:39:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:39:35 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:39:35 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:39:35.073879+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin093453922","network":"unix"}
2020/07/10 20:39:35 [INFO] Terraform version: 0.12.23  
2020/07/10 20:39:35 [INFO] Go runtime version: go1.12.13
2020/07/10 20:39:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:39:35 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:39:35 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:39:35.108734+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin593029572","network":"unix"}
2020/07/10 20:39:35 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T20:39:35.125+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:39:35 [INFO] Terraform version: 0.12.23  
2020/07/10 20:39:35 [INFO] Go runtime version: go1.12.13
2020/07/10 20:39:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:39:35 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:39:35 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:39:35.155360+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin427857206","network":"unix"}
2020-07-10T20:39:35.162+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:39:35.162+0100
2020/07/10 20:39:35 [INFO] Terraform version: 0.12.23  
2020/07/10 20:39:35 [INFO] Go runtime version: go1.12.13
2020/07/10 20:39:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:39:35 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:39:35 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:39:35.187847+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin225767101","network":"unix"}
2020-07-10T20:39:35.189+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:39:35.252+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:39:35.251+0100
2020/07/10 20:39:35 [INFO] backend/local: apply calling Refresh
2020/07/10 20:39:35 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T20:39:35.449+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:39:35.481+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:39:35.480+0100
2020-07-10T20:39:35.505+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:39:35.563+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:39:35.563+0100
2020/07/10 20:39:45 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:39:45 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:39:45 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:39:45 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:39:47 [INFO] backend/local: apply calling Plan
2020/07/10 20:39:47 [INFO] terraform: building graph: GraphTypePlanDestroy
2020-07-10T20:39:47.908+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:39:47.976+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:39:47.976+0100
2020-07-10T20:39:48.004+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:39:48.038+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:39:48.038+0100
2020/07/10 20:39:52 [INFO] backend/local: apply calling Apply
2020/07/10 20:39:52 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-registry-ingress (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node data.template_cloudinit_config.init (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node aws_iam_instance_profile.main (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node data.aws_ami.ubuntu (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node aws_instance.main (prepare state)
2020/07/10 20:39:52 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020-07-10T20:39:52.600+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:39:52 [INFO] Terraform version: 0.12.23  
2020/07/10 20:39:52 [INFO] Go runtime version: go1.12.13
2020/07/10 20:39:52 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:39:52 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:39:52 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:39:52.636980+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin160831474","network":"unix"}
2020-07-10T20:39:52.644+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:39:52.643+0100
2020/07/10 20:39:52 [INFO] Terraform version: 0.12.23  
2020/07/10 20:39:52 [INFO] Go runtime version: go1.12.13
2020/07/10 20:39:52 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:39:52 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:39:52 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:39:52.671756+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin533238793","network":"unix"}
2020-07-10T20:39:52.673+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:39:52.729+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:39:52.729+0100
2020/07/10 20:40:57 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 0d900401-56db-4aff-9f43-a92c273c150d
2020/07/10 20:40:57 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 0d900401-56db-4aff-9f43-a92c273c150d
2020/07/10 20:40:57 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 0d900401-56db-4aff-9f43-a92c273c150d
2020/07/10 20:41:10 [INFO] Terraform version: 0.12.23  
2020/07/10 20:41:10 [INFO] Go runtime version: go1.12.13
2020/07/10 20:41:10 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 20:41:10 [INFO] CLI command args: []string{"apply"}
2020/07/10 20:41:10 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 20:41:10 [INFO] backend/local: starting Apply operation
2020-07-10T20:41:11.157+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:41:11.211+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:41:11.210+0100
2020-07-10T20:41:11.339+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:41:11.368+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:41:11.368+0100
2020/07/10 20:41:11 [INFO] Terraform version: 0.12.23  
2020/07/10 20:41:11 [INFO] Go runtime version: go1.12.13
2020/07/10 20:41:11 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:41:11 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:41:11 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:41:11.470809+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin422539867","network":"unix"}
2020/07/10 20:41:11 [INFO] Terraform version: 0.12.23  
2020/07/10 20:41:11 [INFO] Go runtime version: go1.12.13
2020/07/10 20:41:11 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:41:11 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:41:11 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:41:11.504013+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin703333677","network":"unix"}
2020/07/10 20:41:11 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T20:41:11.519+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:41:11 [INFO] Terraform version: 0.12.23  
2020/07/10 20:41:11 [INFO] Go runtime version: go1.12.13
2020/07/10 20:41:11 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:41:11 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:41:11 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:41:11.550365+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin087776415","network":"unix"}
2020-07-10T20:41:11.557+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:41:11.557+0100
2020/07/10 20:41:11 [INFO] Terraform version: 0.12.23  
2020/07/10 20:41:11 [INFO] Go runtime version: go1.12.13
2020/07/10 20:41:11 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:41:11 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:41:11 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:41:11.582469+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin321665454","network":"unix"}
2020-07-10T20:41:11.584+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:41:11.644+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:41:11.644+0100
2020/07/10 20:41:11 [INFO] backend/local: apply calling Refresh
2020/07/10 20:41:11 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T20:41:11.839+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:41:11.870+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:41:11.869+0100
2020-07-10T20:41:11.894+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:41:11.951+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:41:11.951+0100
2020/07/10 20:41:16 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 20:41:16 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 20:41:17 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 20:41:17 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 20:41:17 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
e, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 20:41:17 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:41:17 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:41:17 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:41:17 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:41:17 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
Z/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 20:41:17 [INFO] backend/local: apply calling Plan
2020/07/10 20:41:17 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T20:41:17.807+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:41:17 [INFO] Terraform version: 0.12.23  
2020/07/10 20:41:17 [INFO] Go runtime version: go1.12.13
2020/07/10 20:41:17 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:41:17 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:41:17 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:41:17.839118+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin921379588","network":"unix"}
2020-07-10T20:41:17.851+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:41:17.851+0100
2020/07/10 20:41:17 [INFO] Terraform version: 0.12.23  
2020/07/10 20:41:17 [INFO] Go runtime version: go1.12.13
2020/07/10 20:41:17 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:41:17 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:41:17 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:41:17.877937+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin324383923","network":"unix"}
2020-07-10T20:41:17.882+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:41:17.947+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:41:17.947+0100
2020/07/10 20:41:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 20:41:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 20:41:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 20:41:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 20:41:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 20:41:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
Z/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
ting nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 20:41:23 [INFO] backend/local: apply calling Apply
2020/07/10 20:41:23 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T20:41:23.915+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:41:23 [INFO] Terraform version: 0.12.23  
2020/07/10 20:41:23 [INFO] Go runtime version: go1.12.13
2020/07/10 20:41:23 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:41:23 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:41:23 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:41:23.951835+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin326634639","network":"unix"}
2020-07-10T20:41:23.964+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:41:23.964+0100
2020/07/10 20:41:23 [INFO] Terraform version: 0.12.23  
2020/07/10 20:41:23 [INFO] Go runtime version: go1.12.13
2020/07/10 20:41:23 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:41:23 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:41:23 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:41:23.988765+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin341905766","network":"unix"}
2020-07-10T20:41:23.993+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:41:24.056+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:41:24.056+0100
2020/07/10 20:41:26 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 20:41:26 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 20:41:26 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 20:41:26 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
ty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 20:41:26 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 20:41:27 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error putting S3 policy: NoSuchBucket: The specified bucket does not exist
	status code: 404, request id: 93DA5A584CC90F55, host id: xAVVg5Z1a/YmIqmhAsaFjxcbHnoeI13wvSDF7Fqv0XWW74vHKmU+dnefkfc6h1tmaJYPYSMUOZI=
2020/07/10 20:41:27 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error putting S3 policy: NoSuchBucket: The specified bucket does not exist
	status code: 404, request id: 93DA5A584CC90F55, host id: xAVVg5Z1a/YmIqmhAsaFjxcbHnoeI13wvSDF7Fqv0XWW74vHKmU+dnefkfc6h1tmaJYPYSMUOZI=
2020/07/10 20:41:29 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
sted attribute values to unknown instead
2020/07/10 20:42:02 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .disable_api_termination: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
file-provisioner (internal) 2020/07/10 20:42:02 using private key for authentication
file-provisioner (internal) 2020/07/10 20:42:02 [DEBUG] Connecting to ec2-3-9-135-207.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 20:42:13 [ERROR] connection error: dial tcp 3.9.135.207:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:42:13 [WARN] retryable error: dial tcp 3.9.135.207:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:42:13 [INFO] sleeping for 1s
file-provisioner (internal) 2020/07/10 20:42:14 [DEBUG] Connecting to ec2-3-9-135-207.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 20:42:14 [DEBUG] Connection established. Handshaking for user ubuntu
file-provisioner (internal) 2020/07/10 20:42:15 [DEBUG] Telling SSH config to forward to agent
file-provisioner (internal) 2020/07/10 20:42:15 [DEBUG] Setting up a session to request agent forwarding
file-provisioner (internal) 2020/07/10 20:42:17 [INFO] agent forwarding enabled
file-provisioner (internal) 2020/07/10 20:42:17 [DEBUG] starting ssh KeepAlives
file-provisioner (internal) 2020/07/10 20:42:17 [DEBUG] opening new ssh session
file-provisioner (internal) 2020/07/10 20:42:17 [DEBUG] Starting remote scp process:  scp -vt /tmp
file-provisioner (internal) 2020/07/10 20:42:17 [DEBUG] Started SCP session, beginning transfers...
file-provisioner (internal) 2020/07/10 20:42:17 [DEBUG] Copying input data into temporary file so we can read the length
file-provisioner (internal) 2020/07/10 20:42:17 [DEBUG] Beginning file upload...
file-provisioner (internal) 2020/07/10 20:42:17 [DEBUG] SCP session complete, closing stdin pipe.
file-provisioner (internal) 2020/07/10 20:42:17 [DEBUG] Waiting for SSH session to complete.
file-provisioner (internal) 2020/07/10 20:42:17 [ERROR] scp stderr: "Sink: C0644 3710 nginx_sblock.sh\n"
remote-exec-provisioner (internal) 2020/07/10 20:42:17 using private key for authentication
remote-exec-provisioner (internal) 2020/07/10 20:42:17 [DEBUG] Connecting to ec2-3-9-135-207.eu-west-2.compute.amazonaws.com:22 for SSH
remote-exec-provisioner (internal) 2020/07/10 20:42:17 [DEBUG] Connection established. Handshaking for user ubuntu
remote-exec-provisioner (internal) 2020/07/10 20:42:18 [DEBUG] Telling SSH config to forward to agent
remote-exec-provisioner (internal) 2020/07/10 20:42:18 [DEBUG] Setting up a session to request agent forwarding
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [INFO] agent forwarding enabled
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [DEBUG] starting ssh KeepAlives
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [ERROR] scp stderr: "Sink: C0644 73 terraform_2066284043.sh\n"
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [DEBUG] starting remote command: chmod 0777 /tmp/terraform_2066284043.sh
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [DEBUG] remote command exited with '0': chmod 0777 /tmp/terraform_2066284043.sh
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [DEBUG] starting remote command: /tmp/terraform_2066284043.sh
remote-exec-provisioner (internal) 2020/07/10 20:42:19 [DEBUG] remote command exited with '1': /tmp/terraform_2066284043.sh
2020/07/10 20:42:19 [WARN] Errors while provisioning aws_instance.main with "remote-exec", so aborting
2020/07/10 20:42:19 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: 1 error occurred:
	* error executing "/tmp/terraform_2066284043.sh": Process exited with status 1

2020/07/10 20:42:19 [ERROR] <root>: eval: *terraform.EvalSequence, err: error executing "/tmp/terraform_2066284043.sh": Process exited with status 1
2020/07/10 20:43:12 [INFO] Terraform version: 0.12.23  
2020/07/10 20:43:12 [INFO] Go runtime version: go1.12.13
2020/07/10 20:43:12 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 20:43:12 [INFO] CLI command args: []string{"apply"}
2020/07/10 20:43:12 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 20:43:12 [INFO] backend/local: starting Apply operation
2020-07-10T20:43:12.832+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:43:12.886+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:43:12.886+0100
2020-07-10T20:43:13.018+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:43:13.049+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:43:13.049+0100
2020/07/10 20:43:13 [INFO] Terraform version: 0.12.23  
2020/07/10 20:43:13 [INFO] Go runtime version: go1.12.13
2020/07/10 20:43:13 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:43:13 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:43:13 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:43:13.152286+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin239002746","network":"unix"}
2020/07/10 20:43:13 [INFO] Terraform version: 0.12.23  
2020/07/10 20:43:13 [INFO] Go runtime version: go1.12.13
2020/07/10 20:43:13 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:43:13 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:43:13 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:43:13.185196+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin247725092","network":"unix"}
2020/07/10 20:43:13 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T20:43:13.196+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:43:13 [INFO] Terraform version: 0.12.23  
2020/07/10 20:43:13 [INFO] Go runtime version: go1.12.13
2020/07/10 20:43:13 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:43:13 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:43:13 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:43:13.224278+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin614781222","network":"unix"}
2020-07-10T20:43:13.233+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:43:13.233+0100
2020/07/10 20:43:13 [INFO] Terraform version: 0.12.23  
2020/07/10 20:43:13 [INFO] Go runtime version: go1.12.13
2020/07/10 20:43:13 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:43:13 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:43:13 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:43:13.256810+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin560610757","network":"unix"}
2020-07-10T20:43:13.260+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:43:13.321+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:43:13.321+0100
2020/07/10 20:43:13 [INFO] backend/local: apply calling Refresh
2020/07/10 20:43:13 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T20:43:13.515+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:43:13.544+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:43:13.544+0100
2020-07-10T20:43:13.568+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:43:13.625+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:43:13.625+0100
2020/07/10 20:43:18 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:43:18 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:43:18 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:43:18 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:43:20 [INFO] backend/local: apply calling Plan
2020/07/10 20:43:20 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T20:43:20.816+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:43:20 [INFO] Terraform version: 0.12.23  
2020/07/10 20:43:20 [INFO] Go runtime version: go1.12.13
2020/07/10 20:43:20 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:43:20 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:43:20 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:43:20.847802+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin414216184","network":"unix"}
2020-07-10T20:43:20.863+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:43:20.863+0100
2020/07/10 20:43:20 [INFO] Terraform version: 0.12.23  
2020/07/10 20:43:20 [INFO] Go runtime version: go1.12.13
2020/07/10 20:43:20 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:43:20 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:43:20 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:43:20.880594+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin033812647","network":"unix"}
2020-07-10T20:43:20.889+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:43:20.952+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:43:20.952+0100
2020/07/10 20:43:23 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})})
2020/07/10 20:43:23 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 20:43:23 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 20:43:23 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
srA3rWcGOn6qZ/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
sted attribute values to unknown instead
2020/07/10 20:43:27 [INFO] backend/local: apply calling Apply
2020/07/10 20:43:27 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 20:43:27 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 20:43:27 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 20:43:27 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 20:43:27 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 20:43:27 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 20:43:27 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 20:43:27 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 20:43:27 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 20:43:27 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020-07-10T20:43:27.341+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:43:27 [INFO] Terraform version: 0.12.23  
2020/07/10 20:43:27 [INFO] Go runtime version: go1.12.13
2020/07/10 20:43:27 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:43:27 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:43:27 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:43:27.376305+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin803723880","network":"unix"}
2020-07-10T20:43:27.388+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:43:27.388+0100
2020/07/10 20:43:27 [INFO] Terraform version: 0.12.23  
2020/07/10 20:43:27 [INFO] Go runtime version: go1.12.13
2020/07/10 20:43:27 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:43:27 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:43:27 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:43:27.414481+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin761225327","network":"unix"}
2020-07-10T20:43:27.418+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:43:27.482+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:43:27.482+0100
2020/07/10 20:44:00 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
srA3rWcGOn6qZ/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
sted attribute values to unknown instead
2020/07/10 20:44:24 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .disable_api_termination: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
file-provisioner (internal) 2020/07/10 20:44:24 using private key for authentication
file-provisioner (internal) 2020/07/10 20:44:24 [DEBUG] Connecting to ec2-35-177-83-59.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 20:44:35 [ERROR] connection error: dial tcp 35.177.83.59:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:44:35 [WARN] retryable error: dial tcp 35.177.83.59:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:44:35 [INFO] sleeping for 1s
file-provisioner (internal) 2020/07/10 20:44:36 [DEBUG] Connecting to ec2-35-177-83-59.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 20:44:36 [ERROR] connection error: dial tcp 35.177.83.59:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:44:36 [WARN] retryable error: dial tcp 35.177.83.59:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:44:36 [INFO] sleeping for 2s
file-provisioner (internal) 2020/07/10 20:44:38 [DEBUG] Connecting to ec2-35-177-83-59.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 20:44:38 [DEBUG] Connection established. Handshaking for user ubuntu
file-provisioner (internal) 2020/07/10 20:44:38 [DEBUG] Telling SSH config to forward to agent
file-provisioner (internal) 2020/07/10 20:44:38 [DEBUG] Setting up a session to request agent forwarding
file-provisioner (internal) 2020/07/10 20:44:40 [INFO] agent forwarding enabled
file-provisioner (internal) 2020/07/10 20:44:40 [DEBUG] starting ssh KeepAlives
file-provisioner (internal) 2020/07/10 20:44:40 [DEBUG] opening new ssh session
file-provisioner (internal) 2020/07/10 20:44:40 [DEBUG] Starting remote scp process:  scp -vt /tmp
file-provisioner (internal) 2020/07/10 20:44:40 [DEBUG] Started SCP session, beginning transfers...
file-provisioner (internal) 2020/07/10 20:44:40 [DEBUG] Copying input data into temporary file so we can read the length
file-provisioner (internal) 2020/07/10 20:44:40 [DEBUG] Beginning file upload...
file-provisioner (internal) 2020/07/10 20:44:40 [DEBUG] SCP session complete, closing stdin pipe.
file-provisioner (internal) 2020/07/10 20:44:40 [DEBUG] Waiting for SSH session to complete.
file-provisioner (internal) 2020/07/10 20:44:40 [ERROR] scp stderr: "Sink: C0644 3710 nginx_sblock.sh\n"
remote-exec-provisioner (internal) 2020/07/10 20:44:40 using private key for authentication
remote-exec-provisioner (internal) 2020/07/10 20:44:40 [DEBUG] Connecting to ec2-35-177-83-59.eu-west-2.compute.amazonaws.com:22 for SSH
remote-exec-provisioner (internal) 2020/07/10 20:44:40 [DEBUG] Connection established. Handshaking for user ubuntu
remote-exec-provisioner (internal) 2020/07/10 20:44:40 [DEBUG] Telling SSH config to forward to agent
remote-exec-provisioner (internal) 2020/07/10 20:44:40 [DEBUG] Setting up a session to request agent forwarding
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [INFO] agent forwarding enabled
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [DEBUG] starting ssh KeepAlives
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [ERROR] scp stderr: "Sink: C0644 73 terraform_1759990405.sh\n"
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [DEBUG] starting remote command: chmod 0777 /tmp/terraform_1759990405.sh
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [DEBUG] remote command exited with '0': chmod 0777 /tmp/terraform_1759990405.sh
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [DEBUG] starting remote command: /tmp/terraform_1759990405.sh
remote-exec-provisioner (internal) 2020/07/10 20:44:41 [DEBUG] remote command exited with '1': /tmp/terraform_1759990405.sh
2020/07/10 20:44:41 [WARN] Errors while provisioning aws_instance.main with "remote-exec", so aborting
2020/07/10 20:44:41 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: 1 error occurred:
	* error executing "/tmp/terraform_1759990405.sh": Process exited with status 1

2020/07/10 20:44:41 [ERROR] <root>: eval: *terraform.EvalSequence, err: error executing "/tmp/terraform_1759990405.sh": Process exited with status 1
2020/07/10 20:46:08 [INFO] Terraform version: 0.12.23  
2020/07/10 20:46:08 [INFO] Go runtime version: go1.12.13
2020/07/10 20:46:08 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 20:46:08 [INFO] CLI command args: []string{"apply"}
2020/07/10 20:46:08 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 20:46:08 [INFO] backend/local: starting Apply operation
2020-07-10T20:46:08.690+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:46:08.744+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:46:08.744+0100
2020-07-10T20:46:08.865+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:46:08.895+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:46:08.895+0100
2020/07/10 20:46:08 [INFO] Terraform version: 0.12.23  
2020/07/10 20:46:08 [INFO] Go runtime version: go1.12.13
2020/07/10 20:46:08 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:46:08 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:46:08 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:46:08.994283+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin971661499","network":"unix"}
2020/07/10 20:46:09 [INFO] Terraform version: 0.12.23  
2020/07/10 20:46:09 [INFO] Go runtime version: go1.12.13
2020/07/10 20:46:09 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:46:09 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:46:09 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:46:09.024560+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin858806429","network":"unix"}
2020/07/10 20:46:09 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T20:46:09.034+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:46:09 [INFO] Terraform version: 0.12.23  
2020/07/10 20:46:09 [INFO] Go runtime version: go1.12.13
2020/07/10 20:46:09 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:46:09 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:46:09 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:46:09.062818+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin116035647","network":"unix"}
2020-07-10T20:46:09.071+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:46:09.071+0100
2020/07/10 20:46:09 [INFO] Terraform version: 0.12.23  
2020/07/10 20:46:09 [INFO] Go runtime version: go1.12.13
2020/07/10 20:46:09 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:46:09 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:46:09 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:46:09.093809+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin288304414","network":"unix"}
2020-07-10T20:46:09.097+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:46:09.155+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:46:09.155+0100
2020/07/10 20:46:09 [INFO] backend/local: apply calling Refresh
2020/07/10 20:46:09 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T20:46:09.350+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:46:09.381+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:46:09.381+0100
2020-07-10T20:46:09.405+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:46:09.465+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:46:09.465+0100
2020/07/10 20:46:14 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:46:14 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:46:14 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:46:14 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:46:18 [INFO] backend/local: apply calling Plan
2020/07/10 20:46:18 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T20:46:18.494+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:46:18 [INFO] Terraform version: 0.12.23  
2020/07/10 20:46:18 [INFO] Go runtime version: go1.12.13
2020/07/10 20:46:18 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:46:18 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:46:18 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:46:18.532686+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin528081633","network":"unix"}
2020-07-10T20:46:18.541+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:46:18.540+0100
2020/07/10 20:46:18 [INFO] Terraform version: 0.12.23  
2020/07/10 20:46:18 [INFO] Go runtime version: go1.12.13
2020/07/10 20:46:18 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:46:18 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:46:18 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:46:18.567348+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin795222936","network":"unix"}
2020-07-10T20:46:18.568+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:46:18.630+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:46:18.629+0100
2020/07/10 20:46:26 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})})
2020/07/10 20:46:26 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
rt":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
2020/07/10 20:46:26 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 20:46:26 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
zmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
sted attribute values to unknown instead
2020/07/10 20:46:28 [INFO] backend/local: apply calling Apply
2020/07/10 20:46:28 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 20:46:28 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 20:46:28 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 20:46:28 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 20:46:28 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 20:46:28 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 20:46:28 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 20:46:28 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 20:46:28 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 20:46:28 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 20:46:28 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 20:46:28 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020-07-10T20:46:28.543+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:46:28 [INFO] Terraform version: 0.12.23  
2020/07/10 20:46:28 [INFO] Go runtime version: go1.12.13
2020/07/10 20:46:28 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 20:46:28 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 20:46:28 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:46:28.577188+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin857541580","network":"unix"}
2020-07-10T20:46:28.590+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:46:28.590+0100
2020/07/10 20:46:28 [INFO] Terraform version: 0.12.23  
2020/07/10 20:46:28 [INFO] Go runtime version: go1.12.13
2020/07/10 20:46:28 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:46:28 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:46:28 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:46:28.613909+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin077509907","network":"unix"}
2020-07-10T20:46:28.619+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:46:28.681+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:46:28.681+0100
2020/07/10 20:47:01 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
srA3rWcGOn6qZ/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
sted attribute values to unknown instead
2020/07/10 20:47:25 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .disable_api_termination: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
file-provisioner (internal) 2020/07/10 20:47:25 using private key for authentication
file-provisioner (internal) 2020/07/10 20:47:25 [DEBUG] Connecting to ec2-35-176-69-253.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 20:47:29 [ERROR] connection error: dial tcp 35.176.69.253:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:47:29 [WARN] retryable error: dial tcp 35.176.69.253:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:47:29 [INFO] sleeping for 1s
file-provisioner (internal) 2020/07/10 20:47:30 [DEBUG] Connecting to ec2-35-176-69-253.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 20:47:30 [ERROR] connection error: dial tcp 35.176.69.253:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:47:30 [WARN] retryable error: dial tcp 35.176.69.253:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:47:30 [INFO] sleeping for 2s
file-provisioner (internal) 2020/07/10 20:47:32 [DEBUG] Connecting to ec2-35-176-69-253.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 20:47:33 [ERROR] connection error: dial tcp 35.176.69.253:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:47:33 [WARN] retryable error: dial tcp 35.176.69.253:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:47:33 [INFO] sleeping for 4s
file-provisioner (internal) 2020/07/10 20:47:37 [DEBUG] Connecting to ec2-35-176-69-253.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 20:47:37 [DEBUG] Connection established. Handshaking for user ubuntu
file-provisioner (internal) 2020/07/10 20:47:37 [DEBUG] Telling SSH config to forward to agent
file-provisioner (internal) 2020/07/10 20:47:37 [DEBUG] Setting up a session to request agent forwarding
file-provisioner (internal) 2020/07/10 20:47:39 [INFO] agent forwarding enabled
file-provisioner (internal) 2020/07/10 20:47:39 [DEBUG] starting ssh KeepAlives
file-provisioner (internal) 2020/07/10 20:47:39 [DEBUG] opening new ssh session
file-provisioner (internal) 2020/07/10 20:47:39 [DEBUG] Starting remote scp process:  scp -vt /tmp
file-provisioner (internal) 2020/07/10 20:47:39 [DEBUG] Started SCP session, beginning transfers...
file-provisioner (internal) 2020/07/10 20:47:39 [DEBUG] Copying input data into temporary file so we can read the length
file-provisioner (internal) 2020/07/10 20:47:39 [DEBUG] Beginning file upload...
file-provisioner (internal) 2020/07/10 20:47:39 [DEBUG] SCP session complete, closing stdin pipe.
file-provisioner (internal) 2020/07/10 20:47:39 [DEBUG] Waiting for SSH session to complete.
file-provisioner (internal) 2020/07/10 20:47:39 [ERROR] scp stderr: "Sink: C0644 3710 nginx_sblock.sh\n"
remote-exec-provisioner (internal) 2020/07/10 20:47:39 using private key for authentication
remote-exec-provisioner (internal) 2020/07/10 20:47:39 [DEBUG] Connecting to ec2-35-176-69-253.eu-west-2.compute.amazonaws.com:22 for SSH
remote-exec-provisioner (internal) 2020/07/10 20:47:39 [DEBUG] Connection established. Handshaking for user ubuntu
remote-exec-provisioner (internal) 2020/07/10 20:47:40 [DEBUG] Telling SSH config to forward to agent
remote-exec-provisioner (internal) 2020/07/10 20:47:40 [DEBUG] Setting up a session to request agent forwarding
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [INFO] agent forwarding enabled
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [DEBUG] starting ssh KeepAlives
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [ERROR] scp stderr: "Sink: C0644 68 terraform_1519904289.sh\n"
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [DEBUG] starting remote command: chmod 0777 /tmp/terraform_1519904289.sh
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [DEBUG] remote command exited with '0': chmod 0777 /tmp/terraform_1519904289.sh
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [DEBUG] starting remote command: /tmp/terraform_1519904289.sh
remote-exec-provisioner (internal) 2020/07/10 20:47:41 [DEBUG] remote command exited with '1': /tmp/terraform_1519904289.sh
2020/07/10 20:47:41 [WARN] Errors while provisioning aws_instance.main with "remote-exec", so aborting
2020/07/10 20:47:41 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: 1 error occurred:
	* error executing "/tmp/terraform_1519904289.sh": Process exited with status 1

2020/07/10 20:47:41 [ERROR] <root>: eval: *terraform.EvalSequence, err: error executing "/tmp/terraform_1519904289.sh": Process exited with status 1
2020/07/10 20:48:55 [INFO] Terraform version: 0.12.23  
2020/07/10 20:48:55 [INFO] Go runtime version: go1.12.13
2020/07/10 20:48:55 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 20:48:55 [INFO] CLI command args: []string{"apply"}
2020/07/10 20:48:55 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 20:48:55 [INFO] backend/local: starting Apply operation
2020-07-10T20:48:55.680+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:48:55.734+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:48:55.734+0100
2020-07-10T20:48:55.859+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:48:55.889+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:48:55.889+0100
2020/07/10 20:48:55 [INFO] Terraform version: 0.12.23  
2020/07/10 20:48:55 [INFO] Go runtime version: go1.12.13
2020/07/10 20:48:55 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:48:55 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:48:55 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:48:55.988871+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin994662011","network":"unix"}
2020/07/10 20:48:55 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T20:48:56.005+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:48:56 [INFO] Terraform version: 0.12.23  
2020/07/10 20:48:56 [INFO] Go runtime version: go1.12.13
2020/07/10 20:48:56 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:48:56 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:48:56 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:48:56.035239+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin645542357","network":"unix"}
2020-07-10T20:48:56.042+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:48:56.042+0100
2020-07-10T20:48:56.068+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:48:56.131+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:48:56.130+0100
2020/07/10 20:48:56 [INFO] backend/local: apply calling Refresh
2020/07/10 20:48:56 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T20:48:56.320+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:48:56.351+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:48:56.350+0100
2020-07-10T20:48:56.374+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:48:56.435+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:48:56.435+0100
2020/07/10 20:49:01 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:49:01 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 20:49:03 [INFO] backend/local: apply calling Plan
2020/07/10 20:49:03 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T20:49:03.443+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:49:03 [INFO] Terraform version: 0.12.23  
2020/07/10 20:49:03 [INFO] Go runtime version: go1.12.13
2020/07/10 20:49:03 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:49:03 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:49:03 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:49:03.477969+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin981270309","network":"unix"}
2020-07-10T20:49:03.485+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:49:03.485+0100
2020-07-10T20:49:03.512+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:49:03.574+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:49:03.574+0100
2020/07/10 20:49:06 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})})
2020/07/10 20:49:06 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
 "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
2020/07/10 20:49:06 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 20:49:06 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
sted attribute values to unknown instead
2020/07/10 20:49:09 [INFO] backend/local: apply calling Apply
2020/07/10 20:49:09 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 20:49:09 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 20:49:09 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 20:49:09 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 20:49:09 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 20:49:09 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 20:49:09 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 20:49:09 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 20:49:09 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 20:49:09 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 20:49:09 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 20:49:09 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020-07-10T20:49:09.323+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 20:49:09 [INFO] Terraform version: 0.12.23  
2020/07/10 20:49:09 [INFO] Go runtime version: go1.12.13
2020/07/10 20:49:09 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 20:49:09 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 20:49:09 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T20:49:09.357133+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin204120790","network":"unix"}
2020-07-10T20:49:09.369+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:49:09.368+0100
2020-07-10T20:49:09.397+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T20:49:09.458+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T20:49:09.458+0100
2020/07/10 20:49:42 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
sted attribute values to unknown instead
2020/07/10 20:50:06 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .disable_api_termination: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
file-provisioner (internal) 2020/07/10 20:50:06 using private key for authentication
file-provisioner (internal) 2020/07/10 20:50:06 [DEBUG] Connecting to ec2-18-132-60-43.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 20:50:13 [ERROR] connection error: dial tcp 18.132.60.43:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:50:13 [WARN] retryable error: dial tcp 18.132.60.43:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:50:13 [INFO] sleeping for 1s
file-provisioner (internal) 2020/07/10 20:50:14 [DEBUG] Connecting to ec2-18-132-60-43.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 20:50:14 [ERROR] connection error: dial tcp 18.132.60.43:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:50:14 [WARN] retryable error: dial tcp 18.132.60.43:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:50:14 [INFO] sleeping for 2s
file-provisioner (internal) 2020/07/10 20:50:16 [DEBUG] Connecting to ec2-18-132-60-43.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 20:50:16 [ERROR] connection error: dial tcp 18.132.60.43:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:50:16 [WARN] retryable error: dial tcp 18.132.60.43:22: connect: connection refused
file-provisioner (internal) 2020/07/10 20:50:16 [INFO] sleeping for 4s
file-provisioner (internal) 2020/07/10 20:50:20 [DEBUG] Connecting to ec2-18-132-60-43.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 20:50:20 [DEBUG] Connection established. Handshaking for user ubuntu
file-provisioner (internal) 2020/07/10 20:50:20 [DEBUG] Telling SSH config to forward to agent
file-provisioner (internal) 2020/07/10 20:50:20 [DEBUG] Setting up a session to request agent forwarding
file-provisioner (internal) 2020/07/10 20:50:23 [INFO] agent forwarding enabled
file-provisioner (internal) 2020/07/10 20:50:23 [DEBUG] starting ssh KeepAlives
file-provisioner (internal) 2020/07/10 20:50:23 [DEBUG] opening new ssh session
file-provisioner (internal) 2020/07/10 20:50:23 [DEBUG] Starting remote scp process:  scp -vt /tmp
file-provisioner (internal) 2020/07/10 20:50:23 [DEBUG] Started SCP session, beginning transfers...
file-provisioner (internal) 2020/07/10 20:50:23 [DEBUG] Copying input data into temporary file so we can read the length
file-provisioner (internal) 2020/07/10 20:50:23 [DEBUG] Beginning file upload...
file-provisioner (internal) 2020/07/10 20:50:23 [DEBUG] SCP session complete, closing stdin pipe.
file-provisioner (internal) 2020/07/10 20:50:23 [DEBUG] Waiting for SSH session to complete.
file-provisioner (internal) 2020/07/10 20:50:23 [ERROR] scp stderr: "Sink: C0644 3710 nginx_sblock.sh\n"
2020/07/10 21:04:10 [INFO] Terraform version: 0.12.23  
2020/07/10 21:04:10 [INFO] Go runtime version: go1.12.13
2020/07/10 21:04:10 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "destroy"}
2020/07/10 21:04:10 [INFO] CLI command args: []string{"destroy"}
2020/07/10 21:04:10 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 21:04:10 [INFO] backend/local: starting Apply operation
2020-07-10T21:04:11.595+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:04:11.661+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:04:11.661+0100
2020-07-10T21:04:11.794+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:04:11.823+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:04:11.823+0100
2020/07/10 21:04:11 [INFO] Terraform version: 0.12.23  
2020/07/10 21:04:11 [INFO] Go runtime version: go1.12.13
2020/07/10 21:04:11 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:04:11 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:04:11 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:04:11.933389+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin172208211","network":"unix"}
2020/07/10 21:04:11 [INFO] Terraform version: 0.12.23  
2020/07/10 21:04:11 [INFO] Go runtime version: go1.12.13
2020/07/10 21:04:11 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:04:11 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:04:11 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:04:11.974125+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin954655253","network":"unix"}
2020/07/10 21:04:11 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T21:04:11.989+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:04:12 [INFO] Terraform version: 0.12.23  
2020/07/10 21:04:12 [INFO] Go runtime version: go1.12.13
2020/07/10 21:04:12 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:04:12 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:04:12 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:04:12.019565+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin633984447","network":"unix"}
2020/07/10 21:04:12 [INFO] Terraform version: 0.12.23  
2020/07/10 21:04:12 [INFO] Go runtime version: go1.12.13
2020/07/10 21:04:12 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:04:12 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:04:12 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:04:12.049845+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin152163238","network":"unix"}
2020-07-10T21:04:12.054+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:04:12.054+0100
2020-07-10T21:04:12.079+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:04:12.116+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:04:12.116+0100
2020/07/10 21:04:12 [INFO] backend/local: apply calling Refresh
2020/07/10 21:04:12 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T21:04:12.268+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:04:12.299+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:04:12.299+0100
2020-07-10T21:04:12.323+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:04:12.380+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:04:12.380+0100
2020/07/10 21:04:17 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:04:17 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:04:17 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:04:17 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:04:19 [INFO] backend/local: apply calling Plan
2020/07/10 21:04:19 [INFO] terraform: building graph: GraphTypePlanDestroy
2020-07-10T21:04:19.694+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:04:19.733+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:04:19.733+0100
2020-07-10T21:04:19.759+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:04:19.816+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:04:19.816+0100
2020/07/10 21:04:23 [INFO] backend/local: apply calling Apply
2020/07/10 21:04:23 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node aws_instance.main (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node data.aws_ami.ubuntu (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node data.template_cloudinit_config.init (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node aws_iam_instance_profile.main (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 21:04:23 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-registry-ingress (prepare state)
2020-07-10T21:04:23.972+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:04:24 [INFO] Terraform version: 0.12.23  
2020/07/10 21:04:24 [INFO] Go runtime version: go1.12.13
2020/07/10 21:04:24 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:04:24 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:04:24 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:04:24.004933+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin085899773","network":"unix"}
2020-07-10T21:04:24.014+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:04:24.014+0100
2020/07/10 21:04:24 [INFO] Terraform version: 0.12.23  
2020/07/10 21:04:24 [INFO] Go runtime version: go1.12.13
2020/07/10 21:04:24 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:04:24 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:04:24 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:04:24.037655+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin060258996","network":"unix"}
2020-07-10T21:04:24.039+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:04:24.093+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:04:24.093+0100
2020/07/10 21:05:29 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: d2205245-908e-4c12-b1cc-e4f117d7b31a
2020/07/10 21:05:29 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: d2205245-908e-4c12-b1cc-e4f117d7b31a
2020/07/10 21:05:29 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: d2205245-908e-4c12-b1cc-e4f117d7b31a
2020/07/10 21:05:35 [INFO] Terraform version: 0.12.23  
2020/07/10 21:05:35 [INFO] Go runtime version: go1.12.13
2020/07/10 21:05:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 21:05:35 [INFO] CLI command args: []string{"apply"}
2020/07/10 21:05:35 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 21:05:35 [INFO] backend/local: starting Apply operation
2020-07-10T21:05:35.589+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:05:35.643+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:05:35.642+0100
2020-07-10T21:05:35.770+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:05:35.799+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:05:35.799+0100
2020/07/10 21:05:35 [INFO] Terraform version: 0.12.23  
2020/07/10 21:05:35 [INFO] Go runtime version: go1.12.13
2020/07/10 21:05:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:05:35 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:05:35 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:05:35.902763+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin541899407","network":"unix"}
2020/07/10 21:05:35 [INFO] Terraform version: 0.12.23  
2020/07/10 21:05:35 [INFO] Go runtime version: go1.12.13
2020/07/10 21:05:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:05:35 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:05:35 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:05:35.935908+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin249028481","network":"unix"}
2020/07/10 21:05:35 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T21:05:35.947+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:05:35 [INFO] Terraform version: 0.12.23  
2020/07/10 21:05:35 [INFO] Go runtime version: go1.12.13
2020/07/10 21:05:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:05:35 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:05:35 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:05:35.977602+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin735717083","network":"unix"}
2020-07-10T21:05:35.986+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:05:35.986+0100
2020/07/10 21:05:36 [INFO] Terraform version: 0.12.23  
2020/07/10 21:05:36 [INFO] Go runtime version: go1.12.13
2020/07/10 21:05:36 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:05:36 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:05:36 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:05:36.008724+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin840692426","network":"unix"}
2020-07-10T21:05:36.013+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:05:36.077+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:05:36.077+0100
2020/07/10 21:05:36 [INFO] backend/local: apply calling Refresh
2020/07/10 21:05:36 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T21:05:36.268+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:05:36.298+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:05:36.298+0100
2020-07-10T21:05:36.322+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:05:36.379+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:05:36.378+0100
2020/07/10 21:05:40 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 21:05:40 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:05:40 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 21:05:41 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 21:05:41 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
ty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 21:05:41 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:05:41 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:05:41 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:05:41 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:05:41 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
4pXdHFo+fEhiYadR9TmBwtd8FrIRzLwuDbUb2c3bA6xWehx60B0kUXNc7LNL7ZTwxo6c9vra1CeeefKQDet81GR5PsrA3rWcGOn6qZ/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
ting nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:05:41 [INFO] backend/local: apply calling Plan
2020/07/10 21:05:41 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T21:05:41.057+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:05:41 [INFO] Terraform version: 0.12.23  
2020/07/10 21:05:41 [INFO] Go runtime version: go1.12.13
2020/07/10 21:05:41 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:05:41 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:05:41 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:05:41.092860+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin258818552","network":"unix"}
2020-07-10T21:05:41.102+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:05:41.102+0100
2020/07/10 21:05:41 [INFO] Terraform version: 0.12.23  
2020/07/10 21:05:41 [INFO] Go runtime version: go1.12.13
2020/07/10 21:05:41 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:05:41 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:05:41 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:05:41.126675+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin259642383","network":"unix"}
2020-07-10T21:05:41.130+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:05:41.193+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:05:41.192+0100
2020/07/10 21:05:43 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 21:05:43 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 21:05:43 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
ty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 21:05:43 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:05:43 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 21:05:43 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
ting nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:05:47 [INFO] backend/local: apply calling Apply
2020/07/10 21:05:47 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T21:05:47.172+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:05:47 [INFO] Terraform version: 0.12.23  
2020/07/10 21:05:47 [INFO] Go runtime version: go1.12.13
2020/07/10 21:05:47 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:05:47 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:05:47 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:05:47.209806+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin714629387","network":"unix"}
2020-07-10T21:05:47.220+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:05:47.220+0100
2020/07/10 21:05:47 [INFO] Terraform version: 0.12.23  
2020/07/10 21:05:47 [INFO] Go runtime version: go1.12.13
2020/07/10 21:05:47 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:05:47 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:05:47 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:05:47.245940+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin057796714","network":"unix"}
2020-07-10T21:05:47.249+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:05:47.313+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:05:47.312+0100
2020/07/10 21:05:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 21:05:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 21:05:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
2020/07/10 21:05:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
e, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 21:05:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:05:50 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error putting S3 policy: NoSuchBucket: The specified bucket does not exist
	status code: 404, request id: 8FB98DB910B5BB92, host id: 5aLu2REmlYXRkCLYpBMCIfyty2yJqKQvJoCOfCmGravvIF+auce54WgGsVKXf0h6MrPzbpHjvRU=
2020/07/10 21:05:50 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error putting S3 policy: NoSuchBucket: The specified bucket does not exist
	status code: 404, request id: 8FB98DB910B5BB92, host id: 5aLu2REmlYXRkCLYpBMCIfyty2yJqKQvJoCOfCmGravvIF+auce54WgGsVKXf0h6MrPzbpHjvRU=
2020/07/10 21:05:52 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
zmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
sted attribute values to unknown instead
2020/07/10 21:06:31 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ebs_optimized: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
file-provisioner (internal) 2020/07/10 21:06:31 using private key for authentication
file-provisioner (internal) 2020/07/10 21:06:31 [DEBUG] Connecting to ec2-52-56-166-138.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 21:06:33 [ERROR] connection error: dial tcp 52.56.166.138:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:06:33 [WARN] retryable error: dial tcp 52.56.166.138:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:06:33 [INFO] sleeping for 1s
file-provisioner (internal) 2020/07/10 21:06:34 [DEBUG] Connecting to ec2-52-56-166-138.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 21:06:34 [ERROR] connection error: dial tcp 52.56.166.138:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:06:34 [WARN] retryable error: dial tcp 52.56.166.138:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:06:34 [INFO] sleeping for 2s
file-provisioner (internal) 2020/07/10 21:06:36 [DEBUG] Connecting to ec2-52-56-166-138.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 21:06:36 [ERROR] connection error: dial tcp 52.56.166.138:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:06:36 [WARN] retryable error: dial tcp 52.56.166.138:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:06:36 [INFO] sleeping for 4s
file-provisioner (internal) 2020/07/10 21:06:40 [DEBUG] Connecting to ec2-52-56-166-138.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 21:06:40 [DEBUG] Connection established. Handshaking for user ubuntu
file-provisioner (internal) 2020/07/10 21:06:40 [DEBUG] Telling SSH config to forward to agent
file-provisioner (internal) 2020/07/10 21:06:40 [DEBUG] Setting up a session to request agent forwarding
file-provisioner (internal) 2020/07/10 21:06:43 [INFO] agent forwarding enabled
file-provisioner (internal) 2020/07/10 21:06:43 [DEBUG] starting ssh KeepAlives
file-provisioner (internal) 2020/07/10 21:06:43 [DEBUG] opening new ssh session
file-provisioner (internal) 2020/07/10 21:06:43 [DEBUG] Starting remote scp process:  scp -vt /tmp
file-provisioner (internal) 2020/07/10 21:06:43 [DEBUG] Started SCP session, beginning transfers...
file-provisioner (internal) 2020/07/10 21:06:43 [DEBUG] Copying input data into temporary file so we can read the length
file-provisioner (internal) 2020/07/10 21:06:43 [DEBUG] Beginning file upload...
file-provisioner (internal) 2020/07/10 21:06:43 [DEBUG] SCP session complete, closing stdin pipe.
file-provisioner (internal) 2020/07/10 21:06:43 [DEBUG] Waiting for SSH session to complete.
file-provisioner (internal) 2020/07/10 21:06:43 [ERROR] scp stderr: "Sink: C0644 3710 nginx_sblock.sh\n"
remote-exec-provisioner (internal) 2020/07/10 21:06:43 using private key for authentication
remote-exec-provisioner (internal) 2020/07/10 21:06:43 [DEBUG] Connecting to ec2-52-56-166-138.eu-west-2.compute.amazonaws.com:22 for SSH
remote-exec-provisioner (internal) 2020/07/10 21:06:43 [DEBUG] Connection established. Handshaking for user ubuntu
remote-exec-provisioner (internal) 2020/07/10 21:06:43 [DEBUG] Telling SSH config to forward to agent
remote-exec-provisioner (internal) 2020/07/10 21:06:43 [DEBUG] Setting up a session to request agent forwarding
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [INFO] agent forwarding enabled
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] starting ssh KeepAlives
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [ERROR] scp stderr: "Sink: C0644 67 terraform_1494862449.sh\n"
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] starting remote command: chmod 0777 /tmp/terraform_1494862449.sh
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] remote command exited with '0': chmod 0777 /tmp/terraform_1494862449.sh
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] starting remote command: /tmp/terraform_1494862449.sh
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] remote command exited with '0': /tmp/terraform_1494862449.sh
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] Copying input data into temporary file so we can read the length
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 21:06:45 [ERROR] scp stderr: "Sink: C0644 0 terraform_1494862449.sh\n"
2020/07/10 21:07:34 [INFO] Terraform version: 0.12.23  
2020/07/10 21:07:34 [INFO] Go runtime version: go1.12.13
2020/07/10 21:07:34 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 21:07:34 [INFO] CLI command args: []string{"apply"}
2020/07/10 21:07:34 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 21:07:34 [INFO] backend/local: starting Apply operation
2020-07-10T21:07:34.755+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:07:34.809+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:07:34.808+0100
2020-07-10T21:07:34.938+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:07:34.969+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:07:34.968+0100
2020/07/10 21:07:35 [INFO] Terraform version: 0.12.23  
2020/07/10 21:07:35 [INFO] Go runtime version: go1.12.13
2020/07/10 21:07:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:07:35 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:07:35 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:07:35.068972+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin055199281","network":"unix"}
2020/07/10 21:07:35 [INFO] Terraform version: 0.12.23  
2020/07/10 21:07:35 [INFO] Go runtime version: go1.12.13
2020/07/10 21:07:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:07:35 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:07:35 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:07:35.100595+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin637223707","network":"unix"}
2020/07/10 21:07:35 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T21:07:35.114+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:07:35 [INFO] Terraform version: 0.12.23  
2020/07/10 21:07:35 [INFO] Go runtime version: go1.12.13
2020/07/10 21:07:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:07:35 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:07:35 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:07:35.142579+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin436692453","network":"unix"}
2020-07-10T21:07:35.153+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:07:35.153+0100
2020/07/10 21:07:35 [INFO] Terraform version: 0.12.23  
2020/07/10 21:07:35 [INFO] Go runtime version: go1.12.13
2020/07/10 21:07:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:07:35 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:07:35 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:07:35.175322+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin510482860","network":"unix"}
2020-07-10T21:07:35.181+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:07:35.242+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:07:35.242+0100
2020/07/10 21:07:35 [INFO] backend/local: apply calling Refresh
2020/07/10 21:07:35 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T21:07:35.435+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:07:35.465+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:07:35.464+0100
2020-07-10T21:07:35.489+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:07:35.546+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:07:35.546+0100
2020/07/10 21:07:41 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:07:41 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:07:41 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:07:41 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:07:43 [INFO] backend/local: apply calling Plan
2020/07/10 21:07:43 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T21:07:43.117+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:07:43 [INFO] Terraform version: 0.12.23  
2020/07/10 21:07:43 [INFO] Go runtime version: go1.12.13
2020/07/10 21:07:43 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:07:43 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:07:43 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:07:43.150142+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin163251495","network":"unix"}
2020/07/10 21:07:43 [INFO] Terraform version: 0.12.23  
2020/07/10 21:07:43 [INFO] Go runtime version: go1.12.13
2020/07/10 21:07:43 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:07:43 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:07:43 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:07:43.182230+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin374445678","network":"unix"}
2020-07-10T21:07:43.189+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:07:43.189+0100
2020-07-10T21:07:43.215+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:07:43.250+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:07:43.249+0100
2020/07/10 21:07:45 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})})
2020/07/10 21:07:45 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 21:07:45 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 21:07:45 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
2020/07/10 21:07:49 [INFO] backend/local: apply calling Apply
2020/07/10 21:07:49 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T21:07:49.417+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:07:49 [INFO] Terraform version: 0.12.23  
2020/07/10 21:07:49 [INFO] Go runtime version: go1.12.13
2020/07/10 21:07:49 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:07:49 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:07:49 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:07:49.452353+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin958979626","network":"unix"}
2020-07-10T21:07:49.465+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:07:49.464+0100
2020/07/10 21:07:49 [INFO] Terraform version: 0.12.23  
2020/07/10 21:07:49 [INFO] Go runtime version: go1.12.13
2020/07/10 21:07:49 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:07:49 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:07:49 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:07:49.493013+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin595171553","network":"unix"}
2020-07-10T21:07:49.495+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:07:49.559+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:07:49.559+0100
2020/07/10 21:17:11 [INFO] Terraform version: 0.12.23  
2020/07/10 21:17:11 [INFO] Go runtime version: go1.12.13
2020/07/10 21:17:11 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 21:17:11 [INFO] CLI command args: []string{"apply"}
2020/07/10 21:17:11 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 21:18:04 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:04 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:04 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 21:18:04 [INFO] CLI command args: []string{"apply"}
2020/07/10 21:18:04 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 21:18:04 [INFO] backend/local: starting Apply operation
2020-07-10T21:18:05.345+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:05.406+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:05.406+0100
2020-07-10T21:18:05.549+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:05.579+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:05.579+0100
2020/07/10 21:18:05 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:05 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:05 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:18:05 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:18:05 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:05.683634+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin612084773","network":"unix"}
2020/07/10 21:18:05 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:05 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:05 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:18:05 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:18:05 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:05.718099+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin945927935","network":"unix"}
2020/07/10 21:18:05 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T21:18:05.737+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:18:05 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:05 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:05 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:18:05 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:18:05 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:05.765378+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin745680745","network":"unix"}
2020-07-10T21:18:05.770+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:05.770+0100
2020/07/10 21:18:05 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:05 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:05 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:18:05 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:18:05 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:05.795714+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin513155304","network":"unix"}
2020-07-10T21:18:05.798+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:05.861+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:05.861+0100
2020/07/10 21:18:06 [INFO] backend/local: apply calling Refresh
2020/07/10 21:18:06 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T21:18:06.057+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:06.087+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:06.087+0100
2020-07-10T21:18:06.111+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:06.168+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:06.168+0100
2020/07/10 21:18:11 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:18:11 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:18:11 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:18:11 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:18:14 [INFO] backend/local: apply calling Plan
2020/07/10 21:18:14 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T21:18:14.067+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:18:14 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:14 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:14 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:18:14 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:18:14 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:14.102816+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin893652611","network":"unix"}
2020-07-10T21:18:14.112+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:14.112+0100
2020/07/10 21:18:14 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:14 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:14 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:18:14 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:18:14 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:14.136902+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin637481738","network":"unix"}
2020-07-10T21:18:14.139+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:14.199+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:14.199+0100
2020/07/10 21:18:17 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})})
2020/07/10 21:18:17 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
 "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
2020/07/10 21:18:17 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 21:18:17 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
2020/07/10 21:18:17 [INFO] backend/local: apply calling Apply
2020/07/10 21:18:17 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T21:18:17.135+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:18:17 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:17 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:17 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:18:17 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:18:17 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:17.166867+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin082464518","network":"unix"}
2020-07-10T21:18:17.176+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:17.176+0100
2020/07/10 21:18:17 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:17 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:17 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:18:17 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:18:17 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:17.199855+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin628342557","network":"unix"}
2020-07-10T21:18:17.203+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:17.266+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:17.266+0100
2020/07/10 21:18:27 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:27 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:27 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "destroy"}
2020/07/10 21:18:27 [INFO] CLI command args: []string{"destroy"}
2020/07/10 21:18:27 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 21:18:27 [INFO] backend/local: starting Apply operation
2020-07-10T21:18:28.248+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:28.302+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:28.302+0100
2020-07-10T21:18:28.429+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:28.459+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:28.459+0100
2020/07/10 21:18:28 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:28 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:28 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:18:28 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:18:28 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:28.556644+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin036286594","network":"unix"}
2020/07/10 21:18:28 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:28 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:28 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:18:28 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:18:28 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:28.589630+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin569984244","network":"unix"}
2020/07/10 21:18:28 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T21:18:28.602+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:18:28 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:28 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:28 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:18:28 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:18:28 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:28.631865+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin578912062","network":"unix"}
2020-07-10T21:18:28.641+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:28.640+0100
2020/07/10 21:18:28 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:28 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:28 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:18:28 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:18:28 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:28.663637+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin112449429","network":"unix"}
2020-07-10T21:18:28.668+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:28.728+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:28.728+0100
2020/07/10 21:18:28 [INFO] backend/local: apply calling Refresh
2020/07/10 21:18:28 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T21:18:28.924+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:28.953+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:28.953+0100
2020-07-10T21:18:28.977+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:29.034+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:29.034+0100
2020/07/10 21:18:33 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:18:33 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:18:33 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:18:33 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:18:35 [INFO] backend/local: apply calling Plan
2020/07/10 21:18:35 [INFO] terraform: building graph: GraphTypePlanDestroy
2020-07-10T21:18:35.543+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:35.612+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:35.612+0100
2020-07-10T21:18:35.638+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:35.670+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:35.670+0100
2020/07/10 21:18:38 [INFO] backend/local: apply calling Apply
2020/07/10 21:18:38 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node aws_iam_instance_profile.main (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node data.aws_ami.ubuntu (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node aws_instance.main (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-registry-ingress (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node data.template_cloudinit_config.init (prepare state)
2020/07/10 21:18:38 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020-07-10T21:18:38.209+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:18:38 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:38 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:38 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:18:38 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:18:38 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:38.249864+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin304449469","network":"unix"}
2020-07-10T21:18:38.258+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:38.258+0100
2020/07/10 21:18:38 [INFO] Terraform version: 0.12.23  
2020/07/10 21:18:38 [INFO] Go runtime version: go1.12.13
2020/07/10 21:18:38 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:18:38 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:18:38 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:18:38.283717+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin013323908","network":"unix"}
2020-07-10T21:18:38.286+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:18:38.341+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:18:38.341+0100
2020/07/10 21:18:42 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: error deleting S3 Bucket (pipeline-docker-registry-bucket): OperationAborted: A conflicting conditional operation is currently in progress against this resource. Please try again.
	status code: 409, request id: 75F08F867EE0C2BE, host id: A1erXjunqD9CCGuMAmW2AgLjdJ1wpYn69ckAYkgTi+82Fc3WdU8bLVT/iRObwh312pH2dsWDkCg=
2020/07/10 21:18:42 [ERROR] <root>: eval: *terraform.EvalSequence, err: error deleting S3 Bucket (pipeline-docker-registry-bucket): OperationAborted: A conflicting conditional operation is currently in progress against this resource. Please try again.
	status code: 409, request id: 75F08F867EE0C2BE, host id: A1erXjunqD9CCGuMAmW2AgLjdJ1wpYn69ckAYkgTi+82Fc3WdU8bLVT/iRObwh312pH2dsWDkCg=
2020/07/10 21:18:42 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: error deleting S3 Bucket (pipeline-docker-registry-bucket): OperationAborted: A conflicting conditional operation is currently in progress against this resource. Please try again.
	status code: 409, request id: 75F08F867EE0C2BE, host id: A1erXjunqD9CCGuMAmW2AgLjdJ1wpYn69ckAYkgTi+82Fc3WdU8bLVT/iRObwh312pH2dsWDkCg=
2020/07/10 21:19:44 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 8e8e90cf-ea40-43aa-88e4-0d67f70f757a
2020/07/10 21:19:44 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 8e8e90cf-ea40-43aa-88e4-0d67f70f757a
2020/07/10 21:19:44 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 8e8e90cf-ea40-43aa-88e4-0d67f70f757a
2020/07/10 21:19:58 [INFO] Terraform version: 0.12.23  
2020/07/10 21:19:58 [INFO] Go runtime version: go1.12.13
2020/07/10 21:19:58 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 21:19:58 [INFO] CLI command args: []string{"apply"}
2020/07/10 21:19:58 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 21:19:58 [INFO] backend/local: starting Apply operation
2020-07-10T21:19:58.856+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:19:58.910+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:19:58.910+0100
2020-07-10T21:19:59.040+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:19:59.070+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:19:59.069+0100
2020/07/10 21:19:59 [INFO] Terraform version: 0.12.23  
2020/07/10 21:19:59 [INFO] Go runtime version: go1.12.13
2020/07/10 21:19:59 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:19:59 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:19:59 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:19:59.174276+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin245089117","network":"unix"}
2020/07/10 21:19:59 [INFO] Terraform version: 0.12.23  
2020/07/10 21:19:59 [INFO] Go runtime version: go1.12.13
2020/07/10 21:19:59 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:19:59 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:19:59 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:19:59.206107+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin657572007","network":"unix"}
2020/07/10 21:19:59 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T21:19:59.218+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:19:59 [INFO] Terraform version: 0.12.23  
2020/07/10 21:19:59 [INFO] Go runtime version: go1.12.13
2020/07/10 21:19:59 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:19:59 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:19:59 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:19:59.245393+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin828501857","network":"unix"}
2020/07/10 21:19:59 [INFO] Terraform version: 0.12.23  
2020/07/10 21:19:59 [INFO] Go runtime version: go1.12.13
2020/07/10 21:19:59 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:19:59 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:19:59 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:19:59.275930+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin840591152","network":"unix"}
2020-07-10T21:19:59.283+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:19:59.283+0100
2020-07-10T21:19:59.309+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:19:59.345+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:19:59.345+0100
2020/07/10 21:19:59 [INFO] backend/local: apply calling Refresh
2020/07/10 21:19:59 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T21:19:59.498+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:19:59.528+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:19:59.527+0100
2020-07-10T21:19:59.551+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:19:59.610+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:19:59.610+0100
2020/07/10 21:20:03 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 21:20:04 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 21:20:04 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 21:20:04 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
ty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 21:20:04 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:20:04 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:20:04 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:20:04 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:20:04 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
X3Xq7GGwcSs9wQffKMxdu3B0r1zS10vGGxX+z2RxcFIRLOBDJ1DvSyKA1ZE9kBh2zqp3aAM7dWJrWlZ9wb3qyi4Xh52BuL+MgquO/F4pXdHFo+fEhiYadR9TmBwtd8FrIRzLwuDbUb2c3bA6xWehx60B0kUXNc7LNL7ZTwxo6c9vra1CeeefKQDet81GR5PsrA3rWcGOn6qZ/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
nting nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:20:06 [INFO] backend/local: apply calling Plan
2020/07/10 21:20:06 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T21:20:06.286+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:20:06 [INFO] Terraform version: 0.12.23  
2020/07/10 21:20:06 [INFO] Go runtime version: go1.12.13
2020/07/10 21:20:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:20:06 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:20:06 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:20:06.321785+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin093527614","network":"unix"}
2020-07-10T21:20:06.333+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:20:06.333+0100
2020/07/10 21:20:06 [INFO] Terraform version: 0.12.23  
2020/07/10 21:20:06 [INFO] Go runtime version: go1.12.13
2020/07/10 21:20:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:20:06 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:20:06 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:20:06.358364+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin208229925","network":"unix"}
2020-07-10T21:20:06.362+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:20:06.425+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:20:06.425+0100
2020/07/10 21:20:09 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 21:20:09 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
2020/07/10 21:20:09 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
2020/07/10 21:20:09 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 21:20:09 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 21:20:09 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
X3Xq7GGwcSs9wQffKMxdu3B0r1zS10vGGxX+z2RxcFIRLOBDJ1DvSyKA1ZE9kBh2zqp3aAM7dWJrWlZ9wb3qyi4Xh52BuL+MgquO/F4pXdHFo+fEhiYadR9TmBwtd8FrIRzLwuDbUb2c3bA6xWehx60B0kUXNc7LNL7ZTwxo6c9vra1CeeefKQDet81GR5PsrA3rWcGOn6qZ/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
ting nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:20:13 [INFO] backend/local: apply calling Apply
2020/07/10 21:20:13 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T21:20:13.319+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:20:13 [INFO] Terraform version: 0.12.23  
2020/07/10 21:20:13 [INFO] Go runtime version: go1.12.13
2020/07/10 21:20:13 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:20:13 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:20:13 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:20:13.355726+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin771480761","network":"unix"}
2020-07-10T21:20:13.368+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:20:13.368+0100
2020/07/10 21:20:13 [INFO] Terraform version: 0.12.23  
2020/07/10 21:20:13 [INFO] Go runtime version: go1.12.13
2020/07/10 21:20:13 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:20:13 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:20:13 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:20:13.392483+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin964864344","network":"unix"}
2020-07-10T21:20:13.397+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:20:13.461+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:20:13.461+0100
2020/07/10 21:20:16 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 21:20:16 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 21:20:16 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 21:20:16 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
.NumberIntVal(80)})})
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 21:20:24 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
srA3rWcGOn6qZ/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
sted attribute values to unknown instead
7GGwcSs9wQffKMxdu3B0r1zS10vGGxX+z2RxcFIRLOBDJ1DvSyKA1ZE9kBh2zqp3aAM7dWJrWlZ9wb3qyi4Xh52BuL+MgquO/F4pXdHFo+fEhiYadR9TmBwtd8FrIRzLwuDbUb2c3bA6xWehx60B0kUXNc7LNL7ZTwxo6c9vra1CeeefKQDet81GR5PsrA3rWcGOn6qZ/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA="
2020/07/10 21:20:51 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .disable_api_termination: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
file-provisioner (internal) 2020/07/10 21:20:51 using private key for authentication
file-provisioner (internal) 2020/07/10 21:20:51 [DEBUG] Connecting to ec2-35-177-254-48.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 21:21:02 [ERROR] connection error: dial tcp 35.177.254.48:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:21:02 [WARN] retryable error: dial tcp 35.177.254.48:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:21:02 [INFO] sleeping for 1s
file-provisioner (internal) 2020/07/10 21:21:03 [DEBUG] Connecting to ec2-35-177-254-48.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 21:21:03 [DEBUG] Connection established. Handshaking for user ubuntu
file-provisioner (internal) 2020/07/10 21:21:03 [DEBUG] Telling SSH config to forward to agent
file-provisioner (internal) 2020/07/10 21:21:03 [DEBUG] Setting up a session to request agent forwarding
file-provisioner (internal) 2020/07/10 21:21:05 [INFO] agent forwarding enabled
file-provisioner (internal) 2020/07/10 21:21:05 [DEBUG] starting ssh KeepAlives
file-provisioner (internal) 2020/07/10 21:21:05 [DEBUG] opening new ssh session
file-provisioner (internal) 2020/07/10 21:21:05 [DEBUG] Starting remote scp process:  scp -vt /tmp
file-provisioner (internal) 2020/07/10 21:21:05 [DEBUG] Started SCP session, beginning transfers...
file-provisioner (internal) 2020/07/10 21:21:05 [DEBUG] Copying input data into temporary file so we can read the length
file-provisioner (internal) 2020/07/10 21:21:05 [DEBUG] Beginning file upload...
file-provisioner (internal) 2020/07/10 21:21:05 [DEBUG] SCP session complete, closing stdin pipe.
file-provisioner (internal) 2020/07/10 21:21:05 [DEBUG] Waiting for SSH session to complete.
file-provisioner (internal) 2020/07/10 21:21:05 [ERROR] scp stderr: "Sink: C0644 3710 nginx_sblock.sh\n"
remote-exec-provisioner (internal) 2020/07/10 21:21:05 using private key for authentication
remote-exec-provisioner (internal) 2020/07/10 21:21:05 [DEBUG] Connecting to ec2-35-177-254-48.eu-west-2.compute.amazonaws.com:22 for SSH
remote-exec-provisioner (internal) 2020/07/10 21:21:05 [DEBUG] Connection established. Handshaking for user ubuntu
remote-exec-provisioner (internal) 2020/07/10 21:21:05 [DEBUG] Telling SSH config to forward to agent
remote-exec-provisioner (internal) 2020/07/10 21:21:05 [DEBUG] Setting up a session to request agent forwarding
remote-exec-provisioner (internal) 2020/07/10 21:21:07 [INFO] agent forwarding enabled
remote-exec-provisioner (internal) 2020/07/10 21:21:07 [DEBUG] starting ssh KeepAlives
remote-exec-provisioner (internal) 2020/07/10 21:21:07 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 21:21:07 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 21:21:07 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 21:21:07 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 21:21:07 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 21:21:07 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 21:21:07 [ERROR] scp stderr: "Sink: C0644 72 terraform_22697318.sh\n"
remote-exec-provisioner (internal) 2020/07/10 21:21:07 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 21:21:07 [DEBUG] starting remote command: chmod 0777 /tmp/terraform_22697318.sh
remote-exec-provisioner (internal) 2020/07/10 21:21:08 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 21:21:08 [DEBUG] remote command exited with '0': chmod 0777 /tmp/terraform_22697318.sh
remote-exec-provisioner (internal) 2020/07/10 21:21:08 [DEBUG] starting remote command: /tmp/terraform_22697318.sh
remote-exec-provisioner (internal) 2020/07/10 21:21:08 [DEBUG] remote command exited with '0': /tmp/terraform_22697318.sh
remote-exec-provisioner (internal) 2020/07/10 21:21:08 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 21:21:08 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 21:21:08 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 21:21:08 [DEBUG] Copying input data into temporary file so we can read the length
remote-exec-provisioner (internal) 2020/07/10 21:21:08 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 21:21:08 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 21:21:08 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 21:21:08 [ERROR] scp stderr: "Sink: C0644 0 terraform_22697318.sh\n"
2020/07/10 21:22:20 [INFO] Terraform version: 0.12.23  
2020/07/10 21:22:20 [INFO] Go runtime version: go1.12.13
2020/07/10 21:22:20 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 21:22:20 [INFO] CLI command args: []string{"apply"}
2020/07/10 21:22:20 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 21:22:20 [INFO] backend/local: starting Apply operation
2020-07-10T21:22:21.480+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:22:21.534+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:22:21.533+0100
2020-07-10T21:22:21.661+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:22:21.691+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:22:21.690+0100
2020/07/10 21:22:21 [INFO] Terraform version: 0.12.23  
2020/07/10 21:22:21 [INFO] Go runtime version: go1.12.13
2020/07/10 21:22:21 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:22:21 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:22:21 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:22:21.788054+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin079559430","network":"unix"}
2020/07/10 21:22:21 [INFO] Terraform version: 0.12.23  
2020/07/10 21:22:21 [INFO] Go runtime version: go1.12.13
2020/07/10 21:22:21 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:22:21 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:22:21 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:22:21.821007+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin277782080","network":"unix"}
2020/07/10 21:22:21 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T21:22:21.834+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:22:21 [INFO] Terraform version: 0.12.23  
2020/07/10 21:22:21 [INFO] Go runtime version: go1.12.13
2020/07/10 21:22:21 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:22:21 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:22:21 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:22:21.862557+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin677218490","network":"unix"}
2020-07-10T21:22:21.871+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:22:21.870+0100
2020/07/10 21:22:21 [INFO] Terraform version: 0.12.23  
2020/07/10 21:22:21 [INFO] Go runtime version: go1.12.13
2020/07/10 21:22:21 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:22:21 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:22:21 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:22:21.894117+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin811595505","network":"unix"}
2020-07-10T21:22:21.897+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:22:21.960+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:22:21.959+0100
2020/07/10 21:22:22 [INFO] backend/local: apply calling Refresh
2020/07/10 21:22:22 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T21:22:22.153+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:22:22.183+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:22:22.183+0100
2020-07-10T21:22:22.208+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:22:22.267+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:22:22.267+0100
2020/07/10 21:22:28 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:22:28 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:22:28 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:22:28 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:22:32 [INFO] backend/local: apply calling Plan
2020/07/10 21:22:32 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T21:22:32.091+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:22:32 [INFO] Terraform version: 0.12.23  
2020/07/10 21:22:32 [INFO] Go runtime version: go1.12.13
2020/07/10 21:22:32 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:22:32 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:22:32 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:22:32.123400+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin515488131","network":"unix"}
2020-07-10T21:22:32.134+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:22:32.134+0100
2020/07/10 21:22:32 [INFO] Terraform version: 0.12.23  
2020/07/10 21:22:32 [INFO] Go runtime version: go1.12.13
2020/07/10 21:22:32 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:22:32 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:22:32 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:22:32.158827+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin746682626","network":"unix"}
2020-07-10T21:22:32.162+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:22:32.225+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:22:32.224+0100
2020/07/10 21:22:34 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})})
2020/07/10 21:22:34 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 21:22:34 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 21:22:34 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
2020/07/10 21:22:34 [INFO] backend/local: apply calling Apply
2020/07/10 21:22:34 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T21:22:34.954+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:22:34 [INFO] Terraform version: 0.12.23  
2020/07/10 21:22:34 [INFO] Go runtime version: go1.12.13
2020/07/10 21:22:34 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:22:34 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:22:34 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:22:34.984455+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin179703398","network":"unix"}
2020-07-10T21:22:34.994+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:22:34.994+0100
2020/07/10 21:22:35 [INFO] Terraform version: 0.12.23  
2020/07/10 21:22:35 [INFO] Go runtime version: go1.12.13
2020/07/10 21:22:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:22:35 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:22:35 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:22:35.015087+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin002091413","network":"unix"}
2020-07-10T21:22:35.020+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:22:35.082+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:22:35.082+0100
2020/07/10 21:36:35 [INFO] Terraform version: 0.12.23  
2020/07/10 21:36:35 [INFO] Go runtime version: go1.12.13
2020/07/10 21:36:35 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "destroy"}
2020/07/10 21:36:35 [INFO] CLI command args: []string{"destroy"}
2020/07/10 21:36:35 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 21:36:35 [INFO] backend/local: starting Apply operation
2020-07-10T21:36:35.980+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:36:36.042+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:36:36.042+0100
2020-07-10T21:36:36.185+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:36:36.218+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:36:36.218+0100
2020/07/10 21:36:36 [INFO] Terraform version: 0.12.23  
2020/07/10 21:36:36 [INFO] Go runtime version: go1.12.13
2020/07/10 21:36:36 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:36:36 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:36:36 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:36:36.320734+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin111467695","network":"unix"}
2020/07/10 21:36:36 [INFO] Terraform version: 0.12.23  
2020/07/10 21:36:36 [INFO] Go runtime version: go1.12.13
2020/07/10 21:36:36 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:36:36 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:36:36 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:36:36.356402+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin127729545","network":"unix"}
2020/07/10 21:36:36 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T21:36:36.376+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:36:36 [INFO] Terraform version: 0.12.23  
2020/07/10 21:36:36 [INFO] Go runtime version: go1.12.13
2020/07/10 21:36:36 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:36:36 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:36:36 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:36:36.404771+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin222329515","network":"unix"}
2020-07-10T21:36:36.413+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:36:36.413+0100
2020/07/10 21:36:36 [INFO] Terraform version: 0.12.23  
2020/07/10 21:36:36 [INFO] Go runtime version: go1.12.13
2020/07/10 21:36:36 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:36:36 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:36:36 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:36:36.436146+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin605130314","network":"unix"}
2020-07-10T21:36:36.439+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:36:36.506+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:36:36.505+0100
2020/07/10 21:36:36 [INFO] backend/local: apply calling Refresh
2020/07/10 21:36:36 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T21:36:36.696+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:36:36.726+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:36:36.726+0100
2020-07-10T21:36:36.750+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:36:36.809+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:36:36.809+0100
2020/07/10 21:36:42 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:36:42 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:36:42 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:36:42 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:36:44 [INFO] backend/local: apply calling Plan
2020/07/10 21:36:44 [INFO] terraform: building graph: GraphTypePlanDestroy
2020-07-10T21:36:44.194+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:36:44.263+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:36:44.263+0100
2020-07-10T21:36:44.290+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:36:44.324+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:36:44.323+0100
2020/07/10 21:36:47 [INFO] backend/local: apply calling Apply
2020/07/10 21:36:47 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node data.template_cloudinit_config.init (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node aws_iam_instance_profile.main (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node data.aws_ami.ubuntu (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-registry-ingress (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node aws_instance.main (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 21:36:47 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020-07-10T21:36:47.436+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:36:47 [INFO] Terraform version: 0.12.23  
2020/07/10 21:36:47 [INFO] Go runtime version: go1.12.13
2020/07/10 21:36:47 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:36:47 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:36:47 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:36:47.471100+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin748445234","network":"unix"}
2020-07-10T21:36:47.501+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:36:47.501+0100
2020/07/10 21:36:47 [INFO] Terraform version: 0.12.23  
2020/07/10 21:36:47 [INFO] Go runtime version: go1.12.13
2020/07/10 21:36:47 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:36:47 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:36:47 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:36:47.506989+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin045069049","network":"unix"}
2020-07-10T21:36:47.528+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:36:47.562+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:36:47.562+0100
2020/07/10 21:37:52 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 0642296c-22f6-45a2-922e-e69911530811
2020/07/10 21:37:52 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 0642296c-22f6-45a2-922e-e69911530811
2020/07/10 21:37:52 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 0642296c-22f6-45a2-922e-e69911530811
2020/07/10 21:38:06 [INFO] Terraform version: 0.12.23  
2020/07/10 21:38:06 [INFO] Go runtime version: go1.12.13
2020/07/10 21:38:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 21:38:06 [INFO] CLI command args: []string{"apply"}
2020/07/10 21:38:06 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 21:38:06 [INFO] backend/local: starting Apply operation
2020-07-10T21:38:06.532+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:38:06.587+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:38:06.586+0100
2020-07-10T21:38:06.711+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:38:06.740+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:38:06.740+0100
2020/07/10 21:38:06 [INFO] Terraform version: 0.12.23  
2020/07/10 21:38:06 [INFO] Go runtime version: go1.12.13
2020/07/10 21:38:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:38:06 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:38:06 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:38:06.839626+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin701195568","network":"unix"}
2020/07/10 21:38:06 [INFO] Terraform version: 0.12.23  
2020/07/10 21:38:06 [INFO] Go runtime version: go1.12.13
2020/07/10 21:38:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:38:06 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:38:06 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:38:06.873257+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin139351922","network":"unix"}
2020/07/10 21:38:06 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T21:38:06.886+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:38:06 [INFO] Terraform version: 0.12.23  
2020/07/10 21:38:06 [INFO] Go runtime version: go1.12.13
2020/07/10 21:38:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:38:06 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:38:06 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:38:06.914822+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin846806604","network":"unix"}
2020-07-10T21:38:06.922+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:38:06.922+0100
2020/07/10 21:38:06 [INFO] Terraform version: 0.12.23  
2020/07/10 21:38:06 [INFO] Go runtime version: go1.12.13
2020/07/10 21:38:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:38:06 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:38:06 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:38:06.945530+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin543178691","network":"unix"}
2020-07-10T21:38:06.948+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:38:07.011+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:38:07.010+0100
2020/07/10 21:38:07 [INFO] backend/local: apply calling Refresh
2020/07/10 21:38:07 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T21:38:07.208+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:38:07.240+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:38:07.239+0100
2020-07-10T21:38:07.264+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:38:07.322+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:38:07.322+0100
2020/07/10 21:38:10 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 21:38:10 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:38:11 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 21:38:11 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 21:38:11 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
ty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 21:38:11 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:38:11 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:38:11 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:38:11 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:38:11 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
CzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
nting nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:38:11 [INFO] backend/local: apply calling Plan
2020/07/10 21:38:11 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T21:38:11.776+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:38:11 [INFO] Terraform version: 0.12.23  
2020/07/10 21:38:11 [INFO] Go runtime version: go1.12.13
2020/07/10 21:38:11 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:38:11 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:38:11 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:38:11.806727+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin987494625","network":"unix"}
2020-07-10T21:38:11.817+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:38:11.817+0100
2020/07/10 21:38:11 [INFO] Terraform version: 0.12.23  
2020/07/10 21:38:11 [INFO] Go runtime version: go1.12.13
2020/07/10 21:38:11 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:38:11 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:38:11 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:38:11.840704+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin145681000","network":"unix"}
2020-07-10T21:38:11.845+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:38:11.906+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:38:11.906+0100
2020/07/10 21:38:14 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 21:38:14 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
2020/07/10 21:38:14 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:38:14 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
y.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 21:38:14 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 21:38:14 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
X3Xq7GGwcSs9wQffKMxdu3B0r1zS10vGGxX+z2RxcFIRLOBDJ1DvSyKA1ZE9kBh2zqp3aAM7dWJrWlZ9wb3qyi4Xh52BuL+MgquO/F4pXdHFo+fEhiYadR9TmBwtd8FrIRzLwuDbUb2c3bA6xWehx60B0kUXNc7LNL7ZTwxo6c9vra1CeeefKQDet81GR5PsrA3rWcGOn6qZ/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
nting nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:38:18 [INFO] backend/local: apply calling Apply
2020/07/10 21:38:18 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T21:38:18.240+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:38:18 [INFO] Terraform version: 0.12.23  
2020/07/10 21:38:18 [INFO] Go runtime version: go1.12.13
2020/07/10 21:38:18 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:38:18 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:38:18 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:38:18.274918+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin055945012","network":"unix"}
2020-07-10T21:38:18.286+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:38:18.286+0100
2020/07/10 21:38:18 [INFO] Terraform version: 0.12.23  
2020/07/10 21:38:18 [INFO] Go runtime version: go1.12.13
2020/07/10 21:38:18 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:38:18 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:38:18 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:38:18.311269+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin116605851","network":"unix"}
2020-07-10T21:38:18.316+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:38:18.378+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:38:18.378+0100
2020/07/10 21:38:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 21:38:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
B94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 21:38:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
2020/07/10 21:38:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
e, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 21:38:21 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:38:21 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error putting S3 policy: NoSuchBucket: The specified bucket does not exist
	status code: 404, request id: 0E230455C5BBCB03, host id: uBHGvqbhqcrFS+INWvpT2B9ix8SVyJ+tDkeDFEVe849axXTK4Q+Lngr+l9yk8QbUnMJsS15JyKA=
2020/07/10 21:38:21 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error putting S3 policy: NoSuchBucket: The specified bucket does not exist
	status code: 404, request id: 0E230455C5BBCB03, host id: uBHGvqbhqcrFS+INWvpT2B9ix8SVyJ+tDkeDFEVe849axXTK4Q+Lngr+l9yk8QbUnMJsS15JyKA=
2020/07/10 21:38:23 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
zmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
sted attribute values to unknown instead
2020/07/10 21:38:56 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .disable_api_termination: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
file-provisioner (internal) 2020/07/10 21:38:56 using private key for authentication
file-provisioner (internal) 2020/07/10 21:38:56 [DEBUG] Connecting to ec2-18-130-226-90.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 21:38:59 [ERROR] connection error: dial tcp 18.130.226.90:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:38:59 [WARN] retryable error: dial tcp 18.130.226.90:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:38:59 [INFO] sleeping for 1s
file-provisioner (internal) 2020/07/10 21:39:00 [DEBUG] Connecting to ec2-18-130-226-90.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 21:39:01 [ERROR] connection error: dial tcp 18.130.226.90:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:39:01 [WARN] retryable error: dial tcp 18.130.226.90:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:39:01 [INFO] sleeping for 2s
file-provisioner (internal) 2020/07/10 21:39:03 [DEBUG] Connecting to ec2-18-130-226-90.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 21:39:03 [ERROR] connection error: dial tcp 18.130.226.90:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:39:03 [WARN] retryable error: dial tcp 18.130.226.90:22: connect: connection refused
file-provisioner (internal) 2020/07/10 21:39:03 [INFO] sleeping for 4s
file-provisioner (internal) 2020/07/10 21:39:07 [DEBUG] Connecting to ec2-18-130-226-90.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 21:39:07 [DEBUG] Connection established. Handshaking for user ubuntu
file-provisioner (internal) 2020/07/10 21:39:07 [DEBUG] Telling SSH config to forward to agent
file-provisioner (internal) 2020/07/10 21:39:07 [DEBUG] Setting up a session to request agent forwarding
file-provisioner (internal) 2020/07/10 21:39:09 [INFO] agent forwarding enabled
file-provisioner (internal) 2020/07/10 21:39:09 [DEBUG] starting ssh KeepAlives
file-provisioner (internal) 2020/07/10 21:39:09 [DEBUG] opening new ssh session
file-provisioner (internal) 2020/07/10 21:39:09 [DEBUG] Starting remote scp process:  scp -vt /tmp
file-provisioner (internal) 2020/07/10 21:39:09 [DEBUG] Started SCP session, beginning transfers...
file-provisioner (internal) 2020/07/10 21:39:09 [DEBUG] Copying input data into temporary file so we can read the length
file-provisioner (internal) 2020/07/10 21:39:09 [DEBUG] Beginning file upload...
file-provisioner (internal) 2020/07/10 21:39:09 [DEBUG] SCP session complete, closing stdin pipe.
file-provisioner (internal) 2020/07/10 21:39:09 [DEBUG] Waiting for SSH session to complete.
file-provisioner (internal) 2020/07/10 21:39:09 [ERROR] scp stderr: "Sink: C0644 1848 nginx_sblock.sh\n"
remote-exec-provisioner (internal) 2020/07/10 21:39:09 using private key for authentication
remote-exec-provisioner (internal) 2020/07/10 21:39:09 [DEBUG] Connecting to ec2-18-130-226-90.eu-west-2.compute.amazonaws.com:22 for SSH
remote-exec-provisioner (internal) 2020/07/10 21:39:09 [DEBUG] Connection established. Handshaking for user ubuntu
remote-exec-provisioner (internal) 2020/07/10 21:39:10 [DEBUG] Telling SSH config to forward to agent
remote-exec-provisioner (internal) 2020/07/10 21:39:10 [DEBUG] Setting up a session to request agent forwarding
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [INFO] agent forwarding enabled
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] starting ssh KeepAlives
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [ERROR] scp stderr: "Sink: C0644 72 terraform_1464708038.sh\n"
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] starting remote command: chmod 0777 /tmp/terraform_1464708038.sh
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] remote command exited with '0': chmod 0777 /tmp/terraform_1464708038.sh
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] starting remote command: /tmp/terraform_1464708038.sh
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] remote command exited with '0': /tmp/terraform_1464708038.sh
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] Copying input data into temporary file so we can read the length
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 21:39:11 [ERROR] scp stderr: "Sink: C0644 0 terraform_1464708038.sh\n"
2020/07/10 21:39:20 [INFO] Terraform version: 0.12.23  
2020/07/10 21:39:20 [INFO] Go runtime version: go1.12.13
2020/07/10 21:39:20 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 21:39:20 [INFO] CLI command args: []string{"apply"}
2020/07/10 21:39:20 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 21:39:20 [INFO] backend/local: starting Apply operation
2020-07-10T21:39:21.476+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:39:21.529+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:39:21.529+0100
2020-07-10T21:39:21.654+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:39:21.682+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:39:21.682+0100
2020/07/10 21:39:21 [INFO] Terraform version: 0.12.23  
2020/07/10 21:39:21 [INFO] Go runtime version: go1.12.13
2020/07/10 21:39:21 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:39:21 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:39:21 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:39:21.781135+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin393904615","network":"unix"}
2020/07/10 21:39:21 [INFO] Terraform version: 0.12.23  
2020/07/10 21:39:21 [INFO] Go runtime version: go1.12.13
2020/07/10 21:39:21 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:39:21 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:39:21 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:39:21.814150+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin834797057","network":"unix"}
2020/07/10 21:39:21 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T21:39:21.825+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:39:21 [INFO] Terraform version: 0.12.23  
2020/07/10 21:39:21 [INFO] Go runtime version: go1.12.13
2020/07/10 21:39:21 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:39:21 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:39:21 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:39:21.855262+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin290139043","network":"unix"}
2020-07-10T21:39:21.863+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:39:21.863+0100
2020/07/10 21:39:21 [INFO] Terraform version: 0.12.23  
2020/07/10 21:39:21 [INFO] Go runtime version: go1.12.13
2020/07/10 21:39:21 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:39:21 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:39:21 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:39:21.886776+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin759991058","network":"unix"}
2020-07-10T21:39:21.890+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:39:21.965+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:39:21.965+0100
2020/07/10 21:39:22 [INFO] backend/local: apply calling Refresh
2020/07/10 21:39:22 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T21:39:22.156+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:39:22.186+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:39:22.186+0100
2020-07-10T21:39:22.210+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:39:22.268+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:39:22.268+0100
2020/07/10 21:39:26 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:39:26 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:39:26 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:39:26 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:39:28 [INFO] backend/local: apply calling Plan
2020/07/10 21:39:28 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T21:39:28.760+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:39:28 [INFO] Terraform version: 0.12.23  
2020/07/10 21:39:28 [INFO] Go runtime version: go1.12.13
2020/07/10 21:39:28 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:39:28 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:39:28 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:39:28.794807+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin165025181","network":"unix"}
2020-07-10T21:39:28.805+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:39:28.805+0100
2020/07/10 21:39:28 [INFO] Terraform version: 0.12.23  
2020/07/10 21:39:28 [INFO] Go runtime version: go1.12.13
2020/07/10 21:39:28 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:39:28 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:39:28 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:39:28.827374+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin334437724","network":"unix"}
2020-07-10T21:39:28.832+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:39:28.890+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:39:28.890+0100
2020/07/10 21:39:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})})
2020/07/10 21:39:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 21:39:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 21:39:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
2020/07/10 21:39:33 [INFO] backend/local: apply calling Apply
2020/07/10 21:39:33 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T21:39:33.943+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:39:33 [INFO] Terraform version: 0.12.23  
2020/07/10 21:39:33 [INFO] Go runtime version: go1.12.13
2020/07/10 21:39:33 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:39:33 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:39:33 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:39:33.977398+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin766446392","network":"unix"}
2020-07-10T21:39:33.989+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:39:33.989+0100
2020/07/10 21:39:34 [INFO] Terraform version: 0.12.23  
2020/07/10 21:39:34 [INFO] Go runtime version: go1.12.13
2020/07/10 21:39:34 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:39:34 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:39:34 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:39:34.013282+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin097152911","network":"unix"}
2020-07-10T21:39:34.018+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:39:34.079+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:39:34.079+0100
2020/07/10 21:57:59 [INFO] Terraform version: 0.12.23  
2020/07/10 21:57:59 [INFO] Go runtime version: go1.12.13
2020/07/10 21:57:59 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "destroy"}
2020/07/10 21:57:59 [INFO] CLI command args: []string{"destroy"}
2020/07/10 21:57:59 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 21:57:59 [INFO] backend/local: starting Apply operation
2020-07-10T21:58:00.296+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:58:00.353+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:58:00.352+0100
2020-07-10T21:58:00.479+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:58:00.512+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:58:00.512+0100
2020/07/10 21:58:00 [INFO] Terraform version: 0.12.23  
2020/07/10 21:58:00 [INFO] Go runtime version: go1.12.13
2020/07/10 21:58:00 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:58:00 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:58:00 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:58:00.613444+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin542265527","network":"unix"}
2020/07/10 21:58:00 [INFO] Terraform version: 0.12.23  
2020/07/10 21:58:00 [INFO] Go runtime version: go1.12.13
2020/07/10 21:58:00 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:58:00 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:58:00 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:58:00.647072+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin625860097","network":"unix"}
2020/07/10 21:58:00 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T21:58:00.658+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:58:00 [INFO] Terraform version: 0.12.23  
2020/07/10 21:58:00 [INFO] Go runtime version: go1.12.13
2020/07/10 21:58:00 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:58:00 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:58:00 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:58:00.688950+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin536147875","network":"unix"}
2020-07-10T21:58:00.697+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:58:00.697+0100
2020/07/10 21:58:00 [INFO] Terraform version: 0.12.23  
2020/07/10 21:58:00 [INFO] Go runtime version: go1.12.13
2020/07/10 21:58:00 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:58:00 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:58:00 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:58:00.722764+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin718974050","network":"unix"}
2020-07-10T21:58:00.724+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:58:00.795+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:58:00.794+0100
2020/07/10 21:58:00 [INFO] backend/local: apply calling Refresh
2020/07/10 21:58:00 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T21:58:00.987+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:58:01.042+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:58:01.042+0100
2020-07-10T21:58:01.069+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:58:01.105+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:58:01.105+0100
2020/07/10 21:58:05 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:58:05 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:58:05 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:58:05 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:58:08 [INFO] backend/local: apply calling Plan
2020/07/10 21:58:08 [INFO] terraform: building graph: GraphTypePlanDestroy
2020-07-10T21:58:08.075+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:58:08.143+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:58:08.143+0100
2020-07-10T21:58:08.170+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:58:08.204+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:58:08.204+0100
2020/07/10 21:58:10 [INFO] backend/local: apply calling Apply
2020/07/10 21:58:10 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node aws_instance.main (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-registry-ingress (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node data.aws_ami.ubuntu (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node aws_iam_instance_profile.main (prepare state)
2020/07/10 21:58:10 DestroyEdgeTransformer: pruning unused resource node data.template_cloudinit_config.init (prepare state)
2020-07-10T21:58:10.728+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:58:10 [INFO] Terraform version: 0.12.23  
2020/07/10 21:58:10 [INFO] Go runtime version: go1.12.13
2020/07/10 21:58:10 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:58:10 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:58:10 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:58:10.763913+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin241421386","network":"unix"}
2020-07-10T21:58:10.772+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:58:10.772+0100
2020/07/10 21:58:10 [INFO] Terraform version: 0.12.23  
2020/07/10 21:58:10 [INFO] Go runtime version: go1.12.13
2020/07/10 21:58:10 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:58:10 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:58:10 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:58:10.799087+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin135195937","network":"unix"}
2020-07-10T21:58:10.802+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:58:10.858+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:58:10.857+0100
2020/07/10 21:58:16 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: error deleting S3 Bucket (pipeline-docker-registry-bucket): OperationAborted: A conflicting conditional operation is currently in progress against this resource. Please try again.
	status code: 409, request id: 767C4043F5F8FE93, host id: 7L1dcashMZRsgJIIuCZ9eOj1R3t9yRyT9/w07/3GPilRpLmiD5OkcxzWBk1HxjLKIjwOyHnkgYQ=
2020/07/10 21:58:16 [ERROR] <root>: eval: *terraform.EvalSequence, err: error deleting S3 Bucket (pipeline-docker-registry-bucket): OperationAborted: A conflicting conditional operation is currently in progress against this resource. Please try again.
	status code: 409, request id: 767C4043F5F8FE93, host id: 7L1dcashMZRsgJIIuCZ9eOj1R3t9yRyT9/w07/3GPilRpLmiD5OkcxzWBk1HxjLKIjwOyHnkgYQ=
2020/07/10 21:58:16 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: error deleting S3 Bucket (pipeline-docker-registry-bucket): OperationAborted: A conflicting conditional operation is currently in progress against this resource. Please try again.
	status code: 409, request id: 767C4043F5F8FE93, host id: 7L1dcashMZRsgJIIuCZ9eOj1R3t9yRyT9/w07/3GPilRpLmiD5OkcxzWBk1HxjLKIjwOyHnkgYQ=
2020/07/10 21:59:12 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 894cb560-8667-4c50-b532-3bb862dc9e87
2020/07/10 21:59:12 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 894cb560-8667-4c50-b532-3bb862dc9e87
2020/07/10 21:59:12 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 894cb560-8667-4c50-b532-3bb862dc9e87
2020/07/10 21:59:21 [INFO] Terraform version: 0.12.23  
2020/07/10 21:59:21 [INFO] Go runtime version: go1.12.13
2020/07/10 21:59:21 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 21:59:21 [INFO] CLI command args: []string{"apply"}
2020/07/10 21:59:21 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 21:59:21 [INFO] backend/local: starting Apply operation
2020-07-10T21:59:21.868+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:59:21.922+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:59:21.921+0100
2020-07-10T21:59:22.045+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:59:22.074+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:59:22.074+0100
2020/07/10 21:59:22 [INFO] Terraform version: 0.12.23  
2020/07/10 21:59:22 [INFO] Go runtime version: go1.12.13
2020/07/10 21:59:22 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:59:22 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:59:22 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:59:22.173715+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin641422971","network":"unix"}
2020/07/10 21:59:22 [INFO] Terraform version: 0.12.23  
2020/07/10 21:59:22 [INFO] Go runtime version: go1.12.13
2020/07/10 21:59:22 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:59:22 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:59:22 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:59:22.211334+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin360143117","network":"unix"}
2020/07/10 21:59:22 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T21:59:22.223+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:59:22 [INFO] Terraform version: 0.12.23  
2020/07/10 21:59:22 [INFO] Go runtime version: go1.12.13
2020/07/10 21:59:22 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:59:22 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:59:22 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:59:22.255757+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin408077191","network":"unix"}
2020-07-10T21:59:22.262+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:59:22.262+0100
2020/07/10 21:59:22 [INFO] Terraform version: 0.12.23  
2020/07/10 21:59:22 [INFO] Go runtime version: go1.12.13
2020/07/10 21:59:22 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:59:22 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:59:22 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:59:22.285635+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin604032934","network":"unix"}
2020-07-10T21:59:22.287+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:59:22.348+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:59:22.348+0100
2020/07/10 21:59:22 [INFO] backend/local: apply calling Refresh
2020/07/10 21:59:22 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T21:59:22.539+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:59:22.569+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:59:22.569+0100
2020-07-10T21:59:22.593+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:59:22.650+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:59:22.650+0100
2020/07/10 21:59:26 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 21:59:26 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 21:59:27 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 21:59:27 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
2020/07/10 21:59:27 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:59:27 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:59:27 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:59:27 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 21:59:27 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
X3Xq7GGwcSs9wQffKMxdu3B0r1zS10vGGxX+z2RxcFIRLOBDJ1DvSyKA1ZE9kBh2zqp3aAM7dWJrWlZ9wb3qyi4Xh52BuL+MgquO/F4pXdHFo+fEhiYadR9TmBwtd8FrIRzLwuDbUb2c3bA6xWehx60B0kUXNc7LNL7ZTwxo6c9vra1CeeefKQDet81GR5PsrA3rWcGOn6qZ/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
ting nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:59:29 [INFO] backend/local: apply calling Plan
2020/07/10 21:59:29 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T21:59:29.089+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:59:29 [INFO] Terraform version: 0.12.23  
2020/07/10 21:59:29 [INFO] Go runtime version: go1.12.13
2020/07/10 21:59:29 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:59:29 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:59:29 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:59:29.121968+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin193451673","network":"unix"}
2020-07-10T21:59:29.132+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:59:29.132+0100
2020/07/10 21:59:29 [INFO] Terraform version: 0.12.23  
2020/07/10 21:59:29 [INFO] Go runtime version: go1.12.13
2020/07/10 21:59:29 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:59:29 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:59:29 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:59:29.157716+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin419965136","network":"unix"}
2020-07-10T21:59:29.161+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:59:29.223+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:59:29.223+0100
2020/07/10 21:59:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
 21:59:31 [TRACE] vertex "data.aws_iam_policy_document.default": dynamic subgraph completed successfully
2020/07/10 21:59:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
2020/07/10 21:59:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
ty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 21:59:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 21:59:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 21:59:31 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
zmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
ting nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 21:59:34 [INFO] backend/local: apply calling Apply
2020/07/10 21:59:34 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T21:59:34.919+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 21:59:34 [INFO] Terraform version: 0.12.23  
2020/07/10 21:59:34 [INFO] Go runtime version: go1.12.13
2020/07/10 21:59:34 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 21:59:34 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 21:59:34 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:59:34.952356+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin823061932","network":"unix"}
2020-07-10T21:59:34.963+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:59:34.962+0100
2020/07/10 21:59:34 [INFO] Terraform version: 0.12.23  
2020/07/10 21:59:34 [INFO] Go runtime version: go1.12.13
2020/07/10 21:59:34 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 21:59:34 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 21:59:34 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T21:59:34.989263+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin077984947","network":"unix"}
2020-07-10T21:59:34.992+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T21:59:35.054+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T21:59:35.054+0100
2020/07/10 21:59:37 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 21:59:37 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
tU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 21:59:37 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
2020/07/10 21:59:37 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
2020/07/10 21:59:40 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
srA3rWcGOn6qZ/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
sted attribute values to unknown instead
7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA="
2020/07/10 22:00:18 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .hibernation: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
file-provisioner (internal) 2020/07/10 22:00:18 using private key for authentication
file-provisioner (internal) 2020/07/10 22:00:18 [DEBUG] Connecting to ec2-18-130-2-182.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 22:00:23 [ERROR] connection error: dial tcp 18.130.2.182:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:00:23 [WARN] retryable error: dial tcp 18.130.2.182:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:00:23 [INFO] sleeping for 1s
file-provisioner (internal) 2020/07/10 22:00:24 [DEBUG] Connecting to ec2-18-130-2-182.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 22:00:24 [ERROR] connection error: dial tcp 18.130.2.182:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:00:24 [WARN] retryable error: dial tcp 18.130.2.182:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:00:24 [INFO] sleeping for 2s
file-provisioner (internal) 2020/07/10 22:00:26 [DEBUG] Connecting to ec2-18-130-2-182.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 22:00:26 [ERROR] connection error: dial tcp 18.130.2.182:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:00:26 [WARN] retryable error: dial tcp 18.130.2.182:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:00:26 [INFO] sleeping for 4s
file-provisioner (internal) 2020/07/10 22:00:30 [DEBUG] Connecting to ec2-18-130-2-182.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 22:00:30 [DEBUG] Connection established. Handshaking for user ubuntu
file-provisioner (internal) 2020/07/10 22:00:30 [DEBUG] Telling SSH config to forward to agent
file-provisioner (internal) 2020/07/10 22:00:30 [DEBUG] Setting up a session to request agent forwarding
file-provisioner (internal) 2020/07/10 22:00:33 [INFO] agent forwarding enabled
file-provisioner (internal) 2020/07/10 22:00:33 [DEBUG] starting ssh KeepAlives
file-provisioner (internal) 2020/07/10 22:00:33 [DEBUG] opening new ssh session
file-provisioner (internal) 2020/07/10 22:00:33 [DEBUG] Starting remote scp process:  scp -vt /tmp
file-provisioner (internal) 2020/07/10 22:00:33 [DEBUG] Started SCP session, beginning transfers...
file-provisioner (internal) 2020/07/10 22:00:33 [DEBUG] Copying input data into temporary file so we can read the length
file-provisioner (internal) 2020/07/10 22:00:33 [DEBUG] Beginning file upload...
file-provisioner (internal) 2020/07/10 22:00:33 [DEBUG] SCP session complete, closing stdin pipe.
file-provisioner (internal) 2020/07/10 22:00:33 [DEBUG] Waiting for SSH session to complete.
file-provisioner (internal) 2020/07/10 22:00:33 [ERROR] scp stderr: "Sink: C0644 1852 nginx_sblock.sh\n"
remote-exec-provisioner (internal) 2020/07/10 22:00:33 using private key for authentication
remote-exec-provisioner (internal) 2020/07/10 22:00:33 [DEBUG] Connecting to ec2-18-130-2-182.eu-west-2.compute.amazonaws.com:22 for SSH
remote-exec-provisioner (internal) 2020/07/10 22:00:38 [DEBUG] Connection established. Handshaking for user ubuntu
remote-exec-provisioner (internal) 2020/07/10 22:00:38 [DEBUG] Telling SSH config to forward to agent
remote-exec-provisioner (internal) 2020/07/10 22:00:38 [DEBUG] Setting up a session to request agent forwarding
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [INFO] agent forwarding enabled
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] starting ssh KeepAlives
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [ERROR] scp stderr: "Sink: C0644 80 terraform_1129771558.sh\n"
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] starting remote command: chmod 0777 /tmp/terraform_1129771558.sh
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] remote command exited with '0': chmod 0777 /tmp/terraform_1129771558.sh
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] starting remote command: /tmp/terraform_1129771558.sh
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] remote command exited with '0': /tmp/terraform_1129771558.sh
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] Copying input data into temporary file so we can read the length
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 22:00:40 [ERROR] scp stderr: "Sink: C0644 0 terraform_1129771558.sh\n"
2020/07/10 22:09:18 [INFO] Terraform version: 0.12.23  
2020/07/10 22:09:18 [INFO] Go runtime version: go1.12.13
2020/07/10 22:09:18 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "destroy"}
2020/07/10 22:09:18 [INFO] CLI command args: []string{"destroy"}
2020/07/10 22:09:18 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 22:10:00 [INFO] Terraform version: 0.12.23  
2020/07/10 22:10:00 [INFO] Go runtime version: go1.12.13
2020/07/10 22:10:00 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "destroy"}
2020/07/10 22:10:00 [INFO] CLI command args: []string{"destroy"}
2020/07/10 22:10:00 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 22:10:00 [INFO] backend/local: starting Apply operation
2020-07-10T22:10:00.735+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:10:00.803+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:10:00.803+0100
2020-07-10T22:10:00.934+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:10:00.963+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:10:00.963+0100
2020/07/10 22:10:01 [INFO] Terraform version: 0.12.23  
2020/07/10 22:10:01 [INFO] Go runtime version: go1.12.13
2020/07/10 22:10:01 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:10:01 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:10:01 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:10:01.060560+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin896467359","network":"unix"}
2020/07/10 22:10:01 [INFO] Terraform version: 0.12.23  
2020/07/10 22:10:01 [INFO] Go runtime version: go1.12.13
2020/07/10 22:10:01 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:10:01 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:10:01 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:10:01.093692+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin370369545","network":"unix"}
2020/07/10 22:10:01 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T22:10:01.109+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:10:01 [INFO] Terraform version: 0.12.23  
2020/07/10 22:10:01 [INFO] Go runtime version: go1.12.13
2020/07/10 22:10:01 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:10:01 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:10:01 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:10:01.136447+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin497896171","network":"unix"}
2020-07-10T22:10:01.144+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:10:01.144+0100
2020/07/10 22:10:01 [INFO] Terraform version: 0.12.23  
2020/07/10 22:10:01 [INFO] Go runtime version: go1.12.13
2020/07/10 22:10:01 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:10:01 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:10:01 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:10:01.166466+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin729879562","network":"unix"}
2020-07-10T22:10:01.170+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:10:01.230+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:10:01.230+0100
2020/07/10 22:10:01 [INFO] backend/local: apply calling Refresh
2020/07/10 22:10:01 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T22:10:01.421+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:10:01.451+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:10:01.450+0100
2020-07-10T22:10:01.474+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:10:01.535+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:10:01.534+0100
2020/07/10 22:10:03 [ERROR] <root>: eval: *terraform.EvalConfigProvider, err: No valid credential sources found for AWS Provider.
	Please see https://terraform.io/docs/providers/aws/index.html for more information on
	providing credentials for the AWS Provider
2020/07/10 22:10:03 [ERROR] <root>: eval: *terraform.EvalSequence, err: No valid credential sources found for AWS Provider.
	Please see https://terraform.io/docs/providers/aws/index.html for more information on
	providing credentials for the AWS Provider
2020/07/10 22:10:03 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: No valid credential sources found for AWS Provider.
	Please see https://terraform.io/docs/providers/aws/index.html for more information on
	providing credentials for the AWS Provider
2020/07/10 22:10:03 [ERROR] <root>: eval: *terraform.EvalSequence, err: No valid credential sources found for AWS Provider.
	Please see https://terraform.io/docs/providers/aws/index.html for more information on
	providing credentials for the AWS Provider
2020/07/10 22:12:05 [INFO] Terraform version: 0.12.23  
2020/07/10 22:12:05 [INFO] Go runtime version: go1.12.13
2020/07/10 22:12:05 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "destroy"}
2020/07/10 22:12:05 [INFO] CLI command args: []string{"destroy"}
2020/07/10 22:12:05 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 22:12:05 [INFO] backend/local: starting Apply operation
2020-07-10T22:12:06.113+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:12:06.166+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:12:06.166+0100
2020-07-10T22:12:06.292+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:12:06.321+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:12:06.321+0100
2020/07/10 22:12:06 [INFO] Terraform version: 0.12.23  
2020/07/10 22:12:06 [INFO] Go runtime version: go1.12.13
2020/07/10 22:12:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:12:06 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:12:06 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:12:06.418771+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin870471136","network":"unix"}
2020/07/10 22:12:06 [INFO] Terraform version: 0.12.23  
2020/07/10 22:12:06 [INFO] Go runtime version: go1.12.13
2020/07/10 22:12:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:12:06 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:12:06 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:12:06.451116+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin432617634","network":"unix"}
2020/07/10 22:12:06 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T22:12:06.467+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:12:06 [INFO] Terraform version: 0.12.23  
2020/07/10 22:12:06 [INFO] Go runtime version: go1.12.13
2020/07/10 22:12:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:12:06 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:12:06 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:12:06.497005+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin373502428","network":"unix"}
2020-07-10T22:12:06.505+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:12:06.504+0100
2020/07/10 22:12:06 [INFO] Terraform version: 0.12.23  
2020/07/10 22:12:06 [INFO] Go runtime version: go1.12.13
2020/07/10 22:12:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:12:06 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:12:06 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:12:06.530671+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin719445139","network":"unix"}
2020-07-10T22:12:06.532+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:12:06.593+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:12:06.593+0100
2020/07/10 22:12:06 [INFO] backend/local: apply calling Refresh
2020/07/10 22:12:06 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T22:12:06.786+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:12:06.816+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:12:06.816+0100
2020-07-10T22:12:06.841+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:12:06.899+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:12:06.899+0100
2020/07/10 22:12:12 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:12:12 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:12:12 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:12:12 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:12:15 [INFO] backend/local: apply calling Plan
2020/07/10 22:12:15 [INFO] terraform: building graph: GraphTypePlanDestroy
2020-07-10T22:12:15.281+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:12:15.347+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:12:15.347+0100
2020-07-10T22:12:15.375+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:12:15.408+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:12:15.408+0100
2020/07/10 22:12:18 [INFO] backend/local: apply calling Apply
2020/07/10 22:12:18 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-registry-ingress (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node aws_iam_instance_profile.main (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node data.template_cloudinit_config.init (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node aws_instance.main (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node data.aws_ami.ubuntu (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 22:12:18 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020-07-10T22:12:18.718+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:12:18 [INFO] Terraform version: 0.12.23  
2020/07/10 22:12:18 [INFO] Go runtime version: go1.12.13
2020/07/10 22:12:18 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:12:18 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:12:18 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:12:18.750742+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin793355768","network":"unix"}
2020-07-10T22:12:18.761+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:12:18.761+0100
2020/07/10 22:12:18 [INFO] Terraform version: 0.12.23  
2020/07/10 22:12:18 [INFO] Go runtime version: go1.12.13
2020/07/10 22:12:18 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:12:18 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:12:18 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:12:18.787221+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin329913287","network":"unix"}
2020-07-10T22:12:18.789+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:12:18.844+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:12:18.844+0100
2020/07/10 22:13:24 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 8b5d4a2b-3cd8-4320-87c3-bf5b60bca1ab
2020/07/10 22:13:24 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 8b5d4a2b-3cd8-4320-87c3-bf5b60bca1ab
2020/07/10 22:13:24 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 8b5d4a2b-3cd8-4320-87c3-bf5b60bca1ab
2020/07/10 22:13:37 [INFO] Terraform version: 0.12.23  
2020/07/10 22:13:37 [INFO] Go runtime version: go1.12.13
2020/07/10 22:13:37 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 22:13:37 [INFO] CLI command args: []string{"apply"}
2020/07/10 22:13:37 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 22:13:37 [INFO] backend/local: starting Apply operation
2020-07-10T22:13:38.209+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:13:38.261+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:13:38.261+0100
2020-07-10T22:13:38.393+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:13:38.423+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:13:38.423+0100
2020/07/10 22:13:38 [INFO] Terraform version: 0.12.23  
2020/07/10 22:13:38 [INFO] Go runtime version: go1.12.13
2020/07/10 22:13:38 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:13:38 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:13:38 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:13:38.521273+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin452405014","network":"unix"}
2020/07/10 22:13:38 [INFO] Terraform version: 0.12.23  
2020/07/10 22:13:38 [INFO] Go runtime version: go1.12.13
2020/07/10 22:13:38 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:13:38 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:13:38 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:13:38.553415+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin539727792","network":"unix"}
2020/07/10 22:13:38 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T22:13:38.566+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:13:38 [INFO] Terraform version: 0.12.23  
2020/07/10 22:13:38 [INFO] Go runtime version: go1.12.13
2020/07/10 22:13:38 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:13:38 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:13:38 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:13:38.595670+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin541157650","network":"unix"}
2020-07-10T22:13:38.602+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:13:38.602+0100
2020/07/10 22:13:38 [INFO] Terraform version: 0.12.23  
2020/07/10 22:13:38 [INFO] Go runtime version: go1.12.13
2020/07/10 22:13:38 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:13:38 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:13:38 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:13:38.626629+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin279311377","network":"unix"}
2020-07-10T22:13:38.629+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:13:38.691+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:13:38.690+0100
2020/07/10 22:13:38 [INFO] backend/local: apply calling Refresh
2020/07/10 22:13:38 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T22:13:38.886+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:13:38.918+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:13:38.917+0100
2020-07-10T22:13:38.942+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:13:38.998+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:13:38.998+0100
2020/07/10 22:13:42 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 22:13:42 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 22:13:43 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 22:13:43 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 22:13:43 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
ty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 22:13:43 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:13:43 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:13:43 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:13:43 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:13:43 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
X3Xq7GGwcSs9wQffKMxdu3B0r1zS10vGGxX+z2RxcFIRLOBDJ1DvSyKA1ZE9kBh2zqp3aAM7dWJrWlZ9wb3qyi4Xh52BuL+MgquO/F4pXdHFo+fEhiYadR9TmBwtd8FrIRzLwuDbUb2c3bA6xWehx60B0kUXNc7LNL7ZTwxo6c9vra1CeeefKQDet81GR5PsrA3rWcGOn6qZ/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
ting nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 22:13:43 [INFO] backend/local: apply calling Plan
2020/07/10 22:13:43 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T22:13:43.776+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:13:43 [INFO] Terraform version: 0.12.23  
2020/07/10 22:13:43 [INFO] Go runtime version: go1.12.13
2020/07/10 22:13:43 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:13:43 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:13:43 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:13:43.812764+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin069763711","network":"unix"}
2020-07-10T22:13:43.821+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:13:43.821+0100
2020/07/10 22:13:43 [INFO] Terraform version: 0.12.23  
2020/07/10 22:13:43 [INFO] Go runtime version: go1.12.13
2020/07/10 22:13:43 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:13:43 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:13:43 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:13:43.847300+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin199501238","network":"unix"}
2020-07-10T22:13:43.848+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:13:43.911+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:13:43.911+0100
2020/07/10 22:13:47 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 22:13:47 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 22:13:47 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 22:13:47 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
ue{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 22:13:47 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 22:13:47 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
zmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
ting nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 22:13:51 [INFO] backend/local: apply calling Apply
2020/07/10 22:13:51 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T22:13:51.052+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:13:51 [INFO] Terraform version: 0.12.23  
2020/07/10 22:13:51 [INFO] Go runtime version: go1.12.13
2020/07/10 22:13:51 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:13:51 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:13:51 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:13:51.088269+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin348973194","network":"unix"}
2020-07-10T22:13:51.097+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:13:51.097+0100
2020/07/10 22:13:51 [INFO] Terraform version: 0.12.23  
2020/07/10 22:13:51 [INFO] Go runtime version: go1.12.13
2020/07/10 22:13:51 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:13:51 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:13:51 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:13:51.124603+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin486370361","network":"unix"}
2020-07-10T22:13:51.127+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:13:51.191+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:13:51.191+0100
2020/07/10 22:13:53 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 22:13:53 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 22:13:53 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 22:13:53 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
ty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 22:13:53 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 22:13:54 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error putting S3 policy: NoSuchBucket: The specified bucket does not exist
	status code: 404, request id: 0K8Q5Q2N4W7Z3V2Y, host id: Ua08F1haQZaZEjKccVtoyvIntZC3Qj+w41Jgmc1UN0RIISon4Q7PbPmH+KEmOhgJbTz+AjksEvM=
2020/07/10 22:13:54 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error putting S3 policy: NoSuchBucket: The specified bucket does not exist
	status code: 404, request id: 0K8Q5Q2N4W7Z3V2Y, host id: Ua08F1haQZaZEjKccVtoyvIntZC3Qj+w41Jgmc1UN0RIISon4Q7PbPmH+KEmOhgJbTz+AjksEvM=
2020/07/10 22:13:56 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
zmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
sted attribute values to unknown instead
7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA="
2020/07/10 22:14:29 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .monitoring: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
file-provisioner (internal) 2020/07/10 22:14:29 using private key for authentication
file-provisioner (internal) 2020/07/10 22:14:29 [DEBUG] Connecting to ec2-35-176-76-124.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 22:14:36 [ERROR] connection error: dial tcp 35.176.76.124:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:14:36 [WARN] retryable error: dial tcp 35.176.76.124:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:14:36 [INFO] sleeping for 1s
file-provisioner (internal) 2020/07/10 22:14:37 [DEBUG] Connecting to ec2-35-176-76-124.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 22:14:37 [ERROR] connection error: dial tcp 35.176.76.124:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:14:37 [WARN] retryable error: dial tcp 35.176.76.124:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:14:37 [INFO] sleeping for 2s
file-provisioner (internal) 2020/07/10 22:14:39 [DEBUG] Connecting to ec2-35-176-76-124.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 22:14:39 [ERROR] connection error: dial tcp 35.176.76.124:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:14:39 [WARN] retryable error: dial tcp 35.176.76.124:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:14:39 [INFO] sleeping for 4s
file-provisioner (internal) 2020/07/10 22:14:43 [DEBUG] Connecting to ec2-35-176-76-124.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 22:14:43 [DEBUG] Connection established. Handshaking for user ubuntu
file-provisioner (internal) 2020/07/10 22:14:43 [DEBUG] Telling SSH config to forward to agent
file-provisioner (internal) 2020/07/10 22:14:43 [DEBUG] Setting up a session to request agent forwarding
file-provisioner (internal) 2020/07/10 22:14:45 [INFO] agent forwarding enabled
file-provisioner (internal) 2020/07/10 22:14:45 [DEBUG] starting ssh KeepAlives
file-provisioner (internal) 2020/07/10 22:14:45 [DEBUG] opening new ssh session
file-provisioner (internal) 2020/07/10 22:14:45 [DEBUG] Starting remote scp process:  scp -vt /tmp
file-provisioner (internal) 2020/07/10 22:14:45 [DEBUG] Started SCP session, beginning transfers...
file-provisioner (internal) 2020/07/10 22:14:45 [DEBUG] Copying input data into temporary file so we can read the length
file-provisioner (internal) 2020/07/10 22:14:45 [DEBUG] Beginning file upload...
file-provisioner (internal) 2020/07/10 22:14:46 [DEBUG] SCP session complete, closing stdin pipe.
file-provisioner (internal) 2020/07/10 22:14:46 [DEBUG] Waiting for SSH session to complete.
file-provisioner (internal) 2020/07/10 22:14:46 [ERROR] scp stderr: "Sink: C0644 1852 nginx_sblock.sh\n"
remote-exec-provisioner (internal) 2020/07/10 22:14:46 using private key for authentication
remote-exec-provisioner (internal) 2020/07/10 22:14:46 [DEBUG] Connecting to ec2-35-176-76-124.eu-west-2.compute.amazonaws.com:22 for SSH
remote-exec-provisioner (internal) 2020/07/10 22:14:46 [DEBUG] Connection established. Handshaking for user ubuntu
remote-exec-provisioner (internal) 2020/07/10 22:14:46 [DEBUG] Telling SSH config to forward to agent
remote-exec-provisioner (internal) 2020/07/10 22:14:46 [DEBUG] Setting up a session to request agent forwarding
remote-exec-provisioner (internal) 2020/07/10 22:14:47 [INFO] agent forwarding enabled
remote-exec-provisioner (internal) 2020/07/10 22:14:47 [DEBUG] starting ssh KeepAlives
remote-exec-provisioner (internal) 2020/07/10 22:14:47 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 22:14:47 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 22:14:47 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 22:14:47 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 22:14:48 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 22:14:48 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 22:14:48 [ERROR] scp stderr: "Sink: C0644 89 terraform_866442896.sh\n"
remote-exec-provisioner (internal) 2020/07/10 22:14:48 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 22:14:48 [DEBUG] starting remote command: chmod 0777 /tmp/terraform_866442896.sh
remote-exec-provisioner (internal) 2020/07/10 22:14:48 [DEBUG] remote command exited with '0': chmod 0777 /tmp/terraform_866442896.sh
remote-exec-provisioner (internal) 2020/07/10 22:14:48 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 22:14:48 [DEBUG] starting remote command: /tmp/terraform_866442896.sh
remote-exec-provisioner (internal) 2020/07/10 22:17:49 [DEBUG] remote command exited with '0': /tmp/terraform_866442896.sh
remote-exec-provisioner (internal) 2020/07/10 22:17:49 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 22:17:49 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 22:17:49 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 22:17:49 [DEBUG] Copying input data into temporary file so we can read the length
remote-exec-provisioner (internal) 2020/07/10 22:17:49 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 22:17:49 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 22:17:49 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 22:17:49 [ERROR] scp stderr: "Sink: C0644 0 terraform_866442896.sh\n"
2020/07/10 22:17:58 [INFO] Terraform version: 0.12.23  
2020/07/10 22:17:58 [INFO] Go runtime version: go1.12.13
2020/07/10 22:17:58 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 22:17:58 [INFO] CLI command args: []string{"apply"}
2020/07/10 22:17:58 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 22:17:58 [INFO] backend/local: starting Apply operation
2020-07-10T22:17:59.481+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:17:59.537+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:17:59.536+0100
2020-07-10T22:17:59.657+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:17:59.690+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:17:59.690+0100
2020/07/10 22:17:59 [INFO] Terraform version: 0.12.23  
2020/07/10 22:17:59 [INFO] Go runtime version: go1.12.13
2020/07/10 22:17:59 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:17:59 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:17:59 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:17:59.794148+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin010968739","network":"unix"}
2020/07/10 22:17:59 [INFO] Terraform version: 0.12.23  
2020/07/10 22:17:59 [INFO] Go runtime version: go1.12.13
2020/07/10 22:17:59 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:17:59 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:17:59 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:17:59.827092+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin811975981","network":"unix"}
2020/07/10 22:17:59 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T22:17:59.839+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:17:59 [INFO] Terraform version: 0.12.23  
2020/07/10 22:17:59 [INFO] Go runtime version: go1.12.13
2020/07/10 22:17:59 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:17:59 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:17:59 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:17:59.868354+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin089205511","network":"unix"}
2020/07/10 22:17:59 [INFO] Terraform version: 0.12.23  
2020/07/10 22:17:59 [INFO] Go runtime version: go1.12.13
2020/07/10 22:17:59 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:17:59 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:17:59 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:17:59.900691+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin041661022","network":"unix"}
2020-07-10T22:17:59.904+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:17:59.903+0100
2020-07-10T22:17:59.929+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:17:59.965+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:17:59.965+0100
2020/07/10 22:18:00 [INFO] backend/local: apply calling Refresh
2020/07/10 22:18:00 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T22:18:00.115+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:18:00.146+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:18:00.146+0100
2020-07-10T22:18:00.170+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:18:00.226+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:18:00.226+0100
2020/07/10 22:18:05 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:18:05 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:18:05 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:18:05 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:18:07 [INFO] backend/local: apply calling Plan
2020/07/10 22:18:07 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T22:18:07.721+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:18:07 [INFO] Terraform version: 0.12.23  
2020/07/10 22:18:07 [INFO] Go runtime version: go1.12.13
2020/07/10 22:18:07 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:18:07 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:18:07 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:18:07.754221+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin134725916","network":"unix"}
2020-07-10T22:18:07.764+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:18:07.764+0100
2020/07/10 22:18:07 [INFO] Terraform version: 0.12.23  
2020/07/10 22:18:07 [INFO] Go runtime version: go1.12.13
2020/07/10 22:18:07 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:18:07 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:18:07 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:18:07.788057+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin568792803","network":"unix"}
2020-07-10T22:18:07.792+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:18:07.854+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:18:07.854+0100
2020/07/10 22:18:10 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})})
2020/07/10 22:18:10 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 22:18:10 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 22:18:10 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
2020/07/10 22:18:14 [INFO] backend/local: apply calling Apply
2020/07/10 22:18:14 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T22:18:14.309+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:18:14 [INFO] Terraform version: 0.12.23  
2020/07/10 22:18:14 [INFO] Go runtime version: go1.12.13
2020/07/10 22:18:14 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:18:14 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:18:14 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:18:14.346791+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin558705783","network":"unix"}
2020-07-10T22:18:14.358+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:18:14.358+0100
2020/07/10 22:18:14 [INFO] Terraform version: 0.12.23  
2020/07/10 22:18:14 [INFO] Go runtime version: go1.12.13
2020/07/10 22:18:14 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:18:14 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:18:14 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:18:14.384125+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin739709398","network":"unix"}
2020-07-10T22:18:14.387+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:18:14.449+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:18:14.449+0100
2020/07/10 22:27:46 [INFO] Terraform version: 0.12.23  
2020/07/10 22:27:46 [INFO] Go runtime version: go1.12.13
2020/07/10 22:27:46 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "destroy"}
2020/07/10 22:27:46 [INFO] CLI command args: []string{"destroy"}
2020/07/10 22:27:46 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 22:27:46 [INFO] backend/local: starting Apply operation
2020-07-10T22:27:47.233+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:27:47.294+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:27:47.294+0100
2020-07-10T22:27:47.433+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:27:47.463+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:27:47.463+0100
2020/07/10 22:27:47 [INFO] Terraform version: 0.12.23  
2020/07/10 22:27:47 [INFO] Go runtime version: go1.12.13
2020/07/10 22:27:47 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:27:47 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:27:47 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:27:47.566320+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin895690843","network":"unix"}
2020/07/10 22:27:47 [INFO] Terraform version: 0.12.23  
2020/07/10 22:27:47 [INFO] Go runtime version: go1.12.13
2020/07/10 22:27:47 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:27:47 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:27:47 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:27:47.601097+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin187752365","network":"unix"}
2020/07/10 22:27:47 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T22:27:47.625+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:27:47 [INFO] Terraform version: 0.12.23  
2020/07/10 22:27:47 [INFO] Go runtime version: go1.12.13
2020/07/10 22:27:47 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:27:47 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:27:47 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:27:47.651107+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin459553511","network":"unix"}
2020/07/10 22:27:47 [INFO] Terraform version: 0.12.23  
2020/07/10 22:27:47 [INFO] Go runtime version: go1.12.13
2020/07/10 22:27:47 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:27:47 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:27:47 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:27:47.685611+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin537194510","network":"unix"}
2020-07-10T22:27:47.688+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:27:47.688+0100
2020-07-10T22:27:47.714+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:27:47.749+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:27:47.749+0100
2020/07/10 22:27:47 [INFO] backend/local: apply calling Refresh
2020/07/10 22:27:47 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T22:27:47.905+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:27:47.936+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:27:47.935+0100
2020-07-10T22:27:47.959+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:27:48.016+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:27:48.016+0100
2020/07/10 22:27:52 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:27:52 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:27:52 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:27:52 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:28:00 [INFO] backend/local: apply calling Plan
2020/07/10 22:28:00 [INFO] terraform: building graph: GraphTypePlanDestroy
2020-07-10T22:28:00.360+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:28:00.427+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:28:00.426+0100
2020-07-10T22:28:00.452+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:28:00.486+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:28:00.485+0100
2020/07/10 22:28:06 [INFO] backend/local: apply calling Apply
2020/07/10 22:28:06 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node aws_iam_instance_profile.main (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-registry-ingress (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node aws_instance.main (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node data.template_cloudinit_config.init (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node data.aws_ami.ubuntu (prepare state)
2020/07/10 22:28:06 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020-07-10T22:28:06.528+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:28:06 [INFO] Terraform version: 0.12.23  
2020/07/10 22:28:06 [INFO] Go runtime version: go1.12.13
2020/07/10 22:28:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:28:06 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:28:06 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:28:06.565041+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin201913947","network":"unix"}
2020-07-10T22:28:06.575+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:28:06.575+0100
2020/07/10 22:28:06 [INFO] Terraform version: 0.12.23  
2020/07/10 22:28:06 [INFO] Go runtime version: go1.12.13
2020/07/10 22:28:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:28:06 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:28:06 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:28:06.601604+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin565912026","network":"unix"}
2020-07-10T22:28:06.603+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:28:06.657+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:28:06.657+0100
2020/07/10 22:29:11 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: e483de9f-56b3-4dd9-a1f1-7b28a190ff31
2020/07/10 22:29:11 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: e483de9f-56b3-4dd9-a1f1-7b28a190ff31
2020/07/10 22:29:11 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: e483de9f-56b3-4dd9-a1f1-7b28a190ff31
2020/07/10 22:29:47 [INFO] Terraform version: 0.12.23  
2020/07/10 22:29:47 [INFO] Go runtime version: go1.12.13
2020/07/10 22:29:47 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 22:29:47 [INFO] CLI command args: []string{"apply"}
2020/07/10 22:29:47 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 22:29:47 [INFO] backend/local: starting Apply operation
2020-07-10T22:29:47.684+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:29:47.738+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:29:47.738+0100
2020-07-10T22:29:47.864+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:29:47.894+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:29:47.894+0100
2020/07/10 22:29:47 [INFO] Terraform version: 0.12.23  
2020/07/10 22:29:47 [INFO] Go runtime version: go1.12.13
2020/07/10 22:29:47 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:29:47 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:29:47 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:29:47.991342+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin963982153","network":"unix"}
2020/07/10 22:29:48 [INFO] Terraform version: 0.12.23  
2020/07/10 22:29:48 [INFO] Go runtime version: go1.12.13
2020/07/10 22:29:48 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:29:48 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:29:48 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:29:48.023406+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin608417995","network":"unix"}
2020/07/10 22:29:48 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T22:29:48.037+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:29:48 [INFO] Terraform version: 0.12.23  
2020/07/10 22:29:48 [INFO] Go runtime version: go1.12.13
2020/07/10 22:29:48 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:29:48 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:29:48 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:29:48.064319+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin021307333","network":"unix"}
2020-07-10T22:29:48.073+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:29:48.073+0100
2020/07/10 22:29:48 [INFO] Terraform version: 0.12.23  
2020/07/10 22:29:48 [INFO] Go runtime version: go1.12.13
2020/07/10 22:29:48 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:29:48 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:29:48 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:29:48.097276+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin063630988","network":"unix"}
2020-07-10T22:29:48.099+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:29:48.166+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:29:48.166+0100
2020/07/10 22:29:48 [INFO] backend/local: apply calling Refresh
2020/07/10 22:29:48 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T22:29:48.358+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:29:48.412+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:29:48.412+0100
2020-07-10T22:29:48.438+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:29:48.472+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:29:48.472+0100
2020/07/10 22:29:52 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 22:29:52 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 22:29:52 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 22:29:53 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 22:29:53 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
ty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2020/07/10 22:29:53 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:29:53 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:29:53 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:29:53 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:29:53 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
zmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
nting nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 22:29:53 [INFO] backend/local: apply calling Plan
2020/07/10 22:29:53 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T22:29:53.185+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:29:53 [INFO] Terraform version: 0.12.23  
2020/07/10 22:29:53 [INFO] Go runtime version: go1.12.13
2020/07/10 22:29:53 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:29:53 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:29:53 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:29:53.219307+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin310113162","network":"unix"}
2020-07-10T22:29:53.230+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:29:53.229+0100
2020/07/10 22:29:53 [INFO] Terraform version: 0.12.23  
2020/07/10 22:29:53 [INFO] Go runtime version: go1.12.13
2020/07/10 22:29:53 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:29:53 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:29:53 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:29:53.252875+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin490122409","network":"unix"}
2020-07-10T22:29:53.256+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:29:53.319+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:29:53.319+0100
2020/07/10 22:29:57 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 22:29:57 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 22:29:57 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
.NumberIntVal(80)})})
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/07/10 22:29:57 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 22:29:57 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 22:29:57 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
X3Xq7GGwcSs9wQffKMxdu3B0r1zS10vGGxX+z2RxcFIRLOBDJ1DvSyKA1ZE9kBh2zqp3aAM7dWJrWlZ9wb3qyi4Xh52BuL+MgquO/F4pXdHFo+fEhiYadR9TmBwtd8FrIRzLwuDbUb2c3bA6xWehx60B0kUXNc7LNL7ZTwxo6c9vra1CeeefKQDet81GR5PsrA3rWcGOn6qZ/doZ5Sop26/xI5fYtt8JnOL3T/3NzVOYvreHRWJy6/XqHudRTyk7qjzUduIx558bPqwE/cmadT1V4izbjR33zd4WCzmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
nting nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 22:30:01 [INFO] backend/local: apply calling Apply
2020/07/10 22:30:01 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T22:30:01.113+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:30:01 [INFO] Terraform version: 0.12.23  
2020/07/10 22:30:01 [INFO] Go runtime version: go1.12.13
2020/07/10 22:30:01 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:30:01 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:30:01 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:30:01.151894+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin837332239","network":"unix"}
2020-07-10T22:30:01.161+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:30:01.161+0100
2020/07/10 22:30:01 [INFO] Terraform version: 0.12.23  
2020/07/10 22:30:01 [INFO] Go runtime version: go1.12.13
2020/07/10 22:30:01 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:30:01 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:30:01 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:30:01.187636+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin917871006","network":"unix"}
2020-07-10T22:30:01.190+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:30:01.252+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:30:01.251+0100
2020/07/10 22:30:04 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_key_pair.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips\n")
2020/07/10 22:30:04 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_iam_instance_profile.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2020/07/10 22:30:04 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(5000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(5000)})})
2020/07/10 22:30:04 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
2020/07/10 22:30:04 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .acl: planned value cty.StringVal("private") does not match config value cty.NullVal(cty.String)
      - .versioning: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/07/10 22:30:04 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error putting S3 policy: NoSuchBucket: The specified bucket does not exist
	status code: 404, request id: DA5E9022149F4007, host id: njo3VLujW3Y8uoesPXc0B14LM7RfFcMvtPmUpLXzi842D553FgKe5H9vSvgXz7bQh+/9pWTgRCQ=
2020/07/10 22:30:04 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error putting S3 policy: NoSuchBucket: The specified bucket does not exist
	status code: 404, request id: DA5E9022149F4007, host id: njo3VLujW3Y8uoesPXc0B14LM7RfFcMvtPmUpLXzi842D553FgKe5H9vSvgXz7bQh+/9pWTgRCQ=
2020/07/10 22:30:07 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
zmIxo7/uqRWh0kfLanZ7HwGBJRWs/6crhB1b53xp5E3N9Bp1/onKYbeWsAAAA5nqz4/VVNkRtB8huQS6lu9D81MYMqvQGXRKHLnCS0UHl1UXHW8EjOaaFPWHEDWp1vrq9bf9Cx3LaLlDBWoJxm6reu5VeXMRWXMSxSwzgHM6LKrAAqJeAQKOAQpVQQoCRI4ZoACPJSCCoS4xzcSbQi+RdZlUIFOFyRApQFAXJRm6KiUFAgYpyDLJf6GIOCKEBFzT2xD0uVEqEogkoLwwRq1Vpq1gNxiVZE1aoLmYNCyZyK5Oi8VRjnAEMFLwxDy7QlIHlOtlQdnkKWoiDKMDik4k9/Bv8wQBMbYy+4zsQAOrmXg8kTvkio2BoAnOsviEXzfCliJtHK+NGof+fAbYQbABlUpFDgc2O5jchnsMglB59hpj6DsmgQPOLDGFRUCtCUSwO1pphgEFe1zEKylU4Qqj3oF8br0Pf5EJRKcOY+jB71984+IA0T3msBcGYYAKAyZ6C9KGb3ICHqYs9FkmugEqLae0qRGgAUJZagSMHF5WuO0aT+BpFfjcWuv8jKumaglgZ7/AD46+/8/X4TRoMMAMYhq1eV/0/oHtrj/yYRoykazFQ7IQqUGdYzBc5fk9vtihSg3V7IHJH6//usDwk1CVdn4J+vFV+LNYCdA68Ub5bHSsNzsgyOLLTvh7rt60mAChSpLBkGZEsLBUqBSQ4+v9mbny+Mc72sSpS+tgJ4WSgQE5AxiPTskIXMyWFfAZXSAkhBLozTIf/V0s4UzNWXsTlGfQH+8sf/DPDfsPrb7v53rr49rBu6AN99B74C7QU4e1PPM/DDDx90c4jmqNaVGHreo6dLMdL34o0OwJIUQEjV9MpheoF+KmAaACyoYRyqVwrwvf7zry0gP2nBhoaJgig9CBC1kfkKpLJQe9JaspL/Sgg3NaVxcWRcNg1Zh6jVj6fkx3pCfJhTGDNSGMY0fJmZt7/89LMieQ4XMucXvNrv1gT+8tPPxoPjPsxfBv7AvR9Y98MXf/w4+zS7bdV+68m7LKgiRRuuIWXabGuvM3zQCne/rUGEFsctIxhaL3eud9u6XMP8crPZNKTn2dC7bW02m7a+qC2jeVeyzMuC5BrFg6uZPR5Oh7etrwuUki9kb/j0PJx9enn23NvW1zn5e0kK9VLmtKVhGJUC6YEtDFkfi6bmbQJa35Pvel3e+rpGR7946wP4EZwDJydEGJiSN/Lmh5757xpNF3wAzWnW9/7NR1W7/c74VwAAAP//e4QP6OAQAAA=")
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
sted attribute values to unknown instead
2020/07/10 22:30:45 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .hibernation: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
file-provisioner (internal) 2020/07/10 22:30:45 using private key for authentication
file-provisioner (internal) 2020/07/10 22:30:45 [DEBUG] Connecting to ec2-35-178-201-133.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 22:30:56 [ERROR] connection error: dial tcp 35.178.201.133:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:30:56 [WARN] retryable error: dial tcp 35.178.201.133:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:30:56 [INFO] sleeping for 1s
file-provisioner (internal) 2020/07/10 22:30:57 [DEBUG] Connecting to ec2-35-178-201-133.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 22:30:57 [ERROR] connection error: dial tcp 35.178.201.133:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:30:57 [WARN] retryable error: dial tcp 35.178.201.133:22: connect: connection refused
file-provisioner (internal) 2020/07/10 22:30:57 [INFO] sleeping for 2s
file-provisioner (internal) 2020/07/10 22:30:59 [DEBUG] Connecting to ec2-35-178-201-133.eu-west-2.compute.amazonaws.com:22 for SSH
file-provisioner (internal) 2020/07/10 22:30:59 [DEBUG] Connection established. Handshaking for user ubuntu
file-provisioner (internal) 2020/07/10 22:31:00 [DEBUG] Telling SSH config to forward to agent
file-provisioner (internal) 2020/07/10 22:31:00 [DEBUG] Setting up a session to request agent forwarding
file-provisioner (internal) 2020/07/10 22:31:01 [INFO] agent forwarding enabled
file-provisioner (internal) 2020/07/10 22:31:01 [DEBUG] starting ssh KeepAlives
file-provisioner (internal) 2020/07/10 22:31:01 [DEBUG] opening new ssh session
file-provisioner (internal) 2020/07/10 22:31:01 [DEBUG] Starting remote scp process:  scp -vt /tmp
file-provisioner (internal) 2020/07/10 22:31:01 [DEBUG] Started SCP session, beginning transfers...
file-provisioner (internal) 2020/07/10 22:31:01 [DEBUG] Copying input data into temporary file so we can read the length
file-provisioner (internal) 2020/07/10 22:31:01 [DEBUG] Beginning file upload...
file-provisioner (internal) 2020/07/10 22:31:01 [DEBUG] SCP session complete, closing stdin pipe.
file-provisioner (internal) 2020/07/10 22:31:01 [DEBUG] Waiting for SSH session to complete.
file-provisioner (internal) 2020/07/10 22:31:01 [ERROR] scp stderr: "Sink: C0644 1852 nginx_sblock.sh\n"
remote-exec-provisioner (internal) 2020/07/10 22:31:01 using private key for authentication
remote-exec-provisioner (internal) 2020/07/10 22:31:01 [DEBUG] Connecting to ec2-35-178-201-133.eu-west-2.compute.amazonaws.com:22 for SSH
remote-exec-provisioner (internal) 2020/07/10 22:31:01 [DEBUG] Connection established. Handshaking for user ubuntu
remote-exec-provisioner (internal) 2020/07/10 22:31:02 [DEBUG] Telling SSH config to forward to agent
remote-exec-provisioner (internal) 2020/07/10 22:31:02 [DEBUG] Setting up a session to request agent forwarding
remote-exec-provisioner (internal) 2020/07/10 22:31:02 [INFO] agent forwarding enabled
remote-exec-provisioner (internal) 2020/07/10 22:31:02 [DEBUG] starting ssh KeepAlives
remote-exec-provisioner (internal) 2020/07/10 22:31:02 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 22:31:02 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 22:31:02 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 22:31:02 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 22:31:03 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 22:31:03 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 22:31:03 [ERROR] scp stderr: "Sink: C0644 89 terraform_437053887.sh\n"
remote-exec-provisioner (internal) 2020/07/10 22:31:03 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 22:31:03 [DEBUG] starting remote command: chmod 0777 /tmp/terraform_437053887.sh
remote-exec-provisioner (internal) 2020/07/10 22:31:03 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 22:31:03 [DEBUG] remote command exited with '0': chmod 0777 /tmp/terraform_437053887.sh
remote-exec-provisioner (internal) 2020/07/10 22:31:03 [DEBUG] starting remote command: /tmp/terraform_437053887.sh
remote-exec-provisioner (internal) 2020/07/10 22:33:03 [DEBUG] remote command exited with '0': /tmp/terraform_437053887.sh
remote-exec-provisioner (internal) 2020/07/10 22:33:03 [DEBUG] opening new ssh session
remote-exec-provisioner (internal) 2020/07/10 22:33:03 [DEBUG] Starting remote scp process:  scp -vt /tmp
remote-exec-provisioner (internal) 2020/07/10 22:33:03 [DEBUG] Started SCP session, beginning transfers...
remote-exec-provisioner (internal) 2020/07/10 22:33:03 [DEBUG] Copying input data into temporary file so we can read the length
remote-exec-provisioner (internal) 2020/07/10 22:33:03 [DEBUG] Beginning file upload...
remote-exec-provisioner (internal) 2020/07/10 22:33:03 [DEBUG] SCP session complete, closing stdin pipe.
remote-exec-provisioner (internal) 2020/07/10 22:33:03 [DEBUG] Waiting for SSH session to complete.
remote-exec-provisioner (internal) 2020/07/10 22:33:03 [ERROR] scp stderr: "Sink: C0644 0 terraform_437053887.sh\n"
2020/07/10 22:34:09 [INFO] Terraform version: 0.12.23  
2020/07/10 22:34:09 [INFO] Go runtime version: go1.12.13
2020/07/10 22:34:09 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "apply"}
2020/07/10 22:34:09 [INFO] CLI command args: []string{"apply"}
2020/07/10 22:34:09 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 22:34:09 [INFO] backend/local: starting Apply operation
2020-07-10T22:34:09.631+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:34:09.685+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:34:09.685+0100
2020-07-10T22:34:09.811+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:34:09.840+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:34:09.840+0100
2020/07/10 22:34:09 [INFO] Terraform version: 0.12.23  
2020/07/10 22:34:09 [INFO] Go runtime version: go1.12.13
2020/07/10 22:34:09 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:34:09 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:34:09 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:34:09.936636+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin286891348","network":"unix"}
2020/07/10 22:34:09 [INFO] Terraform version: 0.12.23  
2020/07/10 22:34:09 [INFO] Go runtime version: go1.12.13
2020/07/10 22:34:09 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:34:09 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:34:09 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:34:09.969312+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin160745030","network":"unix"}
2020/07/10 22:34:09 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T22:34:09.984+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:34:10 [INFO] Terraform version: 0.12.23  
2020/07/10 22:34:10 [INFO] Go runtime version: go1.12.13
2020/07/10 22:34:10 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:34:10 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:34:10 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:34:10.012980+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin108295096","network":"unix"}
2020-07-10T22:34:10.023+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:34:10.023+0100
2020/07/10 22:34:10 [INFO] Terraform version: 0.12.23  
2020/07/10 22:34:10 [INFO] Go runtime version: go1.12.13
2020/07/10 22:34:10 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:34:10 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:34:10 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:34:10.044732+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin960165623","network":"unix"}
2020-07-10T22:34:10.050+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:34:10.116+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:34:10.116+0100
2020/07/10 22:34:10 [INFO] backend/local: apply calling Refresh
2020/07/10 22:34:10 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T22:34:10.310+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:34:10.339+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:34:10.339+0100
2020-07-10T22:34:10.363+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:34:10.421+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:34:10.421+0100
2020/07/10 22:34:15 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:34:15 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:34:15 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:34:15 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 22:34:17 [INFO] backend/local: apply calling Plan
2020/07/10 22:34:17 [INFO] terraform: building graph: GraphTypePlan
2020-07-10T22:34:17.382+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:34:17 [INFO] Terraform version: 0.12.23  
2020/07/10 22:34:17 [INFO] Go runtime version: go1.12.13
2020/07/10 22:34:17 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:34:17 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:34:17 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:34:17.415046+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin870987759","network":"unix"}
2020-07-10T22:34:17.426+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:34:17.426+0100
2020/07/10 22:34:17 [INFO] Terraform version: 0.12.23  
2020/07/10 22:34:17 [INFO] Go runtime version: go1.12.13
2020/07/10 22:34:17 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:34:17 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:34:17 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:34:17.449853+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin304062526","network":"unix"}
2020-07-10T22:34:17.454+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:34:17.515+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:34:17.515+0100
2020/07/10 22:34:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-registry-ingress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
l(5000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(5000)})})
2020/07/10 22:34:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.allow-ssh-and-egress, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2020/07/10 22:34:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_s3_bucket.encrypted, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .versioning: block count in plan (1) disagrees with count in config (0)
2020/07/10 22:34:20 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
2020/07/10 22:34:22 [INFO] backend/local: apply calling Apply
2020/07/10 22:34:22 [INFO] terraform: building graph: GraphTypeApply
2020-07-10T22:34:22.965+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 22:34:22 [INFO] Terraform version: 0.12.23  
2020/07/10 22:34:22 [INFO] Go runtime version: go1.12.13
2020/07/10 22:34:22 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 22:34:22 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 22:34:22 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:34:22.998682+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin485572354","network":"unix"}
2020-07-10T22:34:23.011+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:34:23.010+0100
2020/07/10 22:34:23 [INFO] Terraform version: 0.12.23  
2020/07/10 22:34:23 [INFO] Go runtime version: go1.12.13
2020/07/10 22:34:23 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 22:34:23 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 22:34:23 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T22:34:23.037231+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin059191185","network":"unix"}
2020-07-10T22:34:23.041+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T22:34:23.103+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T22:34:23.103+0100
2020/07/10 23:33:06 [INFO] Terraform version: 0.12.23  
2020/07/10 23:33:06 [INFO] Go runtime version: go1.12.13
2020/07/10 23:33:06 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "destroy"}
2020/07/10 23:33:06 [INFO] CLI command args: []string{"destroy"}
2020/07/10 23:33:06 [WARN] Log levels other than TRACE are currently unreliable, and are supported only for backward compatibility.
  Use TF_LOG=TRACE to see Terraform's internal logs.
  ----
2020/07/10 23:33:06 [INFO] backend/local: starting Apply operation
2020-07-10T23:33:07.222+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T23:33:07.286+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T23:33:07.286+0100
2020-07-10T23:33:07.420+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T23:33:07.450+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T23:33:07.449+0100
2020/07/10 23:33:07 [INFO] Terraform version: 0.12.23  
2020/07/10 23:33:07 [INFO] Go runtime version: go1.12.13
2020/07/10 23:33:07 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 23:33:07 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 23:33:07 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T23:33:07.593801+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin304526028","network":"unix"}
2020/07/10 23:33:07 [INFO] Terraform version: 0.12.23  
2020/07/10 23:33:07 [INFO] Go runtime version: go1.12.13
2020/07/10 23:33:07 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 23:33:07 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 23:33:07 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T23:33:07.638670+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin298499470","network":"unix"}
2020/07/10 23:33:07 [INFO] terraform: building graph: GraphTypeValidate
2020-07-10T23:33:07.658+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 23:33:07 [INFO] Terraform version: 0.12.23  
2020/07/10 23:33:07 [INFO] Go runtime version: go1.12.13
2020/07/10 23:33:07 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 23:33:07 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 23:33:07 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T23:33:07.686684+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin951486440","network":"unix"}
2020-07-10T23:33:07.694+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T23:33:07.694+0100
2020/07/10 23:33:07 [INFO] Terraform version: 0.12.23  
2020/07/10 23:33:07 [INFO] Go runtime version: go1.12.13
2020/07/10 23:33:07 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 23:33:07 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 23:33:07 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T23:33:07.717826+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin865888519","network":"unix"}
2020-07-10T23:33:07.720+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T23:33:07.781+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T23:33:07.781+0100
2020/07/10 23:33:07 [INFO] backend/local: apply calling Refresh
2020/07/10 23:33:07 [INFO] terraform: building graph: GraphTypeRefresh
2020-07-10T23:33:07.980+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T23:33:08.010+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T23:33:08.010+0100
2020-07-10T23:33:08.034+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T23:33:08.092+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T23:33:08.092+0100
2020/07/10 23:33:18 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 23:33:18 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 23:33:18 [WARN] no schema for provisioner "file" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 23:33:18 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.main, so provisioner block references cannot be detected
2020/07/10 23:33:21 [INFO] backend/local: apply calling Plan
2020/07/10 23:33:21 [INFO] terraform: building graph: GraphTypePlanDestroy
2020-07-10T23:33:21.406+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T23:33:21.444+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T23:33:21.444+0100
2020-07-10T23:33:21.469+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T23:33:21.525+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T23:33:21.525+0100
2020/07/10 23:33:24 [INFO] backend/local: apply calling Apply
2020/07/10 23:33:24 [INFO] terraform: building graph: GraphTypeApply
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-registry-ingress (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.default (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node data.template_file.registry-config (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node aws_iam_instance_profile.main (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket_policy.main (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node data.aws_vpc.main (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-subdirs (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node aws_key_pair.main (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node aws_instance.main (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node data.aws_ami.ubuntu (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node aws_security_group.allow-ssh-and-egress (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node aws_iam_role.main (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node data.template_cloudinit_config.init (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-subdirs (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node aws_iam_role_policy.bucket-root (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node aws_s3_bucket.encrypted (prepare state)
2020/07/10 23:33:24 DestroyEdgeTransformer: pruning unused resource node data.aws_iam_policy_document.bucket-root (prepare state)
2020-07-10T23:33:24.963+0100 [INFO]  plugin: configuring client automatic mTLS
2020/07/10 23:33:24 [INFO] Terraform version: 0.12.23  
2020/07/10 23:33:24 [INFO] Go runtime version: go1.12.13
2020/07/10 23:33:24 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "remote-exec"}
2020/07/10 23:33:24 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
remote-exec-provisioner (internal) 2020/07/10 23:33:24 [INFO] Starting provisioner plugin remote-exec
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T23:33:25.000444+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin303213409","network":"unix"}
2020-07-10T23:33:25.010+0100 [INFO]  plugin.terraform-provider-template_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-07-10T23:33:25.010+0100
2020/07/10 23:33:25 [INFO] Terraform version: 0.12.23  
2020/07/10 23:33:25 [INFO] Go runtime version: go1.12.13
2020/07/10 23:33:25 [INFO] CLI args: []string{"/usr/local/Cellar/tfenv/1.0.2/versions/0.12.23/terraform", "internal-plugin", "provisioner", "file"}
2020/07/10 23:33:25 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
file-provisioner (internal) 2020/07/10 23:33:25 [INFO] Starting provisioner plugin file
{"@level":"debug","@message":"plugin address","@timestamp":"2020-07-10T23:33:25.040580+01:00","address":"/var/folders/yr/9qk9x6nd3t78r184mcm12z5c0000gp/T/plugin485331528","network":"unix"}
2020-07-10T23:33:25.041+0100 [INFO]  plugin: configuring client automatic mTLS
2020-07-10T23:33:25.095+0100 [INFO]  plugin.terraform-provider-aws_v2.69.0_x4: configuring server automatic mTLS: timestamp=2020-07-10T23:33:25.095+0100
2020/07/10 23:34:31 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 131a4eab-64d3-4541-9af9-28dce63c5d70
2020/07/10 23:34:31 [ERROR] <root>: eval: *terraform.EvalSequence, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 131a4eab-64d3-4541-9af9-28dce63c5d70
2020/07/10 23:34:31 [ERROR] <root>: eval: *terraform.EvalOpFilter, err: Error deleting IAM Role (default): DeleteConflict: Cannot delete entity, must detach all policies first.
	status code: 409, request id: 131a4eab-64d3-4541-9af9-28dce63c5d70
