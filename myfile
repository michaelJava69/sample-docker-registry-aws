[0m[1mdata.template_file.registry-config: Refreshing state...[0m
[0m[1mdata.template_cloudinit_config.init: Refreshing state...[0m
[0m[1mdata.aws_vpc.main: Refreshing state...[0m
[0m[1mdata.aws_iam_policy_document.default: Refreshing state...[0m
[0m[1mdata.aws_iam_policy_document.bucket-subdirs: Refreshing state...[0m
[0m[1mdata.aws_ami.ubuntu: Refreshing state...[0m
[0m[1maws_key_pair.main: Refreshing state... [id=sample-key20200709182335496400000001][0m
[0m[1mdata.aws_iam_policy_document.bucket-root: Refreshing state...[0m
[0m[1maws_s3_bucket.encrypted: Refreshing state... [id=pipeline-docker-registry-bucket][0m
[0m[1maws_iam_role.main: Refreshing state... [id=default][0m
[0m[1maws_iam_role_policy.bucket-subdirs: Refreshing state... [id=default:bucket-subdirs-s3][0m
[0m[1maws_s3_bucket_policy.main: Refreshing state... [id=pipeline-docker-registry-bucket][0m
[0m[1maws_iam_instance_profile.main: Refreshing state... [id=instance-profile][0m
[0m[1maws_iam_role_policy.bucket-root: Refreshing state... [id=default:bucket-root-s3][0m
[0m[1maws_security_group.allow-ssh-and-egress: Refreshing state... [id=sg-01fe50bede4e9a790][0m
[0m[1maws_security_group.allow-registry-ingress: Refreshing state... [id=sg-0221cb0561f621210][0m
[0m[1maws_instance.main: Refreshing state... [id=i-077f72e6efdc18457][0m

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  [31m-[0m destroy
[0m
Terraform will perform the following actions:

[1m  # aws_iam_instance_profile.main[0m will be [1m[31mdestroyed[0m[0m
[0m  [31m-[0m[0m resource "aws_iam_instance_profile" "main" {
      [31m-[0m [0m[1m[0marn[0m[0m         = "arn:aws:iam::904806826062:instance-profile/instance-profile" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mcreate_date[0m[0m = "2020-07-09T18:23:37Z" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mid[0m[0m          = "instance-profile" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mname[0m[0m        = "instance-profile" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mpath[0m[0m        = "/" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mrole[0m[0m        = "default" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mroles[0m[0m       = [
          [31m-[0m [0m"default",
        ] [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0munique_id[0m[0m   = "AIPA5FKVQQBHFO7VIIFXY" [90m->[0m [0m[90mnull[0m[0m
    }

[1m  # aws_iam_role.main[0m will be [1m[31mdestroyed[0m[0m
[0m  [31m-[0m[0m resource "aws_iam_role" "main" {
      [31m-[0m [0m[1m[0marn[0m[0m                   = "arn:aws:iam::904806826062:role/default" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [31m-[0m [0mStatement = [
                  [31m-[0m [0m{
                      [31m-[0m [0mAction    = "sts:AssumeRole"
                      [31m-[0m [0mEffect    = "Allow"
                      [31m-[0m [0mPrincipal = {
                          [31m-[0m [0mService = "ec2.amazonaws.com"
                        }
                      [31m-[0m [0mSid       = ""
                    },
                ]
              [31m-[0m [0mVersion   = "2012-10-17"
            }
        ) [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mcreate_date[0m[0m           = "2020-07-09T18:23:35Z" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mforce_detach_policies[0m[0m = false [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mid[0m[0m                    = "default" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600 [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mname[0m[0m                  = "default" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mpath[0m[0m                  = "/" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mtags[0m[0m                  = {} [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0munique_id[0m[0m             = "AROA5FKVQQBHG7OTNJPMS" [90m->[0m [0m[90mnull[0m[0m
    }

[1m  # aws_iam_role_policy.bucket-root[0m will be [1m[31mdestroyed[0m[0m
[0m  [31m-[0m[0m resource "aws_iam_role_policy" "bucket-root" {
      [31m-[0m [0m[1m[0mid[0m[0m     = "default:bucket-root-s3" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mname[0m[0m   = "bucket-root-s3" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mpolicy[0m[0m = jsonencode(
            {
              [31m-[0m [0mStatement = [
                  [31m-[0m [0m{
                      [31m-[0m [0mAction   = [
                          [31m-[0m [0m"s3:ListBucketMultipartUploads",
                          [31m-[0m [0m"s3:ListBucket",
                          [31m-[0m [0m"s3:GetBucketLocation",
                        ]
                      [31m-[0m [0mEffect   = "Allow"
                      [31m-[0m [0mResource = "arn:aws:s3:::pipeline-docker-registry-bucket"
                      [31m-[0m [0mSid      = ""
                    },
                ]
              [31m-[0m [0mVersion   = "2012-10-17"
            }
        ) [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mrole[0m[0m   = "default" [90m->[0m [0m[90mnull[0m[0m
    }

[1m  # aws_iam_role_policy.bucket-subdirs[0m will be [1m[31mdestroyed[0m[0m
[0m  [31m-[0m[0m resource "aws_iam_role_policy" "bucket-subdirs" {
      [31m-[0m [0m[1m[0mid[0m[0m     = "default:bucket-subdirs-s3" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mname[0m[0m   = "bucket-subdirs-s3" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mpolicy[0m[0m = jsonencode(
            {
              [31m-[0m [0mStatement = [
                  [31m-[0m [0m{
                      [31m-[0m [0mAction   = [
                          [31m-[0m [0m"s3:PutObject",
                          [31m-[0m [0m"s3:ListMultipartUploadParts",
                          [31m-[0m [0m"s3:GetObject",
                          [31m-[0m [0m"s3:DeleteObject",
                          [31m-[0m [0m"s3:AbortMultipartUpload",
                        ]
                      [31m-[0m [0mEffect   = "Allow"
                      [31m-[0m [0mResource = "arn:aws:s3:::pipeline-docker-registry-bucket/*"
                      [31m-[0m [0mSid      = ""
                    },
                ]
              [31m-[0m [0mVersion   = "2012-10-17"
            }
        ) [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mrole[0m[0m   = "default" [90m->[0m [0m[90mnull[0m[0m
    }

[1m  # aws_instance.main[0m will be [1m[31mdestroyed[0m[0m
[0m  [31m-[0m[0m resource "aws_instance" "main" {
      [31m-[0m [0m[1m[0mami[0m[0m                          = "ami-00f6a0c18edb19300" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0marn[0m[0m                          = "arn:aws:ec2:eu-west-2:904806826062:instance/i-077f72e6efdc18457" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0massociate_public_ip_address[0m[0m  = true [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mavailability_zone[0m[0m            = "eu-west-2b" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mcpu_core_count[0m[0m               = 1 [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mcpu_threads_per_core[0m[0m         = 1 [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mdisable_api_termination[0m[0m      = false [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mebs_optimized[0m[0m                = false [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mget_password_data[0m[0m            = false [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mhibernation[0m[0m                  = false [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0miam_instance_profile[0m[0m         = "instance-profile" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mid[0m[0m                           = "i-077f72e6efdc18457" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0minstance_state[0m[0m               = "running" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0minstance_type[0m[0m                = "t2.micro" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mipv6_address_count[0m[0m           = 0 [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mipv6_addresses[0m[0m               = [] [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mkey_name[0m[0m                     = "Michael-EU-West2" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mmonitoring[0m[0m                   = false [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mprimary_network_interface_id[0m[0m = "eni-03d4e10c51a960f68" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mprivate_dns[0m[0m                  = "ip-172-31-19-224.eu-west-2.compute.internal" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mprivate_ip[0m[0m                   = "172.31.19.224" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mpublic_dns[0m[0m                   = "ec2-35-177-198-27.eu-west-2.compute.amazonaws.com" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mpublic_ip[0m[0m                    = "35.177.198.27" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0msecurity_groups[0m[0m              = [
          [31m-[0m [0m"allow-registry-ingress",
          [31m-[0m [0m"allow-ssh-and-egress",
        ] [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0msource_dest_check[0m[0m            = true [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0msubnet_id[0m[0m                    = "subnet-f20d7dbf" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mtags[0m[0m                         = {
          [31m-[0m [0m"Name" = "terraform-docker-registry"
        } [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mtenancy[0m[0m                      = "default" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0muser_data[0m[0m                    = "dd6dd3fbc7a6371b12c66660e27bdccda24faa51" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mvolume_tags[0m[0m                  = {} [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mvpc_security_group_ids[0m[0m       = [
          [31m-[0m [0m"sg-01fe50bede4e9a790",
          [31m-[0m [0m"sg-0221cb0561f621210",
        ] [90m->[0m [0m[90mnull[0m[0m

      [31m-[0m [0mcredit_specification {
          [31m-[0m [0m[1m[0mcpu_credits[0m[0m = "standard" [90m->[0m [0m[90mnull[0m[0m
        }

      [31m-[0m [0mmetadata_options {
          [31m-[0m [0m[1m[0mhttp_endpoint[0m[0m               = "enabled" [90m->[0m [0m[90mnull[0m[0m
          [31m-[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = 1 [90m->[0m [0m[90mnull[0m[0m
          [31m-[0m [0m[1m[0mhttp_tokens[0m[0m                 = "optional" [90m->[0m [0m[90mnull[0m[0m
        }

      [31m-[0m [0mroot_block_device {
          [31m-[0m [0m[1m[0mdelete_on_termination[0m[0m = true [90m->[0m [0m[90mnull[0m[0m
          [31m-[0m [0m[1m[0mdevice_name[0m[0m           = "/dev/sda1" [90m->[0m [0m[90mnull[0m[0m
          [31m-[0m [0m[1m[0mencrypted[0m[0m             = false [90m->[0m [0m[90mnull[0m[0m
          [31m-[0m [0m[1m[0miops[0m[0m                  = 100 [90m->[0m [0m[90mnull[0m[0m
          [31m-[0m [0m[1m[0mvolume_id[0m[0m             = "vol-06b0c14947d2595ac" [90m->[0m [0m[90mnull[0m[0m
          [31m-[0m [0m[1m[0mvolume_size[0m[0m           = 8 [90m->[0m [0m[90mnull[0m[0m
          [31m-[0m [0m[1m[0mvolume_type[0m[0m           = "gp2" [90m->[0m [0m[90mnull[0m[0m
        }
    }

[1m  # aws_key_pair.main[0m will be [1m[31mdestroyed[0m[0m
[0m  [31m-[0m[0m resource "aws_key_pair" "main" {
      [31m-[0m [0m[1m[0marn[0m[0m             = "arn:aws:ec2:eu-west-2:904806826062:key-pair/sample-key20200709182335496400000001" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mfingerprint[0m[0m     = "7f:b8:7b:ad:7e:55:5a:21:be:bc:c3:d0:75:23:35:d4" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mid[0m[0m              = "sample-key20200709182335496400000001" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mkey_name[0m[0m        = "sample-key20200709182335496400000001" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mkey_name_prefix[0m[0m = "sample-key" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mkey_pair_id[0m[0m     = "key-0a372c0652fea4bc7" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mpublic_key[0m[0m      = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUgIcIwhoKMP3YhGKSC9LpRIVmdrCPJuM7sZ3MfzOBvA7uuDcxQpivGBID0qzLGehGbR6c+1nX1B+QonJT3bq7wrB0B0Lu0oGTIUNVVpDQzaFJbs90TencAjzndZf5j7ok3Z5Az+SfaR2X7r70dO8gk15mRNiiXYfXp3gwRsGClRhynveh54UaUumiqD7ha8gx//Ro3KlTk0QSakNawPVxBUUCcZm0PTthW+F7q4LZkFf3Ils3dDGtWfb8dpki41lN01+owtkGlCIP7I40c1Jn+CVCjq7R7edtU4X/1+XSwff9VDbpwPWsZ9StC1GG7fFJHZGY/rsunX/IqANlKMV0ka1Y4LTDg64F4QpS3efzd/sOqoZgKNC6CaX43vIuO9v1mXPWC32UiNGPhEgtl8PyXGxbON7sPVLf9rxRYoBUM+3XoWdl+yGYYSqmKkkuSc+fL8LMNZSMXPtscVMG5j1ZCgbZ4btGuSqiG5LMPDBFXAYAESVZhGmGVfo1AB94Qp4dPprtc5OCB4IK1cl3H5/XEtGLf6VoIfxHZy8PZxuIzk/dPERabdDNG+e2TWvTDWiJPwP8lYX6fTojO+nfxIJReTtno8rgtaEN3fU5LtGdJufRtUuvecItikWd5+XeCpz0c2YPmUrA+i8x5f/uxnxHZyDCS8OV4G7TBQxFUow3Q== test@ops.tips" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mtags[0m[0m            = {} [90m->[0m [0m[90mnull[0m[0m
    }

[1m  # aws_s3_bucket.encrypted[0m will be [1m[31mdestroyed[0m[0m
[0m  [31m-[0m[0m resource "aws_s3_bucket" "encrypted" {
      [31m-[0m [0m[1m[0macl[0m[0m                         = "private" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0marn[0m[0m                         = "arn:aws:s3:::pipeline-docker-registry-bucket" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mbucket[0m[0m                      = "pipeline-docker-registry-bucket" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mbucket_domain_name[0m[0m          = "pipeline-docker-registry-bucket.s3.amazonaws.com" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mbucket_regional_domain_name[0m[0m = "pipeline-docker-registry-bucket.s3.eu-west-2.amazonaws.com" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mforce_destroy[0m[0m               = true [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mhosted_zone_id[0m[0m              = "Z3GKZC51ZF0DB4" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mid[0m[0m                          = "pipeline-docker-registry-bucket" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mregion[0m[0m                      = "eu-west-2" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mrequest_payer[0m[0m               = "BucketOwner" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mtags[0m[0m                        = {} [90m->[0m [0m[90mnull[0m[0m

      [31m-[0m [0mserver_side_encryption_configuration {
          [31m-[0m [0mrule {
              [31m-[0m [0mapply_server_side_encryption_by_default {
                  [31m-[0m [0m[1m[0msse_algorithm[0m[0m = "AES256" [90m->[0m [0m[90mnull[0m[0m
                }
            }
        }

      [31m-[0m [0mversioning {
          [31m-[0m [0m[1m[0menabled[0m[0m    = false [90m->[0m [0m[90mnull[0m[0m
          [31m-[0m [0m[1m[0mmfa_delete[0m[0m = false [90m->[0m [0m[90mnull[0m[0m
        }
    }

[1m  # aws_s3_bucket_policy.main[0m will be [1m[31mdestroyed[0m[0m
[0m  [31m-[0m[0m resource "aws_s3_bucket_policy" "main" {
      [31m-[0m [0m[1m[0mbucket[0m[0m = "pipeline-docker-registry-bucket" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mid[0m[0m     = "pipeline-docker-registry-bucket" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mpolicy[0m[0m = jsonencode(
            {
              [31m-[0m [0mStatement = [
                  [31m-[0m [0m{
                      [31m-[0m [0mAction    = [
                          [31m-[0m [0m"s3:PutObject",
                          [31m-[0m [0m"s3:GetObject",
                          [31m-[0m [0m"s3:DeleteObject",
                          [31m-[0m [0m"s3:ListMultipartUploadParts",
                          [31m-[0m [0m"s3:AbortMultipartUpload",
                        ]
                      [31m-[0m [0mEffect    = "Allow"
                      [31m-[0m [0mPrincipal = {
                          [31m-[0m [0mAWS = "arn:aws:iam::904806826062:role/default"
                        }
                      [31m-[0m [0mResource  = "arn:aws:s3:::pipeline-docker-registry-bucket/*"
                      [31m-[0m [0mSid       = "AddCannedAcl"
                    },
                  [31m-[0m [0m{
                      [31m-[0m [0mAction    = [
                          [31m-[0m [0m"s3:ListBucket",
                          [31m-[0m [0m"s3:GetBucketLocation",
                          [31m-[0m [0m"s3:ListBucketMultipartUploads",
                        ]
                      [31m-[0m [0mEffect    = "Allow"
                      [31m-[0m [0mPrincipal = {
                          [31m-[0m [0mAWS = "arn:aws:iam::904806826062:role/default"
                        }
                      [31m-[0m [0mResource  = "arn:aws:s3:::pipeline-docker-registry-bucket"
                    },
                ]
              [31m-[0m [0mVersion   = "2012-10-17"
            }
        ) [90m->[0m [0m[90mnull[0m[0m
    }

[1m  # aws_security_group.allow-registry-ingress[0m will be [1m[31mdestroyed[0m[0m
[0m  [31m-[0m[0m resource "aws_security_group" "allow-registry-ingress" {
      [31m-[0m [0m[1m[0marn[0m[0m                    = "arn:aws:ec2:eu-west-2:904806826062:security-group/sg-0221cb0561f621210" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mdescription[0m[0m            = "Allows ingress SSH traffic and egress to any address." [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0megress[0m[0m                 = [] [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mid[0m[0m                     = "sg-0221cb0561f621210" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mingress[0m[0m                = [
          [31m-[0m [0m{
              [31m-[0m [0mcidr_blocks      = [
                  [31m-[0m [0m"0.0.0.0/0",
                ]
              [31m-[0m [0mdescription      = ""
              [31m-[0m [0mfrom_port        = 5000
              [31m-[0m [0mipv6_cidr_blocks = []
              [31m-[0m [0mprefix_list_ids  = []
              [31m-[0m [0mprotocol         = "tcp"
              [31m-[0m [0msecurity_groups  = []
              [31m-[0m [0mself             = false
              [31m-[0m [0mto_port          = 5000
            },
          [31m-[0m [0m{
              [31m-[0m [0mcidr_blocks      = [
                  [31m-[0m [0m"0.0.0.0/0",
                ]
              [31m-[0m [0mdescription      = ""
              [31m-[0m [0mfrom_port        = 80
              [31m-[0m [0mipv6_cidr_blocks = []
              [31m-[0m [0mprefix_list_ids  = []
              [31m-[0m [0mprotocol         = "tcp"
              [31m-[0m [0msecurity_groups  = []
              [31m-[0m [0mself             = false
              [31m-[0m [0mto_port          = 80
            },
        ] [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mname[0m[0m                   = "allow-registry-ingress" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mowner_id[0m[0m               = "904806826062" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mtags[0m[0m                   = {
          [31m-[0m [0m"Name" = "allow_registry-ingress"
        } [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mvpc_id[0m[0m                 = "vpc-b31026da" [90m->[0m [0m[90mnull[0m[0m
    }

[1m  # aws_security_group.allow-ssh-and-egress[0m will be [1m[31mdestroyed[0m[0m
[0m  [31m-[0m[0m resource "aws_security_group" "allow-ssh-and-egress" {
      [31m-[0m [0m[1m[0marn[0m[0m                    = "arn:aws:ec2:eu-west-2:904806826062:security-group/sg-01fe50bede4e9a790" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mdescription[0m[0m            = "Allows ingress SSH traffic and egress to any address." [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0megress[0m[0m                 = [
          [31m-[0m [0m{
              [31m-[0m [0mcidr_blocks      = [
                  [31m-[0m [0m"0.0.0.0/0",
                ]
              [31m-[0m [0mdescription      = ""
              [31m-[0m [0mfrom_port        = 0
              [31m-[0m [0mipv6_cidr_blocks = []
              [31m-[0m [0mprefix_list_ids  = []
              [31m-[0m [0mprotocol         = "-1"
              [31m-[0m [0msecurity_groups  = []
              [31m-[0m [0mself             = false
              [31m-[0m [0mto_port          = 0
            },
        ] [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mid[0m[0m                     = "sg-01fe50bede4e9a790" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mingress[0m[0m                = [
          [31m-[0m [0m{
              [31m-[0m [0mcidr_blocks      = [
                  [31m-[0m [0m"0.0.0.0/0",
                ]
              [31m-[0m [0mdescription      = ""
              [31m-[0m [0mfrom_port        = 22
              [31m-[0m [0mipv6_cidr_blocks = []
              [31m-[0m [0mprefix_list_ids  = []
              [31m-[0m [0mprotocol         = "tcp"
              [31m-[0m [0msecurity_groups  = []
              [31m-[0m [0mself             = false
              [31m-[0m [0mto_port          = 22
            },
        ] [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mname[0m[0m                   = "allow-ssh-and-egress" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mowner_id[0m[0m               = "904806826062" [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mtags[0m[0m                   = {
          [31m-[0m [0m"Name" = "allow_ssh-and-egress"
        } [90m->[0m [0m[90mnull[0m[0m
      [31m-[0m [0m[1m[0mvpc_id[0m[0m                 = "vpc-b31026da" [90m->[0m [0m[90mnull[0m[0m
    }

[0m[1mPlan:[0m 0 to add, 0 to change, 10 to destroy.[0m

[33m
[1m[33mWarning: [0m[0m[1mInterpolation-only expressions are deprecated[0m

[0m  on bucket.tf line 10, in resource "aws_s3_bucket" "encrypted":
  10:   bucket        = [4m"${var.bucket}"[0m
[0m
Terraform 0.11 and earlier required all non-constant expressions to be
provided via interpolation syntax, but this pattern is now deprecated. To
silence this warning, remove the "${ sequence from the start and the }"
sequence from the end of this expression, leaving just the inner expression.

Template interpolation syntax is still used to construct strings from
expressions when the template includes multiple interpolation sequences or a
mixture of literal strings and interpolations. This deprecation applies only
to templates that consist entirely of a single interpolation sequence.

(and 16 more similar warnings elsewhere)
[0m[0m
[0m[1mDo you really want to destroy all resources?[0m
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  [1mEnter a value:[0m [0m
Interrupt received.
Please wait for Terraform to exit or data loss may occur.
Gracefully shutting down...
